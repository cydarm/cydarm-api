openapi: 3.0.0
info:
  contact:
    email: support@cydarm.com
    name: Cydarm Support
    url: https://cydarm.com
  description: Cydarm Secure Case Management Platform
  license:
    name: Copyright 2025 Cydarm Technologies Pty Ltd
  title: Cydarm API
  version: v0.8.51.0
servers:
  - url: http://localhost/cydarm-api
  - url: https://localhost/cydarm-api
  - url: '{protocol}://{hostname}.{domain}{port}/{basePath}/{apiVersion}'
    variables:
      protocol:
        default: https
      hostname:
        default: app
      domain:
        default: cydarm.com
      port:
        default: ''
      basePath:
        default: cydarm-api
      apiVersion:
        default: v0.9
tags:
  - name: acl
    x-displayName: acl
  - name: case
    x-displayName: case
  - name: actuator
    x-displayName: actuator
  - name: auth
    x-displayName: auth
  - name: case-cache
    x-displayName: case-cache
  - name: case-severity
    x-displayName: case-severity
  - name: case-status
    x-displayName: case-status
  - name: case-tag
    x-displayName: case-tag
  - name: sla
    x-displayName: sla
  - name: data
    x-displayName: data
  - name: connector
    x-displayName: connector
  - name: connector-type
    x-displayName: connector-type
  - name: form
    x-displayName: form
  - name: group
    x-displayName: group
  - name: meta
    x-displayName: meta
  - name: metrics
    x-displayName: metrics
  - name: report
    x-displayName: report
  - name: notify
    x-displayName: notify
  - name: org
    x-displayName: org
  - name: org-prop
    x-displayName: org-prop
  - name: playbook
    x-displayName: playbook
  - name: playbook-action
    x-displayName: playbook-action
  - name: resource
    x-displayName: resource
  - name: stix
    x-displayName: stix
  - name: sys-prop
    x-displayName: sys-prop
  - name: third-party
    x-displayName: third-party
  - name: user
    x-displayName: user
  - name: user-prop
    x-displayName: user-prop
  - description: Editable knowledge base
    name: wiki
    x-displayName: wiki
  - description: Risk register
    name: risk
    x-displayName: risk
  - description: Connector operation types
    name: connector-operation-type
    x-displayName: connector-operation-type
  - description: Event triggers
    name: event-trigger
    x-displayName: event-trigger
  - description: Case data
    name: case-data
    x-displayName: case-data
  - description: Atomic operations
    name: operations
    x-displayName: operations
paths:
  /acl:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/acl'
                type: array
          description: Fetched list of ACLs and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - acl
      operationId: GetAcls
      summary: Gets a list of ACLs.
      security:
        - api_key: []
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl'
          description: The ACL already exists.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl'
          description: The request has succeeded and the new ACL has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - acl
      operationId: CreateAcl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acl'
        description: The ACL to create
        required: true
      summary: Creates an ACL.
      security:
        - api_key: []
  /acl/search:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl'
          description: The ACL exists.
        '404':
          description: The ACL does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - acl
      operationId: SearchAcl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/acl'
        description: The ACL to search for
        required: true
      summary: Searches for ACLs.
      security:
        - api_key: []
  /acl/session/{sessionUuid}:
    get:
      parameters:
        - description: The UUID of the session to retrieve.
          in: path
          name: sessionUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl'
          description: Fetched default ACL and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - acl
      operationId: GetDefaultAclForSession
      summary: Gets the default ACL for the current session.
      security:
        - api_key: []
  /acl/{aclUuid}:
    delete:
      parameters:
        - description: The UUID of the ACL to delete.
          in: path
          name: aclUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The ACL was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - acl
      operationId: DeleteAcl
      summary: Deletes an ACL.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the ACL to retrieve.
          in: path
          name: aclUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/acl'
          description: Fetched ACL and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - acl
      operationId: GetAcl
      summary: Gets an ACL.
      security:
        - api_key: []
  /action-instance/{actionInstanceUuid}/data:
    get:
      parameters:
        - description: The case action instance to get from.
          in: path
          name: actionInstanceUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dataStub'
                type: array
          description: The case action data has been returned.
        '400':
          description: Bad request.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetActionInstanceData
      summary: GET a data item on a case or case playbook action.
      security:
        - api_key: []
    post:
      parameters:
        - description: The case action instance to add to.
          in: path
          name: actionInstanceUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStub'
          description: The case action data has been created.
        '400':
          description: Bad request.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: CreateActionInstanceData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseDataItemRequest'
        description: The data item to create.
        required: true
      summary: Creates a data item on a case action.
      security:
        - api_key: []
  /actuator:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/actuator'
                type: array
          description: Fetched the list of actuators s and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - actuator
      description: Gets all actuators
      operationId: GetActuators
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: The actuator has been created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - actuator
      description: Creates an actuator
      operationId: CreateActuator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createActuatorRequest'
        description: The actuator to create.
        required: true
      security:
        - api_key: []
  /actuator/{actuatorId}:
    get:
      parameters:
        - description: The id of the actuator
          in: path
          name: actuatorId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actuator'
          description: Fetched the actuators and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - actuator
      description: Gets specified actuator
      operationId: GetActuator
      security:
        - api_key: []
    put:
      parameters:
        - description: The id of the actuator to update.
          in: path
          name: actuatorId
          required: true
          schema:
            type: string
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actuator'
          description: Updated the actuator
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - actuator
      description: Updates the specified actuator
      operationId: UpdateActuator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateActuatorRequest'
        description: The updated actuator request.
        required: true
      security:
        - api_key: []
  /actuator/{actuatorId}/heartbeat:
    post:
      parameters:
        - description: The id of the actuator
          in: path
          name: actuatorId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The actuator heartbeat has been updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - actuator
      description: Sets the actuator's last heartbeat time
      operationId: ActuatorHeartbeat
      security:
        - api_key: []
  /auth/jwt:
    post:
      parameters:
        - description: The external JWT to authenticate with, as a token
          in: header
          name: X-Cydarm-Authz
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Successfully authenticated.
          headers:
            Access-Token:
              description: A Cydarm-derived JWT
              schema:
                type: string
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Authentication failed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: Creates a session using a JWT from an external source
      operationId: doAuthWithJwt
      security:
        - api_key: []
  /auth/password:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionDetails'
          description: Successfully authenticated.
          headers:
            Access-Token:
              description: A Cydarm-derived JWT
              schema:
                type: string
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Authentication failed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: Creates a session by using username and password in the request body
      operationId: doAuthWithPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthCredentialsRequest'
        description: The base64 encoded user's credentials
        required: true
      security:
        - api_key: []
  /auth/refresh:
    post:
      parameters:
        - description: The Cydarm-derived JWT to refresh, as a token
          in: header
          name: X-Cydarm-Authz
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sessionDetails'
          description: Successfully authenticated.
          headers:
            Access-Token:
              description: A Cydarm-derived JWT
              schema:
                type: string
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Authentication failed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: Refresh session authorization
      operationId: doAuthRefresh
      security:
        - api_key: []
  /auth/saml:
    get:
      parameters:
        - description: A relay state variable to send
          in: query
          name: redirect
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: Fetched SAML information and transmitted in the message body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Authentication failed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: Gets a URL for SAML authentication
      operationId: getSamlUrl
      security:
        - api_key: []
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Successfully authenticated.
          headers:
            Access-Token:
              description: A Cydarm-derived JWT
              schema:
                type: string
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Unauthorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: Creates a session based on a SAML assertion of an external IdP
      operationId: doAuthWithSamlCallback
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                RelayState:
                  description: >-
                    The RelayState returned by the IdP, as provided during the
                    auth call
                  type: string
                SAMLResponse:
                  description: The IdP's response to the user's authentication attempt
                  type: string
              required:
                - SAMLResponse
              type: object
      security:
        - api_key: []
  /auth/session/{sessionUuid}:
    delete:
      parameters:
        - description: The UUID of the session to end
          in: path
          name: sessionUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Authentication failed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Errors
      tags:
        - auth
      description: Ends the current session
      operationId: endSession
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the session to retrieve
          in: path
          name: sessionUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: >-
            Fetched user information for the current session and transmitted in
            the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: Gets user information for the current session
      operationId: getSessionInfo
      security:
        - api_key: []
  /auth/totp/{userUuid}:
    delete:
      parameters:
        - description: The UUID of the user to delete TOTP config.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: User has TOTP enrolled
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: Delete user TOTP information
      operationId: DeleteTotpConfig
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the user to retrieve TOTP config.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userTotpConfig'
          description: >-
            Fetched user totp information and transmitted it in the message
            body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: Gets user TOTP information
      operationId: GetTotpConfig
      security:
        - api_key: []
    post:
      parameters:
        - description: The UUID of the user to enrol in TOTP.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TotpSecret'
          description: Successfully initialised.
        '403':
          description: >-
            The request does not have sufficient permissions to enrol the user
            in TOTP.
        '404':
          description: >-
            Could not find the requested user or insufficient permissions to
            find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: Initialises a TOTP enrolment, returns the secret and QR code
      operationId: InitialiseTotpEnrolment
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the user to enrol in TOTP.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully validated.
        '400':
          description: The supplied user has not had their TOTP enrolment initialised.
        '401':
          description: >-
            The TOTP code was invalid. (Or the validating user is not
            authenticated).
        '403':
          description: >-
            The request does not have sufficient permissions to validate user's
            code.
        '404':
          description: >-
            Could not find the requested user or insufficient permissions to
            find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - auth
      description: >-
        Validates an initialised but incomplete TOTP enrolment with the supplied
        QR code
      operationId: ValidateTotpEnrolment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TotpCode'
        description: The TOTP code.
        required: true
      security:
        - api_key: []
  /case:
    get:
      parameters:
        - description: The page offset to retrieve.
          in: query
          name: page[number]
          required: true
          schema:
            type: integer
        - description: The number of items per page.
          in: query
          name: page[size]
          required: true
          schema:
            type: integer
        - description: Earliest creation timestamp
          in: query
          name: filter[create_start]
          schema:
            type: string
        - description: Latest creation timestamp
          in: query
          name: filter[create_end]
          schema:
            type: string
        - description: Earliest modification timestamp
          in: query
          name: filter[mod_start]
          schema:
            type: string
        - description: Latest modification timestamp
          in: query
          name: filter[mod_end]
          schema:
            type: string
        - description: Comma-delimited list of state names
          in: query
          name: filter[state]
          schema:
            type: string
        - description: Comma-delimited list of org names
          in: query
          name: filter[org]
          schema:
            type: string
        - description: Comma-delimited list of assignee names
          in: query
          name: filter[assignee]
          schema:
            type: string
        - description: Comma-delimited list of severity names
          in: query
          name: filter[severity]
          schema:
            type: string
        - description: Comma-delimited list of tags to include
          in: query
          name: filter[inc_tag]
          schema:
            type: string
        - description: Comma-delimited list of tags to exclude
          in: query
          name: filter[exc_tag]
          schema:
            type: string
        - description: Text to search for in case locator, description, and metadata values
          in: query
          name: filter[text]
          schema:
            type: string
        - description: Comma-delimited list of parent case uuids
          in: query
          name: filter[parent_uuid]
          schema:
            type: string
        - description: >-
            Field to sort on, one of: description, created, modified, org,
            assignee, status, severity, severity_name, min_sla_name,
            min_sla_seconds, closed, actions, completed_actions
          in: query
          name: sort
          schema:
            type: string
        - description: Sort direction, one of asc or desc
          in: query
          name: sort_dir
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/caseListQueryResponse'
          description: Fetched the list of cases and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCasesFiltered
      summary: Gets a list of cases, using filtering and sorting.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: The case has been created.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: CreateCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/case'
        description: The case to create.
        required: true
      summary: Creates a case.
      security:
        - api_key: []
  /case-cache:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/caseCacheEntry'
                type: array
          description: >-
            Fetched list of cases from the cache and transmitted in the message
            body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-cache
      description: Gets a list of cases from the cache
      operationId: GetCaseCache
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: A case cache entry has been created.
        '401':
          description: Authorization information is missing or invalid.
        '409':
          description: Request conflict with the current state of the server.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-cache
      description: Creates a case cache entry
      operationId: AddCaseCache
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addCaseRequest'
        description: The case to add
        required: true
      security:
        - api_key: []
  /case-cache/{caseUuid}:
    delete:
      parameters:
        - description: The UUID of the case to remove.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        '401':
          description: Authorization information is missing or invalid.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-cache
      description: Deletes a case from the cache
      operationId: DeleteCaseCache
      security:
        - api_key: []
  /case-severity:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/caseSeverity'
                type: array
          description: Fetched list of case severities transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-severity
      operationId: GetSeverity
      summary: Gets a list of case severities.
      security:
        - api_key: []
  /case-status:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/caseStatus'
                type: array
          description: >-
            Fetched the list of case statuses and transmitted in the message
            body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-status
      operationId: GetStatus
      summary: Gets a list of case statuses.
      security:
        - api_key: []
  /case-tag:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/caseTag'
                type: array
          description: Fetched the list of case tags and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-tag
      operationId: GetCaseTags
      summary: Gets a list of case tags.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Case tag has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-tag
      operationId: CreateCaseTag
      requestBody:
        $ref: '#/components/requestBodies/caseTag'
      summary: Creates a case tag.
      security:
        - api_key: []
  /case-tag/{tagUuid}:
    delete:
      parameters:
        - description: The case tag to delete.
          in: path
          name: tagUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-tag
      operationId: DeleteCaseTag
      summary: Delete a caseTag .
      security:
        - api_key: []
    get:
      parameters:
        - description: The case tag to retrieve.
          in: path
          name: tagUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/caseTag'
          description: Fetched the case tag and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-tag
      operationId: GetCaseTagWithUuid
      summary: Retrieve case tag with uuid.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the case tag to update.
          in: path
          name: tagUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStub'
          description: The resource was updated successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested data item not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-tag
      operationId: UpdateCaseTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseTag'
        description: The case tag to update.
        required: true
      summary: Updates a case tag item.
      security:
        - api_key: []
  /case/locator/{locator}:
    get:
      parameters:
        - description: The locator of the case to retrieve.
          in: path
          name: locator
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/case'
          description: >-
            Fetched the the case by locator, and transmitted in the message
            body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCaseByLocator
      summary: Gets a case by locator.
      security:
        - api_key: []
  /case/quick-search:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/quickSearchResult'
          description: The search results.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCaseQuickSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseQuickSearchRequest'
        description: The terms to search for.
        required: true
      summary: Search cases.
      security:
        - api_key: []
  /case/{caseUuid}:
    get:
      parameters:
        - description: The UUID of the case to retrieve.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/case'
          description: Fetched the case and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCase
      summary: Gets a case.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the case to update.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The case was updated successfully.
        '401':
          description: Not authorised to update case.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: UpdateCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/case'
        description: The case to update.
        required: true
      summary: Updates a case.
      security:
        - api_key: []
  /case/{caseUuid}/action:
    get:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/playbookActionInstance'
                type: array
          description: Fetched list of actions and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCaseActions
      summary: Gets a list of action for a case.
      security:
        - api_key: []
  /case/{caseUuid}/action-instance/{actionInstanceUuid}:
    delete:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the action instance to update.
          in: path
          name: actionInstanceUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: RemoveCaseAction
      summary: Remove an action from a case.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the action instance to update.
          in: path
          name: actionInstanceUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Case action was updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: UpdateCaseAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casePlaybookActionUpdateRequest'
        description: The action update request
        required: true
      summary: Update an action for a case.
      security:
        - api_key: []
  /case/{caseUuid}/action/{actionUuid}:
    post:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the action.
          in: path
          name: actionUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playbookActionInstance'
          description: The status of the create case action request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: AddCaseAction
      summary: Add an action to a case.
      security:
        - api_key: []
  /case/{caseUuid}/data:
    get:
      parameters:
        - description: The case to get data for.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/caseAndActionDataStubList'
                  description: The data item has been returned.
                type: array
          description: Fetched list of data items and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Requested list of data items not found or insufficient permissions
            to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCaseDataList
      summary: Gets a list of data items for a case.
      security:
        - api_key: []
    post:
      parameters:
        - description: The case to add to.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStub'
          description: The case data has been created.
        '400':
          description: Failed to encrypt payload.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: CreateCaseData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseDataItemRequest'
        description: The data item to create.
        required: true
      summary: Creates a data item on a case.
      security:
        - api_key: []
  /case/{caseUuid}/data/{parentStubId}:
    post:
      parameters:
        - description: The case to add to.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The parent to add under.
          in: path
          name: parentStubId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStub'
          description: The data item on the case has been created.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested parent not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      deprecated: true
      description: >-
        This endpoint is deprecated. Use endpoint /data/{parentStudUuid}
        instead.
      operationId: CreateCaseDataUnderParent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseDataItemRequest'
        description: The data item to create.
        required: true
      summary: Creates a data item on a case, under a parent.
      security:
        - api_key: []
  /case/{caseUuid}/history:
    put:
      parameters:
        - description: The UUID of the case to update.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The case was updated successfully.
        '401':
          description: Not authorised to update case.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: UpdateCaseHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/case'
        description: The case to update.
        required: true
      summary: Updates a case.
      security:
        - api_key: []
  /case/{caseUuid}/history/data:
    post:
      parameters:
        - description: The case to add to.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStub'
          description: The historic case data has been created.
        '400':
          description: Failed to encrypt payload.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: CreateHistoricCaseData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseDataItemRequest'
        description: The data item to create.
        required: true
      summary: Retroactively creates a data item on a case.
      security:
        - api_key: []
  /case/{caseUuid}/member:
    get:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: >-
            Fetched the list of case group UUIDs and transmitted in the message
            body.
        '400':
          description: caseUuid does not represent a valid UUID.
        '404':
          description: Requested case not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      description: Returns the UUID of all case groups that contain a given case
      operationId: GetGroupsContainingCase
      security:
        - api_key: []
  /case/{caseUuid}/member/{memberUuid}:
    delete:
      parameters:
        - description: The UUID of the case to update.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the case to remove.
          in: path
          name: memberUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The case was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: CaseGroupRemoveMember
      summary: Removes a case member from a case.
      security:
        - api_key: []
    post:
      parameters:
        - description: The UUID of the case to update.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the case to add.
          in: path
          name: memberUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: The case has been created as a member of another case.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: CaseGroupAddMember
      summary: Adds a case as a member of another case.
      security:
        - api_key: []
  /case/{caseUuid}/meta:
    post:
      parameters:
        - description: The UUID of the case to update.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Case metadata has been created.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: UpdateCaseMeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metaNameManipulation'
        description: The case metadata to create.
        required: true
      summary: Creates a case metadata entry.
      security:
        - api_key: []
  /case/{caseUuid}/playbook:
    get:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/atcPlaybook'
                type: array
          description: Fetched list of playbooks and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCasePlaybooks
      summary: Gets a list of playbooks for a case.
      security:
        - api_key: []
  /case/{caseUuid}/playbook/{casePlaybookUuid}:
    delete:
      parameters:
        - description: The UUID of the case to remove from.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the playbook to remove.
          in: path
          name: casePlaybookUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: DeleteCasePlaybook
      summary: Removes a playbook from a case.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the playbook.
          in: path
          name: casePlaybookUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/playbookActionInstance'
                type: array
          description: >-
            A list of playbook action instances has been fetched and is returned
            in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCasePlaybook
      summary: Gets the status of each action, for a playbook on a given case.
      security:
        - api_key: []
    post:
      parameters:
        - description: The UUID of the case to which the playbook will be assigned.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the playbook to be assigned.
          in: path
          name: casePlaybookUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: The status of the create case playbook request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: CreateCasePlaybook
      summary: Creates a playbook.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the playbook instance to be updated.
          in: path
          name: casePlaybookUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: UpdateCasePlaybook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casePlaybookUpdateRequest'
        description: The update request
        required: true
      summary: Updates a playbook instance on a case.
      security:
        - api_key: []
  /case/{caseUuid}/playbook/{casePlaybookUuid}/action-instance/{actionInstanceUuid}:
    put:
      parameters:
        - description: The UUID of the case to update.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the playbook to update.
          in: path
          name: casePlaybookUuid
          required: true
          schema:
            type: string
        - description: The UUID of the action instance to update.
          in: path
          name: actionInstanceUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Playbook was updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: PutCasePlaybookAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/casePlaybookActionUpdateRequest'
        description: The action update request
        required: true
      summary: Updates a playbook action for a given playbook on a given case.
      security:
        - api_key: []
  /case/{caseUuid}/playbook/{casePlaybookUuid}/action-instance/{actionInstanceUuid}/case-tag/{tagUuid}:
    delete:
      parameters:
        - description: The UUID of the case to remove from.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the playbook to remove.
          in: path
          name: casePlaybookUuid
          required: true
          schema:
            type: string
        - description: The UUID of the action instance to update.
          in: path
          name: actionInstanceUuid
          required: true
          schema:
            type: string
        - description: The UUID of the tag to remove.
          in: path
          name: tagUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: DeleteCasePlaybookActionTag
      summary: Removes a tag from a case playbook action.
      security:
        - api_key: []
    post:
      parameters:
        - description: The UUID of the case to add from.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The UUID of the playbook to add.
          in: path
          name: casePlaybookUuid
          required: true
          schema:
            type: string
        - description: The UUID of the action instance to update.
          in: path
          name: actionInstanceUuid
          required: true
          schema:
            type: string
        - description: The UUID of the tag to add.
          in: path
          name: tagUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was added successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: AddCasePlaybookActionTag
      summary: Add a tag from a case playbook action.
      security:
        - api_key: []
  /case/{caseUuid}/sla:
    get:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/sla'
                type: array
          description: Fetched the list of SLAs and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authorization for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sla
      operationId: GetCaseSlas
      summary: Gets a list of SLAs for a case.
      security:
        - api_key: []
  /case/{caseUuid}/sla-warning:
    get:
      parameters:
        - description: The UUID of the case.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/sla'
                type: array
          description: >-
            Fetched the list of SLA warnings and transmitted in the message
            body.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authorization for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sla
      operationId: GetCaseSlaWarnings
      summary: Gets a list of SLA warnings for a case.
      security:
        - api_key: []
  /case/{caseUuid}/stix:
    get:
      parameters:
        - description: The case to fetch STIX data for.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/caseDataStixRequest'
                type: array
          description: Fetched list of STIX data items and transmitted in the message body.
        '204':
          description: There is no content to send for this request.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Requested list of STIX data items not found or insufficient
            permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCaseStix
      summary: Gets a list of STIX data items for a case.
      security:
        - api_key: []
    post:
      parameters:
        - description: The case to add to.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStub'
          description: The STIX item has been created.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: Requested case not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: CreateCaseStixData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseDataStixRequest'
        description: The data item to create.
        required: true
      summary: Creates a STIX item on a case.
      security:
        - api_key: []
  /case/{caseUuid}/stix/{parentStubId}:
    post:
      parameters:
        - description: The case to add to.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
        - description: The parent to add under.
          in: path
          name: parentStubId
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStub'
          description: The STIX item has been created on a case.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: Requested parent not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: CreateCaseStixDataUnderParent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseDataStixRequest'
        description: The data item to create.
        required: true
      summary: Creates a STIX item on a case, under a parent.
      security:
        - api_key: []
  /case/{caseUuid}/tag:
    delete:
      parameters:
        - description: The case to remove a tag from.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The resource was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-tag
      operationId: RemoveCaseTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseTag'
        description: The case tag to remove.
        required: true
      summary: Removes a tag from a case.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the case to retrieve tags from.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/caseTag'
          description: >-
            Fetched the list of case tags for the case and transmitted in the
            message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-tag
      operationId: GetTagsForCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseTag'
        description: The case tag to create.
        required: true
      summary: Gets a list of tags for the case.
      security:
        - api_key: []
    post:
      parameters:
        - description: The case to add to.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/caseStatus'
          description: The status of the action is transmitted in the message body.
        '208':
          description: Tag has already been added to case.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case-tag
      operationId: AddCaseTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseTagMapRequest'
        description: The case tag to add.
        required: true
      summary: Adds a tag to a case.
      security:
        - api_key: []
  /case/{caseUuid}/watch:
    delete:
      parameters:
        - description: The case to remove the watcher from.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The watcher was removed successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - data
      operationId: RemoveWatcherFromCase
      summary: Removes a watcher from a case.
      security:
        - api_key: []
    get:
      parameters:
        - description: The case to add to.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/user'
                type: array
          description: Fetched the list of users and transmitted in message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: GetCaseWatchers
      summary: Gets a list of watchers for a case.
      security:
        - api_key: []
    post:
      parameters:
        - description: The case to add user to as new watcher.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The status response for the create request.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Added a new watcher to a case.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - case
      operationId: AddWatcherToCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/watcherSettings'
        description: The settings to create the watcher with.
      summary: Adds a new watcher to a case.
      security:
        - api_key: []
  /connector:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/connector'
                type: array
          description: Fetched the list of connectors and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - connector
      description: Gets all connectors
      operationId: GetConnectors
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: The connector has been created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - connector
      description: Creates a connector
      operationId: CreateConnector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createConnectorRequest'
        description: The connector to create.
        required: true
      security:
        - api_key: []
  /connector-type:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/connectorType'
                type: array
          description: >-
            Fetched the list of connector types and transmitted in the message
            body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - connector
      description: Gets all connector types
      operationId: GetConnectorTypes
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Created the connector type
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - connector
      description: Creates a connector type
      operationId: PostConnectorType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectorTypeCreateRequest'
        description: The connector type to create
        required: true
      security:
        - api_key: []
  /connector-type/{connectorTypeId}:
    get:
      parameters:
        - description: The id of the actuator type
          in: path
          name: connectorTypeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connectorType'
          description: Fetched the connector type and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - connector
      description: Gets the specified connector type
      operationId: GetConnectorType
      security:
        - api_key: []
    put:
      parameters:
        - description: The id of the actuator type to update.
          in: path
          name: connectorTypeId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Updated the connector type
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - connector-type
      description: Updates the specified connector
      operationId: UpdateConnectorType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connectorTypeUpdateRequest'
        description: The updated connector request.
        required: true
      security:
        - api_key: []
  /connector/{connectorId}:
    delete:
      parameters:
        - description: The id of the connector to delete.
          in: path
          name: connectorId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted the connector
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - connector
      description: Deletes the specified connector
      operationId: DeleteConnector
      security:
        - api_key: []
    get:
      parameters:
        - description: The id of the connector
          in: path
          name: connectorId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connector'
          description: Fetched the connector and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - connector
      description: Gets specified connector
      operationId: GetConnector
      security:
        - api_key: []
    put:
      parameters:
        - description: The id of the connector to update.
          in: path
          name: connectorId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Updated the connector
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - connector
      description: Updates the specified connector
      operationId: UpdateConnector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateConnectorRequest'
        description: The update connector request.
        required: true
      security:
        - api_key: []
  /data:
    get:
      parameters:
        - description: A relay state variable to send
          in: query
          name: uuids
          schema:
            type: string
        - description: timezone for the data object
          in: query
          name: timezone
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dataObject'
                type: array
          description: Fetched the data object and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested data object not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - data
      operationId: GetDataObjectsByUuidList
      summary: Gets a list of data object.
      security:
        - api_key: []
  /data/{dataUuid}:
    delete:
      parameters:
        - description: The UUID of the data object to delete.
          in: path
          name: dataUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The resource was deleted successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested data item not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - data
      operationId: DeleteData
      summary: Deletes a data item.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the data object to retrieve.
          in: path
          name: dataUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataObject'
          description: Fetched the data object and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested data object not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - data
      operationId: GetDataObject
      summary: Gets a data object.
      security:
        - api_key: []
    post:
      parameters:
        - description: The UUID of the data object to update.
          in: path
          name: dataUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStub'
          description: The reply was created successfully.
        '400':
          description: Failed to encrypt payload.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - data
      operationId: PostDataReply
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataObject'
        description: The data object to update.
        required: true
      summary: Adds a reply to a comment.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the data object to update.
          in: path
          name: dataUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStub'
          description: The resource was updated successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested data item not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - data
      operationId: UpdateData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataObject'
        description: The data object to update.
        required: true
      summary: Updates a data item.
      security:
        - api_key: []
  /data/{dataUuid}/file:
    get:
      parameters:
        - description: The UUID of the data file object to retrieve.
          in: path
          name: dataUuid
          required: true
          schema:
            type: string
      responses:
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataObject'
          description: Requested data file not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - data
      operationId: GetDataFile
      summary: Gets a data file for download.
      security:
        - api_key: []
  /form:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/form'
                type: array
          description: Fetched the list of forms and transmit in the message body
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - form
      operationId: GetForms
      summary: Gets a list of forms.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Created a form.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - form
      operationId: CreateForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/form'
        description: The form to create.
        required: true
      summary: Creates a form.
      security:
        - api_key: []
  /form{formUuid}:
    delete:
      parameters:
        - description: The UUID of the form to delete.
          in: path
          name: formUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The form has been deleted successfully.
        '403':
          description: The user has insufficient access to delete the form.
        '404':
          description: The form intended to delete is not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - form
      operationId: DeleteForm
      summary: Delete a form.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the form to update.
          in: path
          name: formUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The form has been updated successfully.
        '403':
          description: The user has insufficient access to update the form.
        '404':
          description: The form intended to update is not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - form
      operationId: UpdateForm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/form'
        description: The form to be updated.
        required: true
      summary: Updates a form.
      security:
        - api_key: []
  /group:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/group'
                type: array
          description: A list of groups.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - group
      operationId: GetGroups
      summary: Gets a list of groups.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Created a group.
        '400':
          description: Failed to parse byte data as X509 certificate.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - group
      operationId: CreateGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
        description: The group to create.
        required: true
      summary: Creates a group.
      security:
        - api_key: []
  /group/graph:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupGraph'
          description: Message body contains group graph.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - group
      operationId: GetGroupGraph
      summary: Gets the group graph.
      security:
        - api_key: []
  /group/{groupUuid}/group:
    get:
      parameters:
        - description: The UUID of the group to retrieve
          in: path
          name: groupUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
          description: Fetched group members of a group and transmitted in message body.
        '400':
          description: Failed to parse UUID.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - group
      operationId: GetGroupGroupMembers
      summary: Gets the group members of a group.
      security:
        - api_key: []
  /group/{groupUuid}/group/{memberGroupUuid}:
    delete:
      parameters:
        - description: The UUID of the group to modify.
          in: path
          name: groupUuid
          required: true
          schema:
            type: string
        - description: The UUID of the group to remove.
          in: path
          name: memberGroupUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The group was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - group
      operationId: RemoveGroupFromGroup
      summary: Removes a group from a group.
      security:
        - api_key: []
    post:
      parameters:
        - description: The group to modify.
          in: path
          name: groupUuid
          required: true
          schema:
            type: string
        - description: The UUID of the group to add.
          in: path
          name: memberGroupUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Group had been added successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - group
      operationId: AddGroupToGroup
      summary: Adds a group to another group.
      security:
        - api_key: []
  /group/{groupUuid}/user:
    get:
      parameters:
        - description: The UUID of the group to retrieve.
          in: path
          name: groupUuid
          required: true
          schema:
            type: string
        - description: Whether to retrieve member users of member groups.
          in: query
          name: recursive
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
          description: Fetched user members of a group and transmitted in message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - group
      operationId: GetGroupUserMembers
      summary: Gets the user members of a group.
      security:
        - api_key: []
  /group/{groupUuid}/user/{memberUserUuid}:
    delete:
      parameters:
        - description: The UUID of the group to modify.
          in: path
          name: groupUuid
          required: true
          schema:
            type: string
        - description: The UUID of the user to remove.
          in: path
          name: memberUserUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - group
      operationId: RemoveUserFromGroup
      summary: Removes a user from a group.
      security:
        - api_key: []
    post:
      parameters:
        - description: The group to modify.
          in: path
          name: groupUuid
          required: true
          schema:
            type: string
        - description: The UUID of the user to add.
          in: path
          name: memberUserUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: The user has been added to the group successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - group
      operationId: AddUserToGroup
      summary: Add a user to a group.
      security:
        - api_key: []
  /meta:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/metaName'
                type: array
          description: >-
            Fetched the list of metadata fields and transmitted in the message
            body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - meta
      operationId: GetMetas
      summary: Gets a list of metadata fields.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Created the metadata field definition.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: "Session\_not\_authorised\_to\_create\_case."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - meta
      operationId: CreateMeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metaName'
        description: The metadata field to create.
        required: true
      summary: Creates a metadata field definition.
      security:
        - api_key: []
  /meta/{metaUuid}:
    delete:
      parameters:
        - description: The UUID of the metadata to delete.
          in: path
          name: metaUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The resource was deleted successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested metadata not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - meta
      operationId: DeleteMeta
      summary: Deletes a metadata item.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the metadata to delete.
          in: path
          name: metaUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The resource was updated successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested metadata not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - meta
      operationId: UpdateMeta
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metaName'
        description: The updated metadata field.
        required: true
      summary: Updates a metadata item.
      security:
        - api_key: []
  /metrics/cases:
    get:
      parameters:
        - description: The start time as an RFC3339 timestamp
          in: query
          name: start
          required: true
          schema:
            type: string
        - description: The end time as an RFC3339 timestamp
          in: query
          name: end
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/openCloseMetrics'
          description: A JSON-formatted report.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - metrics
      description: Gets a metrics report on cases. (This endpoint is currently disabled)
      operationId: GetMetricsCases
      security:
        - api_key: []
  /metrics/openclose:
    get:
      parameters:
        - description: The start time as an RFC3339 timestamp
          in: query
          name: startPeriod
          required: true
          schema:
            type: string
        - description: The end time as an RFC3339 timestamp
          in: query
          name: endPeriod
          required: true
          schema:
            type: string
        - description: The org to filter with
          in: query
          name: orgs
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/openCloseMetrics'
          description: A JSON-formatted report.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - metrics
      operationId: GetOpenCloseCases
      summary: Gets a metrics report on cases opened versus closed.
      security:
        - api_key: []
  /metrics/status:
    get:
      parameters:
        - description: The start time as an RFC3339 timestamp
          in: query
          name: startPeriod
          required: true
          schema:
            type: string
        - description: The end time as an RFC3339 timestamp
          in: query
          name: endPeriod
          required: true
          schema:
            type: string
        - description: filter to which have these organisations
          in: query
          name: orgs
          required: true
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metrics'
          description: A JSON-formatted report.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - metrics
      operationId: GetMetricsStatus
      summary: Gets a metrics report on case status timing.
      security:
        - api_key: []
  /metrics/time-to-state:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/timeToStateMetrics'
                type: array
          description: Report successfully generated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - report
      operationId: GetTimeToStateReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timeToStateMetricsRequest'
        required: true
      summary: Generates a report for time taken for cases to arrive at a given state.
      security:
        - api_key: []
  /metrics/users:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metrics'
          description: A JSON-formatted report.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - metrics
      description: Gets a metrics report on users. (This endpoint is currently disabled)
      operationId: GetMetricsUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metricsRequest'
        required: true
      security:
        - api_key: []
  /notify/{service}:
    post:
      parameters:
        - description: The name of the service to notify of payload.
          in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Notification sent.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - notify
      operationId: NotifyService
      summary: Sends a notification to a third-party service.
      security:
        - api_key: []
  /notify/{service}/error:
    get:
      parameters:
        - description: The name of the consumer
          in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/pubsubErrorMessage'
                type: array
          description: The messages have been retrieved and returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - notify
      description: Gets all error messages for the supplied consumer
      operationId: GetErrorMessages
      security:
        - api_key: []
    post:
      parameters:
        - description: The name of the service which has reported an error
          in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Notification stored.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - notify
      description: Posts an error message for the specified consumer
      operationId: PostErrorMessage
      security:
        - api_key: []
  /notify/{service}/error/{msgUuid}:
    delete:
      parameters:
        - description: The name of the consumer
          in: path
          name: service
          required: true
          schema:
            type: string
        - description: The UUID of the error msg to be deleted
          in: path
          name: msgUuid
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: Notification deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - notify
      description: Deletes the error msg for the specified consumer
      operationId: DeleteErrorMessage
      security:
        - api_key: []
  /notify/{service}/input:
    get:
      parameters:
        - description: The name of the consumer
          in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/pubsubMessage'
                type: array
          description: The messages have been retrieved and returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - notify
      description: Gets all messages for the supplied consumer
      operationId: GetMessages
      security:
        - api_key: []
  /notify/{service}/input/{msgUuid}:
    delete:
      parameters:
        - description: The name of the consumer
          in: path
          name: service
          required: true
          schema:
            type: string
        - description: The UUID of the msg to be deleted
          in: path
          name: msgUuid
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: Notification deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - notify
      description: Deletes the msg for the specified consumer
      operationId: DeleteMessage
      security:
        - api_key: []
  /org:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/org'
                type: array
          description: >-
            A list of orgs has been fetched and is transmitted in the message
            body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org
      operationId: GetOrgs
      summary: Gets a list of orgs.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: The org has been created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org
      operationId: CreateOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org'
        description: The org to create.
        required: true
      summary: Creates an org.
      security:
        - api_key: []
  /org-prop/{orgUuid}:
    get:
      parameters:
        - description: The UUID of the org whose properties are being retrieved.
          in: path
          name: orgUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/orgProp'
                type: array
          description: >-
            Fetched the list of org properties and transmitted in the message
            body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the list of org properties or insufficient
            permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org-prop
      operationId: GetOrgProps
      summary: Gets a list of org properties.
      security:
        - api_key: []
  /org-prop/{orgUuid}/{propName}:
    delete:
      parameters:
        - description: The UUID of the org whose property is being deleted.
          in: path
          name: orgUuid
          required: true
          schema:
            type: string
        - description: The name of the property to delete.
          in: path
          name: propName
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the org property or insufficient permissions to
            finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org-prop
      operationId: DeleteOrgProp
      summary: Deletes an org property.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the org whose property is being retrieved.
          in: path
          name: orgUuid
          required: true
          schema:
            type: string
        - description: The name of the property to retrieve.
          in: path
          name: propName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orgProp'
          description: Fetched the org property and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the org property or insufficient permissions to
            finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org-prop
      operationId: GetOrgProp
      summary: Gets an org property.
      security:
        - api_key: []
    post:
      parameters:
        - description: The UUID of the org whose property is being created.
          in: path
          name: orgUuid
          required: true
          schema:
            type: string
        - description: The name of the property to create.
          in: path
          name: propName
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Org property has been successfully created.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request is forbidden.
        '404':
          description: Could not find the org or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org-prop
      operationId: CreateOrgProp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/propRequest'
        description: The org property to create.
        required: true
      summary: Creates an org property,
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the org whose property is being updated.
          in: path
          name: orgUuid
          required: true
          schema:
            type: string
        - description: The name of the property to update.
          in: path
          name: propName
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The org property was updated successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Session not authorised.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org-prop
      operationId: UpdateOrgProp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/propUpdateRequest'
        description: The updated org property.
        required: true
      summary: Updates an org property.
      security:
        - api_key: []
  /org/{orgUuid}:
    delete:
      parameters:
        - description: The org to delete.
          in: path
          name: orgUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The org has been deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org
      operationId: DeleteOrg
      summary: Deletes an org.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the org to retrieve.
          in: path
          name: orgUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org'
          description: Fetched the org and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org
      operationId: GetOrg
      summary: Gets an org.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the org to update.
          in: path
          name: orgUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The org has been updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - org
      operationId: UpdateOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org'
        description: The org body to update with.
        required: true
      summary: Updates an org.
      security:
        - api_key: []
  /playbook:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/playbookResponse'
                type: array
          description: Fetched a list of playbooks and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: GetPlaybooks
      summary: Gets a list of playbooks.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Playbook successfully created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: CreatePlaybook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/playbookRequest'
        description: The playbook to create.
        required: true
      summary: Creates a playbook.
      security:
        - api_key: []
  /playbook-action:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/playbookActionResponse'
                type: array
          description: >-
            Fetched the list of playbook actions and transmitted in message
            body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook-action
      operationId: GetPlaybookActions
      summary: Gets a list of playbook actions.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Playbook action created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook-action
      operationId: CreatePlaybookAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/playbookActionRequest'
        description: The action to add to the playbook.
        required: true
      summary: Creates a playbook action.
      security:
        - api_key: []
  /playbook-action/{uuid}:
    delete:
      parameters:
        - description: The UUID of the playbook action to delete.
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook-action
      operationId: DeletePlaybookAction
      summary: Deletes a playbook action.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the playbook action to retrieve.
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playbookActionResponse'
          description: Fetched the playbook action and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook-action
      operationId: GetPlaybookAction
      summary: Gets a playbook action.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the playbook action to update.
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The playbook action has been updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook-action
      operationId: UpdatePlaybookAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/playbookActionRequest'
        description: The playbook action to be updated.
        required: true
      summary: Updates a playbook action.
      security:
        - api_key: []
  /playbook-action/{uuid}/case-tag/{tagUuid}:
    delete:
      parameters:
        - description: The UUID of the playbook action to delete.
          in: path
          name: uuid
          required: true
          schema:
            type: string
        - description: The UUID of the tag to delete.
          in: path
          name: tagUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook-action
      operationId: DeletePlaybookActionTag
      summary: Deletes a playbook action tag map.
      security:
        - api_key: []
    post:
      parameters:
        - description: The UUID of the playbook action to create.
          in: path
          name: uuid
          required: true
          schema:
            type: string
        - description: The UUID of the tag to create.
          in: path
          name: tagUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The resource was created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook-action
      operationId: CreatePlaybookActionTag
      summary: Create a playbook action tag map.
      security:
        - api_key: []
  /playbook/file/upload:
    post:
      parameters:
        - description: Only validate the playbook, does not save to database".
          in: query
          name: validate_only
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: Playbook successfully validate.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Playbook successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Invalid CACAO playbook
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: CreatePlaybookFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/atcPlaybook'
        description: The playbook file content to create.
        required: true
      summary: Creates a playbook by upload file.
      security:
        - api_key: []
  /playbook/file/{playbookUuid}:
    get:
      parameters:
        - description: The uuid of playbook to export.
          in: path
          name: playbookUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: Playbook successfully export.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: ExportPlaybook
      summary: Exporting a playbook to file.
      security:
        - api_key: []
  /playbook/{playbookUuid}:
    delete:
      parameters:
        - description: The UUID of the playbook to delete.
          in: path
          name: playbookUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The playbook was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: DeletePlaybook
      summary: Deletes a playbook.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the playbook to retrieve
          in: path
          name: playbookUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playbookResponse'
          description: Fetched the playbook and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: GetPlaybook
      summary: Gets a playbook.
      security:
        - api_key: []
    post:
      parameters:
        - description: The UUID of the playbook to duplicate.
          in: path
          name: playbookUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/playbookResponse'
          description: Playbook successfully duplicate.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: DuplicatePlaybook
      summary: Duplicate a playbook.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the playbook to update.
          in: path
          name: playbookUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: UpdatePlaybook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/playbookRequest'
        description: The updated playbook
        required: true
      summary: Updates a playbook.
      security:
        - api_key: []
  /playbook/{playbookUuid}/case-tag/{caseTagUuid}:
    delete:
      parameters:
        - description: The playbook to remove from.
          in: path
          name: playbookUuid
          required: true
          schema:
            type: string
        - description: The tag to remove.
          in: path
          name: caseTagUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: RemoveTagFromPlaybook
      summary: Removes a tag from a playbook.
      security:
        - api_key: []
    post:
      parameters:
        - description: The playbook to add to.
          in: path
          name: playbookUuid
          required: true
          schema:
            type: string
        - description: The tag to add.
          in: path
          name: caseTagUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Added the tag to the playbook successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: AddTagToPlaybook
      summary: Adds a tag to a playbook.
      security:
        - api_key: []
  /playbook/{playbookUuid}/playbook-action/{playbookActionUuid}:
    delete:
      parameters:
        - description: The playbook to remove from.
          in: path
          name: playbookUuid
          required: true
          schema:
            type: string
        - description: The playbook action to remove.
          in: path
          name: playbookActionUuid
          required: true
          schema:
            type: string
        - description: The position to remove the playbook action from.
          in: query
          name: position
          schema:
            type: string
      responses:
        '204':
          description: The action was deleted from the playbook successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: RemoveActionFromPlaybook
      summary: Removes an action from a playbook.
      security:
        - api_key: []
    post:
      parameters:
        - description: The playbook to add to.
          in: path
          name: playbookUuid
          required: true
          schema:
            type: string
        - description: The playbook action to add.
          in: path
          name: playbookActionUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Action added to playbook successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - playbook
      operationId: AddActionToPlaybook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/playbookControlFlowRequest'
        description: The control flow details for the acton in the playbook
        required: true
      summary: Adds an action to a playbook.
      security:
        - api_key: []
  /report/analyst/:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportOpenCaseRecord'
          description: Report successfully generated.
        '404':
          description: >-
            Requested analyst report not found or insufficient permissions to
            finds.
        '406':
          description: Cannot find any content following the criteria given by the user.
        '415':
          description: The media format of the requested data is not supported.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - report
      description: Generates an analyst report for given users, over a time period.
      operationId: GetAnalystReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/analystReportRequest'
        required: true
      summary: |-
        NOTE: THIS REPORT TYPE IS CURRENTLY DEACTIVATED AND ALL REQUESTS WILL
        RECEIVE A RESPONSE OF 503 - SERVICE UNAVAILABLE
      security:
        - api_key: []
  /report/case/{caseUuid}:
    post:
      parameters:
        - description: The UUID of the case to generate a report for.
          in: path
          name: caseUuid
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportOpenCaseRecord'
          description: >-
            Fetched the report for the given case and transmitted in the message
            body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - report
      operationId: GetCaseReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseReportRequest'
        required: true
      summary: Generates a report for a given case.
      security:
        - api_key: []
  /report/group:
    post:
      responses:
        '201':
          description: Report successfully generated.
        '404':
          description: >-
            Requested group report not found or insufficient permissions to
            find.
        '406':
          description: Cannot find any content following the criteria given by the user.
        '415':
          description: The media format of the requested data is not supported.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - report
      operationId: GetGroupReport
      summary: Generates a summary of current groups.
      security:
        - api_key: []
  /report/heatmap/:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/heatmapReportRequest'
          description: Report successfully generated.
        '404':
          description: Requested heatmap report not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - report
      operationId: GetHeatMapReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/heatmapReportRequest'
        required: true
      summary: >-
        Generates an heatmap report for given tag frequencies together on a
        case, over a time period.
      security:
        - api_key: []
  /report/mttx/:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportOpenCaseRecord'
          description: Report successfully generated.
        '400':
          description: Uuid does not represent a valid UUID.
        '404':
          description: >-
            Requested Case Details report not found or insufficient permissions
            to finds.
        '406':
          description: Cannot find any content following the criteria given by the user.
        '415':
          description: The format of the requested data is not supported.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - report
      operationId: GetCaseDetailsReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseDetailsReportRequest'
        required: true
      summary: >-
        Generates a Case Details report for given users and additional
        parameters, over a time period.
      security:
        - api_key: []
  /report/summary/:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportOpenCaseRecord'
            docx:
              schema:
                $ref: '#/components/schemas/reportOpenCaseRecord'
            markdown:
              schema:
                $ref: '#/components/schemas/reportOpenCaseRecord'
          description: Report successfully generated.
        '400':
          description: Bad request, invalid request data
        '404':
          description: >-
            Requested summary report not found or insufficient permissions to
            finds.
        '406':
          description: Cannot find any content following the criteria given by the user.
        '415':
          description: The media format of the requested data is not supported.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
            docx:
              schema:
                $ref: '#/components/schemas/errorResponse'
            markdown:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - report
      operationId: GetSummaryReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/caseSummaryReportRequest'
        required: true
      summary: Generates a summary report for a given organisation, over a time period.
      security:
        - api_key: []
  /report/user:
    post:
      responses:
        '201':
          description: Report successfully generated.
        '404':
          description: Requested user report not found or insufficient permissions to find.
        '406':
          description: Cannot find any content following the criteria given by the user.
        '415':
          description: The media format of the requested data is not supported.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - report
      operationId: GetUserReport
      summary: Generates a summary of current user accounts.
      security:
        - api_key: []
  /resource:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/resource'
                type: array
          description: Fetched a list of resources and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authorization for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - resource
      operationId: GetResources
      summary: Gets a list of resources.
      security:
        - api_key: []
  /resource/{resourceUuid}:
    put:
      parameters:
        - description: The UUID of the resource to update
          in: path
          name: resourceUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: the resource has been updated successfully
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authorization for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - resource
      description: Updates a resource
      operationId: UpdateResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resource'
        description: The resource body to update with.
        required: true
      security:
        - api_key: []
  /sla:
    get:
      parameters:
        - description: If set, filter by organisation UUID.
          in: query
          name: org
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/sla'
                type: array
          description: Fetched the list of SLAs and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authorization for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sla
      operationId: GetSlas
      summary: Gets a list of SLAs.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sla'
          description: SLA has been created successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authorization for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sla
      description: Creates an SLAs
      operationId: CreateSla
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sla'
        description: The SLA to create.
        required: true
      security:
        - api_key: []
  /sla/{slaUuid}:
    delete:
      parameters:
        - description: The UUID of the SLA to delete.
          in: path
          name: slaUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted the SLA.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authorization for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sla
      operationId: DeleteSla
      summary: Deletes an SLA.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the SLA to update.
          in: path
          name: slaUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully updated the SLA.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authorization for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sla
      operationId: UpdateSla
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sla'
        description: The SLA to update.
        required: true
      summary: Updates an SLA.
      security:
        - api_key: []
  /stix/asset:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simpleObjectContainer'
          description: The resource was successfully returned.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      operationId: GetAssetsFromStix
      summary: Get a list of Assets.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: asset has been created successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      operationId: CreateAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAssetRequest'
        description: The asset to create.
        required: true
      summary: Creates a asset in STIX.
      security:
        - api_key: []
  /stix/asset/bulk:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createObjectResponse'
          description: Assets have been created.
        '400':
          description: Bad request
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      description: >-
        CSV requires a header row in the following order: Type, Name, Email,
        Phone, Organisation
      operationId: CreateAssetsFromCsv
      requestBody:
        content:
          application/json:
            schema:
              description: CSV file with a list of assets to create.
              format: binary
              type: string
          text/csv:
            schema:
              description: CSV file with a list of assets to create.
              format: binary
              type: string
        description: CSV file with a list of assets to create.
        required: true
      summary: Creates assets in STIX.
      security:
        - api_key: []
  /stix/asset/{assetUuid}:
    delete:
      parameters:
        - description: The UUID of the asset object to delete.
          in: path
          name: assetUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The resource was deleted successfully or deprecated if asset used.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested asset not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      operationId: DeleteAsset
      summary: Deletes a asset.
      security:
        - api_key: []
  /stix/asset/{uuid}:
    put:
      parameters:
        - description: The UUID of the asset object to update.
          in: path
          name: uuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The asset was updated successfully.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested asset not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      operationId: UpdateAssetStixObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAssetRequest'
        description: The asset request
        required: true
      summary: Update an asset.
      security:
        - api_key: []
  /stix/contact:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/simpleObjectContainer'
          description: The resource was successfully returned.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      operationId: GetAllContacts
      summary: Get a list of Contacts.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: contact has been created successfully.
        '401':
          description: Invalid authentication for this request.
      tags:
        - stix
      operationId: CreateContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createContactRequest'
        description: The contact to create.
        required: true
      summary: Creates a contact in STIX.
      security:
        - api_key: []
  /stix/contact/bulk:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createObjectResponse'
          description: Contacts have been created.
        '400':
          description: Bad request
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      description: >-
        CSV requires a header row in the following order: Type, Name, Email,
        Phone, Organisation
      operationId: CreateContactsFromCsv
      requestBody:
        content:
          application/json:
            schema:
              description: CSV file with a list of contacts to create.
              format: binary
              type: string
          text/csv:
            schema:
              description: CSV file with a list of contacts to create.
              format: binary
              type: string
        description: CSV file with a list of contacts to create.
        required: true
      summary: Creates contacts in STIX.
      security:
        - api_key: []
  /stix/contact/{contactUuid}:
    delete:
      parameters:
        - description: The UUID of the contact object to delete.
          in: path
          name: contactUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The resource was deleted successfully or deprecated if contact used.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested contact not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      operationId: DeleteContact
      summary: Deletes a contact.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the contact object to update.
          in: path
          name: contactUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The contact was updated successfully.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested contact not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      operationId: UpdateSContactStixObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactRequest'
        description: The contact request
        required: true
      summary: Update a contact.
      security:
        - api_key: []
  /stix/{id}:
    put:
      parameters:
        - description: The UUID of the STIX to be updated.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was updated successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request does not have authorisation.
        '404':
          description: Requested data item not found or insufficient permissions to find.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - stix
      operationId: UpdateStix
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stixUpdateRequest'
        description: The updated STIX object.
        required: true
      summary: Updates a STIX node.
      security:
        - api_key: []
  /sys-prop:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/sysProp'
                type: array
          description: >-
            Fetched the list of system properties and transmitted in the message
            body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sys-prop
      operationId: GetSysProps
      summary: Gets a list of system properties.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: System property created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sys-prop
      operationId: CreateSysProp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/propRequest'
        description: The system property to create.
        required: true
      summary: Creates a system property.
      security:
        - api_key: []
  /sys-prop/{sysPropUuid}:
    delete:
      parameters:
        - description: The UUID of the system property to delete.
          in: path
          name: sysPropUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sys-prop
      operationId: DeleteSysProp
      summary: Deletes a system property.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the system property to retrieve.
          in: path
          name: sysPropUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sysProp'
          description: Fetched the system property and transmitted in the message body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sys-prop
      operationId: GetSysProp
      summary: Gets a system property.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the system property to update.
          in: path
          name: sysPropUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - sys-prop
      operationId: UpdateSysProp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/propUpdateRequest'
        description: The system property to update.
        required: true
      summary: Updates a system property.
      security:
        - api_key: []
  /third-party/{service}:
    get:
      parameters:
        - description: The name of the service to fetch cache for.
          in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/thirdpartyFullCache'
          description: >-
            Fetched service details and list of cached items and transmitted in
            message body.
        '404':
          description: Requested cache not found or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - third-party
      operationId: GetThirdPartyDetailsAndCache
      summary: Fetches cache for third party integration cache.
      security:
        - api_key: []
    post:
      parameters:
        - description: The name of the service to create.
          in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: UUID of new service tracking record.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - third-party
      operationId: CreateThirdPartyCacheDetails
      summary: Fetches cache for third party integration cache.
      security:
        - api_key: []
    put:
      parameters:
        - description: The name of the service to fetch cache for.
          in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Details successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - third-party
      operationId: UpdateThirdPartyCacheDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/thirdpartyCache'
        description: The details to update (only last_sync can be updated).
      summary: Updates details of integrated service.
      security:
        - api_key: []
  /third-party/{service}/cache:
    post:
      parameters:
        - description: The name of the service to fetch cache for.
          in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: UUID of created cache item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - third-party
      operationId: CreateThirdPartyCacheItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/thirdpartyCacheItem'
        description: The details of the cache to create.
      summary: Creates a new cache item for third party integration.
      security:
        - api_key: []
  /third-party/{service}/cache/{itemUuid}:
    delete:
      parameters:
        - description: The name of the service to update item on.
          in: path
          name: service
          required: true
          schema:
            type: string
        - description: The name of the service to fetch cache for.
          in: path
          name: itemUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully updated the item in the third party cache.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - third-party
      operationId: DeleteThirdPartyCacheItem
      summary: Deletes an item from the third party cache.
      security:
        - api_key: []
    put:
      parameters:
        - description: The name of the service to update item on.
          in: path
          name: service
          required: true
          schema:
            type: string
        - description: The UUID of the item to update.
          in: path
          name: itemUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cache item successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - third-party
      operationId: UpdateThirdPartyCacheItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/thirdpartyCacheItem'
        description: The details to update (only checksum can be updated).
      summary: Updates a cache item for a third party integration cache.
      security:
        - api_key: []
  /user:
    get:
      parameters:
        - description: If set, deleted user records are included in the list.
          in: query
          name: include_deleted
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/user'
                type: array
          description: Fetched the list of users and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user
      operationId: GetUsers
      summary: Gets a list of users.
      security:
        - api_key: []
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: User has been created successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Unauthorised action
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        description: The user to create.
        required: true
      summary: Creates a system property.
      security:
        - api_key: []
  /user-prop/{userUuid}:
    get:
      parameters:
        - description: The UUID of the user whose properties are being retrieved.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/userProp'
                type: array
          description: >-
            Fetched the list of user properties and transmitted in the message
            body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the list of user properties or insufficient
            permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user-prop
      operationId: GetUserProps
      summary: Gets a list of user properties.
      security:
        - api_key: []
  /user-prop/{userUuid}/{propName}:
    delete:
      parameters:
        - description: The UUID of the user whose property is being deleted.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
        - description: The name of the property to delete.
          in: path
          name: propName
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the user property or insufficient permissions to
            finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user-prop
      operationId: DeleteUserProp
      summary: Deletes a user property.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the user whose property is being retrieved.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
        - description: The name of the property to retrieve.
          in: path
          name: propName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProp'
          description: Fetched the user property and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the user property or insufficient permissions to
            finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user-prop
      operationId: GetUserProp
      summary: Gets a user property.
      security:
        - api_key: []
    post:
      parameters:
        - description: The UUID of the user whose property is being created.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
        - description: The name of the property to create.
          in: path
          name: propName
          required: true
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createResponse'
          description: User property has been successfully created.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: The request is forbidden.
        '404':
          description: Could not find the user or insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user-prop
      operationId: CreateUserProp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/propUpdateRequest'
        description: The user property.
        required: true
      summary: Creates a user property,
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the user whose property is being updated.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
        - description: The name of the property to update.
          in: path
          name: propName
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user property was updated successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Session not authorised.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user-prop
      operationId: UpdateUserProp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/propUpdateRequest'
        description: The updated user property.
        required: true
      summary: Updates a user property.
      security:
        - api_key: []
  /user/{userUuid}:
    delete:
      parameters:
        - description: The UUID of the user to delete.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was deleted successfully.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the requested user or insufficient permissions to
            finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user
      operationId: DeleteUser
      summary: Deletes a user.
      security:
        - api_key: []
    get:
      parameters:
        - description: The UUID of the user to retrieve.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: Fetched the user and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the requested user or insufficient permissions to
            finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error.
      tags:
        - user
      operationId: GetUser
      summary: Gets a user.
      security:
        - api_key: []
    put:
      parameters:
        - description: The UUID of the user to update.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The resource was updated successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authentication for user update request.
        '404':
          description: >-
            Could not find the requested user or insufficient permissions to
            finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user
      operationId: UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        description: The user to update.
        required: true
      summary: Updates a user.
      security:
        - api_key: []
  /user/{userUuid}/action:
    get:
      parameters:
        - description: The UUID of the user to retrieve.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/playbookActionInstance'
                type: array
          description: >-
            The list of playbook actions has been fetched and is transmitted in
            the message body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the requested list of pending playbook actions or
            insufficient permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user
      operationId: GetUserPlaybookActions
      summary: Gets a list of pending playbook actions assigned to the user.
      security:
        - api_key: []
  /user/{userUuid}/password:
    put:
      parameters:
        - description: The UUID of the user to update.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user was updated successfully.
        '401':
          description: Invalid authentication for this request.
        '403':
          description: Invalid authentication for user update request.
        '404':
          description: >-
            Could not find the requested user or insufficient permissions to
            finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user
      operationId: UpdateUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        description: The user to update.
        required: true
      summary: Updates a user.
      security:
        - api_key: []
  /user/{userUuid}/reactivate:
    put:
      parameters:
        - description: The UUID of the user to reactivate.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user was reactivate successfully.
        '403':
          description: Invalid authentication for user reactivate request.
        '404':
          description: >-
            Could not find the requested user or insufficient permissions to
            finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user
      operationId: ReactivateUserAccount
      summary: Reactivate a user account.
      security:
        - api_key: []
  /user/{userUuid}/watch:
    get:
      parameters:
        - description: The UUID of the user to retrieve.
          in: path
          name: userUuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/case'
                type: array
          description: Fetched list of cases and transmitted in the message body.
        '401':
          description: Invalid authentication for this request.
        '404':
          description: >-
            Could not find the requested list of cases or insufficient
            permissions to finds.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      tags:
        - user
      operationId: GetUserWatching
      summary: Gets a list of cases the user watches.
      security:
        - api_key: []
  /wiki-search:
    get:
      parameters:
        - description: The search query
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: The results page to return
          in: query
          name: page[number]
          required: true
          schema:
            type: integer
        - description: The size of each page to return
          in: query
          name: page[size]
          required: true
          schema:
            type: integer
        - description: Which additional objects to include
          in: query
          name: include
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WikiPageListTopLevel'
          description: A list of pages matching the search query
      summary: Search wiki for pages
      tags:
        - wiki
  /wiki-page:
    get:
      parameters:
        - description: The results page to return
          in: query
          name: page[number]
          required: true
          schema:
            type: integer
        - description: The size of each page to return
          in: query
          name: page[size]
          required: true
          schema:
            type: integer
        - description: Which additional objects to include
          in: query
          name: include
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WikiPageListTopLevel'
          description: The list of pages
      summary: Get all wiki pages
      tags:
        - wiki
    post:
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WikiPageTopLevel'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WikiPageTopLevel'
          description: The newly created page
      summary: Create a new wiki page
      tags:
        - wiki
  /wiki-page/{uuid}:
    delete:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      responses:
        '204':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/StatusMessage'
          description: Confirmation of deletion
      summary: Delete an existing wiki page
      tags:
        - wiki
    get:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
        - description: Which additional objects to include
          in: query
          name: include
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WikiPageTopLevel'
          description: The content of the specified page
      summary: Get the content of a wiki page
      tags:
        - wiki
    patch:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WikiPageTopLevel'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WikiPageTopLevel'
          description: The updated page
      summary: Edit an existing wiki page
      tags:
        - wiki
    put:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WikiPageTopLevel'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WikiPageTopLevel'
          description: The updated page
      summary: Replace an existing wiki page
      tags:
        - wiki
  /connector-operation-type:
    get:
      parameters:
        - description: The results page to return
          in: query
          name: page[number]
          required: true
          schema:
            type: integer
        - description: The size of each page to return
          in: query
          name: page[size]
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConnectorOperationTypeListTopLevel'
          description: The list of connector operation types
      summary: Get all connector operation types
      tags:
        - connector-operation-type
    post:
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ConnectorOperationTypeRequestTopLevel'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConnectorOperationTypeTopLevel'
          description: The newly created connector operation type
      summary: Create a new connector operation type
      tags:
        - connector-operation-type
  /connector-operation-type/{uuid}:
    delete:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      responses:
        '204':
          description: Confirmation of deletion
      summary: Delete an existing connector operation type
      tags:
        - connector-operation-type
    get:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConnectorOperationTypeTopLevel'
          description: The connector operation type
      summary: Get the specified connector operation type
      tags:
        - connector-operation-type
    put:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ConnectorOperationTypeUpdateRequestTopLevel'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ConnectorOperationTypeTopLevel'
          description: The updated connector operation type
      summary: Update an existing connector operation type
      tags:
        - connector-operation-type
  /event-trigger:
    get:
      parameters:
        - description: The results page to return
          in: query
          name: page[number]
          required: true
          schema:
            type: integer
        - description: The size of each page to return
          in: query
          name: page[size]
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EventTriggerListTopLevel'
          description: The list of event triggers
      summary: Get all event triggers
      tags:
        - event-trigger
    post:
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EventTriggerRequestTopLevel'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EventTriggerTopLevel'
          description: The newly created event trigger
      summary: Create a new event trigger
      tags:
        - event-trigger
  /event-trigger/{uuid}:
    delete:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      responses:
        '204':
          description: The event trigger was deleted successfully
      summary: Delete an event trigger
      tags:
        - event-trigger
    get:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EventTriggerTopLevel'
          description: The specified event trigger
      summary: Get the specified event trigger
      tags:
        - event-trigger
    patch:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EventTriggerPatchTopLevel'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EventTriggerTopLevel'
          description: The updated event trigger
      summary: Edit an event trigger
      tags:
        - event-trigger
  /risk:
    get:
      parameters:
        - description: The results page to return
          in: query
          name: page[number]
          required: true
          schema:
            type: integer
        - description: The size of each page to return
          in: query
          name: page[size]
          required: true
          schema:
            type: integer
        - description: Which additional objects to include
          in: query
          name: include
          required: false
          schema:
            items:
              type: string
            type: array
        - description: The Accept header
          in: header
          name: Accept
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RiskListTopLevel'
            application/vnd.cydarm-risk-list+csv:
              schema:
                type: string
          description: The list of risks and their latest assessments
      summary: Get all risks and their latest assessments
      tags:
        - risk
    post:
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RiskRequestTopLevel'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RiskGetTopLevel'
          description: The newly created risk
      summary: Create a new risk
      tags:
        - risk
  /risk/{uuid}:
    delete:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      responses:
        '204':
          description: The risk and its assessments were deleted successfully
      summary: Delete a risk and all of its assessments
      tags:
        - risk
    get:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
        - description: Which additional objects to include
          in: query
          name: include
          required: false
          schema:
            items:
              type: string
            type: array
        - description: The Accept header
          in: header
          name: Accept
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RiskGetTopLevel'
            application/vnd.cydarm-risk-list+csv:
              schema:
                type: string
          description: The specified risk and its latest assessment
      summary: Get the specified risk and its latest assessment
      tags:
        - risk
    patch:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RiskRequestTopLevel'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RiskGetTopLevel'
          description: The updated risk
      summary: Edit a risk
      tags:
        - risk
  /risk-assessment:
    post:
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RiskAssessmentRequestTopLevel'
      responses:
        '201':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RiskAssessmentGetTopLevel'
          description: The newly created risk assessment
      summary: Create a new risk assessment and associate it with a risk
      tags:
        - risk
  /risk-assessment/{uuid}:
    delete:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      responses:
        '204':
          description: The risk assessment was deleted successfully
      summary: Delete a risk assessment
      tags:
        - risk
    patch:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/RiskAssessmentRequestTopLevel'
      responses:
        '200':
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/RiskAssessmentGetTopLevel'
          description: The updated risk assessment
      summary: Edit a risk assessment
      tags:
        - risk
  /case-data:
    post:
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CaseDataRequestTopLevel'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDataTopLevel'
          description: The newly created data
      summary: Add new data to a case
      tags:
        - case-data
  /case-data/{uuid}:
    get:
      parameters:
        - description: The resource UUID
          in: path
          name: uuid
          required: true
          schema:
            format: UuidPtr
            type: string
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/CaseDataRequestTopLevel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseDataTopLevel'
          description: The requested data
      summary: gets a data item
      tags:
        - case-data
  /operations:
    post:
      requestBody:
        content:
          application/vnd.api+json;ext="https://jsonapi.org/ext/atomic":
            schema:
              $ref: '#/components/schemas/AtomicRequest'
      responses:
        '200':
          content:
            application/vnd.api+json;ext="https://jsonapi.org/ext/atomic":
              schema:
                $ref: '#/components/schemas/AtomicResponse'
          description: >-
            The resource has been created, or multiple operations have been
            successfully performed
        '204':
          content:
            application/vnd.api+json;ext="https://jsonapi.org/ext/atomic":
              schema:
                $ref: '#/components/schemas/AtomicResponse'
          description: The resource has been deleted or updated
      summary: Perform a sequence of operations atomically
      tags:
        - operations
components:
  requestBodies:
    case:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/case'
      description: The case to update.
      required: true
    caseDataItemRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/caseDataItemRequest'
      description: The data item to create.
      required: true
    caseDataStixRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/caseDataStixRequest'
      description: The data item to create.
      required: true
    casePlaybookActionUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/casePlaybookActionUpdateRequest'
      description: The action update request
      required: true
    caseTag:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/caseTag'
      description: The case tag to create.
      required: true
    dataObject:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dataObject'
      description: The data object to update.
      required: true
    user:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'
      description: The user to update.
      required: true
  schemas:
    AbstractProperty:
      properties:
        acl:
          description: The UUID of an ACL for this property
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        encryptionKey:
          $ref: '#/components/schemas/SecretKey'
        name:
          description: The name of the property
          type: string
          x-go-name: PropertyName
        uuid:
          description: The UUID of the property
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        value:
          description: The value of the property
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: PropertyValue
      required:
        - uuid
        - name
        - value
        - acl
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    AccessMode:
      properties:
        BlockVolume:
          $ref: '#/components/schemas/TypeBlock'
        MountVolume:
          $ref: '#/components/schemas/TypeMount'
        Scope:
          $ref: '#/components/schemas/Scope'
        Sharing:
          $ref: '#/components/schemas/SharingMode'
      title: AccessMode defines the access mode of a volume.
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    AccessPermissions:
      properties:
        acl:
          description: The ACL of the data object
          type: string
          x-go-name: ACL
        deletable:
          description: Whether the data is deletable in the current context
          type: boolean
          x-go-name: Deletable
        editable:
          description: Whether the data is editable in the current context
          type: boolean
          x-go-name: Editable
        manageable:
          description: Whether the data is manageable in the current context
          type: boolean
          x-go-name: Manageable
        readable:
          description: Whether the data is readable in the current context
          type: boolean
          x-go-name: Readable
      required:
        - readable
        - editable
        - manageable
        - deletable
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    Action:
      description: Action model for Api
      properties:
        Name:
          type: string
        Uuid:
          format: uuid
          type: string
        Value:
          type: string
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    ActuatorCommonContext:
      description: Actuator common context
      properties:
        fqdn:
          type: string
          x-go-name: FrontendFqdn
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    ActuatorCommonFields:
      properties:
        api_poll_rate:
          $ref: '#/components/schemas/Duration'
        config_schema:
          $ref: '#/components/schemas/integrationConfigSchema'
        description:
          description: The description of the actuator
          type: string
          x-go-name: Description
        heartbeat_rate:
          $ref: '#/components/schemas/Duration'
        log_level:
          $ref: '#/components/schemas/LogLevel'
        name:
          description: The name of the actuator
          type: string
          x-go-name: Name
        principal_uuid:
          description: The UUID of the actuator's user account
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Principal
        supported_connector_types:
          description: The UUIDs of the connector types supported by this actuator
          items:
            format: uuid
            type: string
          type: array
          x-go-name: SupportedConnectorTypes
      required:
        - name
        - principal_uuid
        - config_schema
        - supported_connector_types
        - api_poll_rate
        - log_level
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    AuthCredentialsRequest:
      description: AuthCredentials contains base64 encoded credentials for authentication
      properties:
        password:
          description: Base64 encoded Password
          type: string
          x-go-name: PasswordBase64
        username:
          description: Base64 encoded Username
          type: string
          x-go-name: UsernameBase64
      required:
        - username
        - password
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    AuthenticateOKBody:
      description: AuthenticateOKBody authenticate o k body
      properties:
        IdentityToken:
          description: An opaque token used to authenticate a user after a successful login
          type: string
        Status:
          description: The status of the authentication
          type: string
      required:
        - IdentityToken
        - Status
      type: object
      x-go-package: github.com/docker/docker/api/types/registry
    Availability:
      title: Availability specifies the availability of the volume.
      type: string
      x-go-package: github.com/docker/docker/api/types/volume
    BaseDataStub:
      properties:
        acl:
          description: The ACL UUID of the data object
          format: uuid
          type: string
          x-go-name: ACL
        audit:
          description: Is this data item an audit message
          type: boolean
          x-go-name: Audit
        created:
          description: The time the item was created, as an RFC3339 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        creatorusername:
          description: The name of the creator user
          type: string
          x-go-name: CreatorUsername
        creatoruuid:
          description: The UUID of the creator user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CreatorUuid
        datalocation:
          description: >-
            The idenitifier used to identify the data where the data is stored
            now
          type: string
          x-go-name: DataLocation
        datalocationtype:
          description: Where the data is stored now
          type: string
          x-go-name: DataLocationType
        datasize:
          description: The size of the data, in bytes
          format: int64
          type: integer
          x-go-name: DataSize
        datasource:
          description: Where the data came from
          type: string
          x-go-name: DataSource
        deleted:
          description: Has this data item been deleted
          type: boolean
          x-go-name: Deleted
        edited:
          description: Has this data been edited
          type: boolean
          x-go-name: Edited
        editorusername:
          description: The name of the editor user
          type: string
          x-go-name: EditorUsername
        editoruuid:
          description: The UUID of the last editor user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: EditorUuid
        filename:
          description: The file name of the data, if it is a file
          type: string
          x-go-name: FileName
        hidden:
          description: Is this data item hidden
          type: boolean
          x-go-name: Hidden
        lastmodified:
          description: The time the item was created, as an RFC3339 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: LastModified
        location:
          description: How the data is identiifed in the location where the data came from
          type: string
          x-go-name: Location
        mimetype:
          description: The MIME type of the data
          type: string
          x-go-name: MimeType
        occurred:
          description: The time the item reported occurred, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Occurred
        parentuuid:
          description: The UUID of the parent data item
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: ParentUuid
        significance:
          description: The signficance level of the data item
          type: string
          x-go-name: Significance
        sigprecedence:
          description: The precedence of the significance of the data item
          type: string
          x-go-name: SigPrecedence
        uuid:
          description: The UUID of the data stub
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        version:
          description: The version of the data item
          format: int64
          type: integer
          x-go-name: Version
      required:
        - uuid
        - created
        - parentuuid
        - creatoruuid
        - creatorusername
        - mimetype
        - datasize
        - datasource
        - location
        - datalocation
        - datalocationtype
        - significance
        - sigprecedence
        - audit
        - deleted
        - acl
        - edited
        - editoruuid
        - editorusername
        - lastmodified
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    CacaoActionVariableType:
      properties:
        constant:
          type: boolean
          x-go-name: Constant
        description:
          type: string
          x-go-name: Description
        type:
          type: string
          x-go-name: Type
        value:
          x-go-name: Value
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    CacaoPlaybookVariableType:
      properties:
        constant:
          type: boolean
          x-go-name: Constant
        description:
          type: string
          x-go-name: Description
        external:
          type: boolean
          x-go-name: External
        type:
          type: string
          x-go-name: Type
        value:
          x-go-name: Value
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    CapacityRange:
      description: >-
        CapacityRange describes the minimum and maximum capacity a volume should
        be

        created with
      properties:
        LimitBytes:
          description: |-
            LimitBytes specifies that a volume must not be bigger than this. The
            value of 0 indicates an unspecified maximum
          format: int64
          type: integer
        RequiredBytes:
          description: |-
            RequiredBytes specifies that a volume must be at least this big. The
            value of 0 indicates an unspecified minimum.
          format: int64
          type: integer
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    ChangeType:
      description: |-
        Can be one of:

        `0`: Modified ("C")
        `1`: Added ("A")
        `2`: Deleted ("D")
      format: uint8
      title: ChangeType Kind of change
      type: integer
      x-go-package: github.com/docker/docker/api/types/container
    ClusterVolume:
      description: >-
        ClusterVolume contains options and information specific to, and only
        present

        on, Swarm CSI cluster volumes.
      properties:
        CreatedAt:
          format: date-time
          type: string
        ID:
          description: >-
            ID is the Swarm ID of the volume. Because cluster volumes are Swarm

            objects, they have an ID, unlike non-cluster volumes, which only
            have a

            Name. This ID can be used to refer to the cluster volume.
          type: string
        Info:
          $ref: '#/components/schemas/Info'
        PublishStatus:
          description: >-
            PublishStatus contains the status of the volume as it pertains to
            its

            publishing on Nodes.
          items:
            $ref: '#/components/schemas/PublishStatus'
          type: array
        Spec:
          $ref: '#/components/schemas/ClusterVolumeSpec'
        UpdatedAt:
          format: date-time
          type: string
        Version:
          $ref: '#/components/schemas/Version'
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    ClusterVolumeSpec:
      properties:
        AccessMode:
          $ref: '#/components/schemas/AccessMode'
        AccessibilityRequirements:
          $ref: '#/components/schemas/TopologyRequirement'
        Availability:
          $ref: '#/components/schemas/Availability'
        CapacityRange:
          $ref: '#/components/schemas/CapacityRange'
        Group:
          description: >-
            Group defines the volume group of this volume. Volumes belonging to
            the

            same group can be referred to by group name when creating Services.

            Referring to a volume by group instructs swarm to treat volumes in
            that

            group interchangeably for the purpose of scheduling. Volumes with an

            empty string for a group technically all belong to the same,
            emptystring

            group.
          type: string
        Secrets:
          description: >-
            Secrets defines Swarm Secrets that are passed to the CSI storage
            plugin

            when operating on this volume.
          items:
            $ref: '#/components/schemas/Secret'
          type: array
      title: ClusterVolumeSpec contains the spec used to create this volume.
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    ConnectorCommonFields:
      properties:
        active:
          description: Whether the connector is currently active
          type: boolean
          x-go-name: Active
        actuator_uuid:
          description: |-
            The UUID of the actuator that this connector
            is running on
          format: uuid
          type: string
          x-go-name: Actuator
        connector_type_uuid:
          description: The UUID of the connector type
          format: uuid
          type: string
          x-go-name: ConnectorType
        description:
          description: The description of the connector
          type: string
          x-go-name: Description
        easy_connect:
          description: Whether the connector was created using easy connect
          type: boolean
          x-go-name: EasyConnect
        name:
          description: The name of the connector
          type: string
          x-go-name: Name
      required:
        - name
        - connector_type_uuid
        - actuator_uuid
        - active
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    ConnectorOperationTypeRequest:
      properties:
        acl_uuid:
          format: uuid
          type: string
          x-go-name: Acl
        api_access:
          type: boolean
          x-go-name: ApiAccess
        arguments_schema:
          type: object
          x-go-name: ArgumentsSchema
        description:
          type: string
          x-go-name: Description
        display_name:
          type: string
          x-go-name: DisplayName
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    ContainerTopOKBody:
      description: ContainerTopOKBody OK response to ContainerTop operation
      properties:
        Processes:
          description: |-
            Each process running in the container, where each is process
            is an array of values corresponding to the titles.
          items:
            items:
              type: string
            type: array
          type: array
        Titles:
          description: The ps column titles
          items:
            type: string
          type: array
      required:
        - Processes
        - Titles
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    ContainerUpdateOKBody:
      description: ContainerUpdateOKBody OK response to ContainerUpdate operation
      properties:
        Warnings:
          description: warnings
          items:
            type: string
          type: array
      required:
        - Warnings
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    CreateOptions:
      description: Volume configuration
      properties:
        ClusterVolumeSpec:
          $ref: '#/components/schemas/ClusterVolumeSpec'
        Driver:
          description: Name of the volume driver to use.
          type: string
        DriverOpts:
          additionalProperties:
            type: string
          description: |-
            A mapping of driver options and values. These options are
            passed directly to the driver and are driver specific.
          type: object
        Labels:
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
          type: object
        Name:
          description: The new volume's name. If not specified, Docker generates a name.
          type: string
      title: CreateOptions VolumeConfig
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    CreateResponse:
      description: OK response to ContainerCreate operation
      properties:
        Id:
          description: The ID of the created container
          type: string
          x-go-name: ID
        Warnings:
          description: Warnings encountered when creating the container
          items:
            type: string
          type: array
      required:
        - Id
        - Warnings
      title: CreateResponse ContainerCreateResponse
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    DeleteResponse:
      description: DeleteResponse delete response
      properties:
        Deleted:
          description: The image ID of an image that was deleted
          type: string
        Untagged:
          description: The image ID of an image that was untagged
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    Duration:
      description: |-
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
      format: int64
      type: integer
      x-go-package: time
    ErrorResponse:
      properties:
        message:
          description: The error message.
          type: string
          x-go-name: Message
      required:
        - message
      title: ErrorResponse Represents an error.
      type: object
      x-go-package: github.com/docker/docker/api/types
    EventTrigger:
      properties:
        acl_uuid:
          format: uuid
          type: string
          x-go-name: Acl
        active:
          type: boolean
          x-go-name: Active
        actuator_uuid:
          format: uuid
          type: string
          x-go-name: Actuator
        condition:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: Condition
        connector_uuid:
          format: uuid
          type: string
          x-go-name: Connector
        created:
          format: date-time
          type: string
          x-go-name: Created
        description:
          type: string
          x-go-name: Description
        easy_connect:
          type: boolean
          x-go-name: EasyConnect
        event_type:
          type: string
          x-go-name: EventType
        modified:
          format: date-time
          type: string
          x-go-name: Modified
        name:
          type: string
          x-go-name: Name
        operation_args:
          type: object
          x-go-name: OperationArgs
        operation_type_uuid:
          format: uuid
          type: string
          x-go-name: OperationType
        uuid:
          format: uuid
          type: string
          x-go-name: Uuid
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    EventTriggerRequest:
      properties:
        acl_uuid:
          format: uuid
          type: string
          x-go-name: Acl
        active:
          type: boolean
          x-go-name: Active
        condition:
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: Condition
        connector_uuid:
          format: uuid
          type: string
          x-go-name: Connector
        description:
          type: string
          x-go-name: Description
        easy_connect:
          type: boolean
          x-go-name: EasyConnect
        event_type:
          type: string
          x-go-name: EventType
        name:
          type: string
          x-go-name: Name
        operation_args:
          type: object
          x-go-name: OperationArgs
        operation_type_uuid:
          format: uuid
          type: string
          x-go-name: OperationType
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    FailedCreateObjectResponse:
      description: >-
        FailedCreateObjectResponse is the details about a failed create contact
        request
      properties:
        error:
          type: string
          x-go-name: Err
        request:
          type: string
          x-go-name: Request
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    FilesystemChange:
      properties:
        Kind:
          $ref: '#/components/schemas/ChangeType'
        Path:
          description: Path to file or directory that has changed.
          type: string
      required:
        - Kind
        - Path
      title: FilesystemChange Change in the container's filesystem.
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    GraphDriverData:
      description: >-
        GraphDriverData Information about the storage driver used to store the
        container's and

        image's filesystem.
      properties:
        Data:
          additionalProperties:
            type: string
          description: >-
            Low-level storage metadata, provided as key/value pairs.


            This information is driver-specific, and depends on the
            storage-driver

            in use, and should be used for informational purposes only.
          type: object
        Name:
          description: Name of the storage driver.
          type: string
      required:
        - Data
        - Name
      type: object
      x-go-package: github.com/docker/docker/api/types
    HistoryResponseItem:
      description: >-
        HistoryResponseItem individual image layer information in response to
        ImageHistory operation
      properties:
        Comment:
          description: comment
          type: string
        Created:
          description: created
          format: int64
          type: integer
        CreatedBy:
          description: created by
          type: string
        Id:
          description: Id
          type: string
          x-go-name: ID
        Size:
          description: size
          format: int64
          type: integer
        Tags:
          description: tags
          items:
            type: string
          type: array
      required:
        - Comment
        - Created
        - CreatedBy
        - Id
        - Size
        - Tags
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    IdResponse:
      description: IDResponse Response to an API call that returns just an Id
      properties:
        Id:
          description: The id of the newly created object.
          type: string
          x-go-name: ID
      required:
        - Id
      type: object
      x-go-name: IDResponse
      x-go-package: github.com/docker/docker/api/types
    Info:
      description: |-
        Info contains information about the Volume as a whole as provided by
        the CSI storage plugin.
      properties:
        AccessibleTopology:
          description: >-
            AccessibleTopolgoy is the topology this volume is actually
            accessible

            from.
          items:
            $ref: '#/components/schemas/Topology'
          type: array
        CapacityBytes:
          description: |-
            CapacityBytes is the capacity of the volume in bytes. A value of 0
            indicates that the capacity is unknown.
          format: int64
          type: integer
        VolumeContext:
          additionalProperties:
            type: string
          description: |-
            VolumeContext is the context originating from the CSI storage plugin
            when the Volume is created.
          type: object
        VolumeID:
          description: >-
            VolumeID is the ID of the Volume as seen by the CSI storage plugin.
            This

            is distinct from the Volume's Swarm ID, which is the ID used by all
            of

            the Docker Engine to refer to the Volume. If this field is blank,
            then

            the Volume has not been successfully created yet.
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    Iqr:
      properties:
        count:
          description: The count of the current state metric
          format: int64
          type: integer
          x-go-name: Count
        maximum:
          description: The maximum of the current state metric
          format: double
          type: number
          x-go-name: Maximum
        mean:
          description: The mean of the current state metric
          format: double
          type: number
          x-go-name: Mean
        median:
          description: The median of the current state metric
          format: double
          type: number
          x-go-name: Median
        minimum:
          description: The minimum of the current state metric
          format: double
          type: number
          x-go-name: Minimum
        q1:
          description: The q1 of the current state metric
          format: double
          type: number
          x-go-name: Q1
        q3:
          description: The q3 of the current state metric
          format: double
          type: number
          x-go-name: Q3
      required:
        - count
        - q1
        - q3
        - mean
        - minimum
        - maximum
        - median
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    JSONTime:
      properties:
        Value:
          format: date-time
          type: string
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    JSONTimeDuration:
      description: JSON wrapper for a time.Duration
      properties:
        Value:
          $ref: '#/components/schemas/Duration'
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    ListResponse:
      description: Volume list response
      properties:
        Volumes:
          description: List of volumes
          items:
            $ref: '#/components/schemas/Volume'
          type: array
        Warnings:
          description: Warnings that occurred when fetching the list of volumes.
          items:
            type: string
          type: array
      title: ListResponse VolumeListResponse
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    LogLevel:
      description: LogLevel represents a logging level
      format: uint64
      type: integer
      x-go-package: github.com/cydarm/case-management/common/logging
    Meta:
      properties:
        CreatedAt:
          format: date-time
          type: string
        UpdatedAt:
          format: date-time
          type: string
        Version:
          $ref: '#/components/schemas/Version'
      title: Meta is a base object inherited by most of the other once.
      type: object
      x-go-package: github.com/docker/docker/api/types/swarm
    PageLinks:
      description: PageLinks is a container to wrap links to result pages
      properties:
        first:
          type: string
          x-go-name: First
        last:
          type: string
          x-go-name: Last
        next:
          type: string
          x-go-name: Next
        prev:
          type: string
          x-go-name: Prev
        self:
          type: string
          x-go-name: Self
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    Plugin:
      description: Plugin A plugin for the Engine API
      properties:
        Config:
          $ref: '#/components/schemas/PluginConfig'
        Enabled:
          description: >-
            True if the plugin is running. False if the plugin is not running,
            only installed.
          type: boolean
        Id:
          description: Id
          type: string
          x-go-name: ID
        Name:
          description: name
          type: string
        PluginReference:
          description: plugin remote reference used to push/pull the plugin
          type: string
        Settings:
          $ref: '#/components/schemas/PluginSettings'
      required:
        - Config
        - Enabled
        - Name
        - Settings
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfig:
      properties:
        Args:
          $ref: '#/components/schemas/PluginConfigArgs'
        Description:
          description: description
          type: string
        DockerVersion:
          description: Docker Version used to create the plugin
          type: string
        Documentation:
          description: documentation
          type: string
        Entrypoint:
          description: entrypoint
          items:
            type: string
          type: array
        Env:
          description: env
          items:
            $ref: '#/components/schemas/PluginEnv'
          type: array
        Interface:
          $ref: '#/components/schemas/PluginConfigInterface'
        IpcHost:
          description: ipc host
          type: boolean
        Linux:
          $ref: '#/components/schemas/PluginConfigLinux'
        Mounts:
          description: mounts
          items:
            $ref: '#/components/schemas/PluginMount'
          type: array
        Network:
          $ref: '#/components/schemas/PluginConfigNetwork'
        PidHost:
          description: pid host
          type: boolean
        PropagatedMount:
          description: propagated mount
          type: string
        User:
          $ref: '#/components/schemas/PluginConfigUser'
        WorkDir:
          description: work dir
          type: string
        rootfs:
          $ref: '#/components/schemas/PluginConfigRootfs'
      required:
        - Args
        - Description
        - Documentation
        - Entrypoint
        - Env
        - Interface
        - IpcHost
        - Linux
        - Mounts
        - Network
        - PidHost
        - PropagatedMount
        - WorkDir
      title: PluginConfig The config of a plugin.
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigArgs:
      description: PluginConfigArgs plugin config args
      properties:
        Description:
          description: description
          type: string
        Name:
          description: name
          type: string
        Settable:
          description: settable
          items:
            type: string
          type: array
        Value:
          description: value
          items:
            type: string
          type: array
      required:
        - Description
        - Name
        - Settable
        - Value
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigInterface:
      description: PluginConfigInterface The interface between Docker and the plugin
      properties:
        ProtocolScheme:
          description: Protocol to use for clients connecting to the plugin.
          type: string
        Socket:
          description: socket
          type: string
        Types:
          description: types
          items:
            $ref: '#/components/schemas/PluginInterfaceType'
          type: array
      required:
        - Socket
        - Types
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigLinux:
      description: PluginConfigLinux plugin config linux
      properties:
        AllowAllDevices:
          description: allow all devices
          type: boolean
        Capabilities:
          description: capabilities
          items:
            type: string
          type: array
        Devices:
          description: devices
          items:
            $ref: '#/components/schemas/PluginDevice'
          type: array
      required:
        - AllowAllDevices
        - Capabilities
        - Devices
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigNetwork:
      description: PluginConfigNetwork plugin config network
      properties:
        Type:
          description: type
          type: string
      required:
        - Type
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigRootfs:
      description: PluginConfigRootfs plugin config rootfs
      properties:
        diff_ids:
          description: diff ids
          items:
            type: string
          type: array
          x-go-name: DiffIds
        type:
          description: type
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginConfigUser:
      description: PluginConfigUser plugin config user
      properties:
        GID:
          description: g ID
          format: uint32
          type: integer
        UID:
          description: UID
          format: uint32
          type: integer
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginDevice:
      description: PluginDevice plugin device
      properties:
        Description:
          description: description
          type: string
        Name:
          description: name
          type: string
        Path:
          description: path
          type: string
        Settable:
          description: settable
          items:
            type: string
          type: array
      required:
        - Description
        - Name
        - Path
        - Settable
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginEnv:
      description: PluginEnv plugin env
      properties:
        Description:
          description: description
          type: string
        Name:
          description: name
          type: string
        Settable:
          description: settable
          items:
            type: string
          type: array
        Value:
          description: value
          type: string
      required:
        - Description
        - Name
        - Settable
        - Value
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginInterfaceType:
      description: PluginInterfaceType plugin interface type
      properties:
        Capability:
          description: capability
          type: string
        Prefix:
          description: prefix
          type: string
        Version:
          description: version
          type: string
      required:
        - Capability
        - Prefix
        - Version
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginMount:
      description: PluginMount plugin mount
      properties:
        Description:
          description: description
          type: string
        Destination:
          description: destination
          type: string
        Name:
          description: name
          type: string
        Options:
          description: options
          items:
            type: string
          type: array
        Settable:
          description: settable
          items:
            type: string
          type: array
        Source:
          description: source
          type: string
        Type:
          description: type
          type: string
      required:
        - Description
        - Destination
        - Name
        - Options
        - Settable
        - Source
        - Type
      type: object
      x-go-package: github.com/docker/docker/api/types
    PluginSettings:
      properties:
        Args:
          description: args
          items:
            type: string
          type: array
        Devices:
          description: devices
          items:
            $ref: '#/components/schemas/PluginDevice'
          type: array
        Env:
          description: env
          items:
            type: string
          type: array
        Mounts:
          description: mounts
          items:
            $ref: '#/components/schemas/PluginMount'
          type: array
      required:
        - Args
        - Devices
        - Env
        - Mounts
      title: PluginSettings Settings that can be modified by users.
      type: object
      x-go-package: github.com/docker/docker/api/types
    Port:
      description: Port An open port on a container
      properties:
        IP:
          description: Host IP address that the container's port is mapped to
          type: string
        PrivatePort:
          description: Port on the container
          format: uint16
          type: integer
        PublicPort:
          description: Port exposed on the host
          format: uint16
          type: integer
        Type:
          description: type
          type: string
      required:
        - PrivatePort
        - Type
      type: object
      x-go-package: github.com/docker/docker/api/types
    PublishState:
      description: |-
        PublishState represents the state of a Volume as it pertains to its
        use on a particular Node.
      type: string
      x-go-package: github.com/docker/docker/api/types/volume
    PublishStatus:
      description: |-
        PublishStatus represents the status of the volume as published to an
        individual node
      properties:
        NodeID:
          description: NodeID is the ID of the swarm node this Volume is published to.
          type: string
        PublishContext:
          additionalProperties:
            type: string
          description: |-
            PublishContext is the PublishContext returned by the CSI plugin when
            a volume is published.
          type: object
        State:
          $ref: '#/components/schemas/PublishState'
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    ResultMeta:
      properties:
        totalPages:
          format: int64
          type: integer
          x-go-name: TotalPages
        totalResults:
          description: NB do not use omitempty here, as zero is a valid value
          format: int64
          type: integer
          x-go-name: TotalResults
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    Scope:
      description: |-
        Scope defines the Scope of a Cluster Volume. This is how many nodes a
        Volume can be accessed simultaneously on.
      type: string
      x-go-package: github.com/docker/docker/api/types/volume
    Secret:
      description: >-
        Secret represents a Swarm Secret value that must be passed to the CSI

        storage plugin when operating on this Volume. It represents one
        key-value

        pair of possibly many.
      properties:
        Key:
          description: >-
            Key is the name of the key of the key-value pair passed to the
            plugin.
          type: string
        Secret:
          description: >-
            Secret is the swarm Secret object from which to read data. This can
            be a

            Secret name or ID. The Secret data is retrieved by Swarm and used as
            the

            value of the key-value pair passed to the plugin.
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    SecretKey:
      properties:
        key_name:
          type: string
          x-go-name: Name
        key_version:
          format: int64
          type: integer
          x-go-name: Version
      type: object
      x-go-package: github.com/cydarm/case-management/common/secrets
    ServiceCreateResponse:
      description: >-
        ServiceCreateResponse contains the information returned to a client on
        the

        creation of a new service.
      properties:
        ID:
          description: The ID of the created service.
          type: string
        Warnings:
          description: >-
            Optional warning message.


            FIXME(thaJeztah): this should have "omitempty" in the generated
            type.
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/swarm
    ServiceUpdateResponse:
      description: ServiceUpdateResponse service update response
      properties:
        Warnings:
          description: Optional warning messages
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/swarm
    SharingMode:
      description: >-
        SharingMode defines the Sharing of a Cluster Volume. This is how Tasks
        using a

        Volume at the same time can use it.
      type: string
      x-go-package: github.com/docker/docker/api/types/volume
    Summary:
      description: Summary summary
      properties:
        Containers:
          description: >-
            Number of containers using this image. Includes both stopped and
            running

            containers.


            This size is not calculated by default, and depends on which API
            endpoint

            is used. `-1` indicates that the value has not been set /
            calculated.
          format: int64
          type: integer
        Created:
          description: |-
            Date and time at which the image was created as a Unix timestamp
            (number of seconds sinds EPOCH).
          format: int64
          type: integer
        Id:
          description: |-
            ID is the content-addressable ID of an image.

            This identifier is a content-addressable digest calculated from the
            image's configuration (which includes the digests of layers used by
            the image).

            Note that this digest differs from the `RepoDigests` below, which
            holds digests of image manifests that reference the image.
          type: string
          x-go-name: ID
        Labels:
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
          type: object
        ParentId:
          description: |-
            ID of the parent image.

            Depending on how the image was created, this field may be empty and
            is only set for images that were built/created locally. This field
            is empty if the image was pulled from an image registry.
          type: string
          x-go-name: ParentID
        RepoDigests:
          description: >-
            List of content-addressable digests of locally available image
            manifests

            that the image is referenced from. Multiple manifests can refer to
            the

            same image.


            These digests are usually only available if the image was either
            pulled

            from a registry, or if the image was pushed to a registry, which is
            when

            the manifest is generated and its digest calculated.
          items:
            type: string
          type: array
        RepoTags:
          description: >-
            List of image names/tags in the local image cache that reference
            this

            image.


            Multiple image tags can refer to the same image, and this list may
            be

            empty if no tags reference the image, in which case the image is

            "untagged", in which case it can still be referenced by its ID.
          items:
            type: string
          type: array
        SharedSize:
          description: >-
            Total size of image layers that are shared between this image and
            other

            images.


            This size is not calculated by default. `-1` indicates that the
            value

            has not been set / calculated.
          format: int64
          type: integer
        Size:
          description: Total size of the image including all layers it is composed of.
          format: int64
          type: integer
        VirtualSize:
          description: >-
            Total size of the image including all layers it is composed of.


            Deprecated: this field is omitted in API v1.44, but kept for
            backward compatibility. Use Size instead.
          format: int64
          type: integer
      required:
        - Containers
        - Created
        - Id
        - Labels
        - ParentId
        - RepoDigests
        - RepoTags
        - SharedSize
        - Size
      type: object
      x-go-package: github.com/docker/docker/api/types/image
    Topology:
      description: |-
        This description is taken verbatim from the CSI Spec:

        A topological domain is a sub-division of a cluster, like "region",
        "zone", "rack", etc.
        A topological segment is a specific instance of a topological domain,
        like "zone3", "rack3", etc.
        For example {"com.company/zone": "Z1", "com.company/rack": "R3"}
        Valid keys have two segments: an OPTIONAL prefix and name, separated
        by a slash (/), for example: "com.company.example/zone".
        The key name segment is REQUIRED. The prefix is OPTIONAL.
        The key name MUST be 63 characters or less, begin and end with an
        alphanumeric character ([a-z0-9A-Z]), and contain only dashes (-),
        underscores (_), dots (.), or alphanumerics in between, for example
        "zone".
        The key prefix MUST be 63 characters or less, begin and end with a
        lower-case alphanumeric character ([a-z0-9]), contain only
        dashes (-), dots (.), or lower-case alphanumerics in between, and
        follow domain name notation format
        (https://tools.ietf.org/html/rfc1035#section-2.3.1).
        The key prefix SHOULD include the plugin's host company name and/or
        the plugin name, to minimize the possibility of collisions with keys
        from other plugins.
        If a key prefix is specified, it MUST be identical across all
        topology keys returned by the SP (across all RPCs).
        Keys MUST be case-insensitive. Meaning the keys "Zone" and "zone"
        MUST not both exist.
        Each value (topological segment) MUST contain 1 or more strings.
        Each string MUST be 63 characters or less and begin and end with an
        alphanumeric character with '-', '_', '.', or alphanumerics in
        between.
      properties:
        Segments:
          additionalProperties:
            type: string
          type: object
      title: Topology is a map of topological domains to topological segments.
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    TopologyRequirement:
      description: |-
        TopologyRequirement expresses the user's requirements for a volume's
        accessible topology.
      properties:
        Preferred:
          description: >-
            Preferred is a list of Topologies that the volume should attempt to
            be

            provisioned in.


            Taken from the CSI spec:


            Specifies the list of topologies the CO would prefer the volume to

            be provisioned in.


            This field is OPTIONAL. If TopologyRequirement is specified either

            requisite or preferred or both MUST be specified.


            An SP MUST attempt to make the provisioned volume available using

            the preferred topologies in order from first to last.


            If requisite is specified, all topologies in preferred list MUST

            also be present in the list of requisite topologies.


            If the SP is unable to to make the provisioned volume available

            from any of the preferred topologies, the SP MAY choose a topology

            from the list of requisite topologies.

            If the list of requisite topologies is not specified, then the SP

            MAY choose from the list of all possible topologies.

            If the list of requisite topologies is specified and the SP is

            unable to to make the provisioned volume available from any of the

            requisite topologies it MUST fail the CreateVolume call.


            Example 1:

            Given a volume should be accessible from a single zone, and

            requisite =

            {"region": "R1", "zone": "Z2"},

            {"region": "R1", "zone": "Z3"}

            preferred =

            {"region": "R1", "zone": "Z3"}

            then the the SP SHOULD first attempt to make the provisioned volume

            available from "zone" "Z3" in the "region" "R1" and fall back to

            "zone" "Z2" in the "region" "R1" if that is not possible.


            Example 2:

            Given a volume should be accessible from a single zone, and

            requisite =

            {"region": "R1", "zone": "Z2"},

            {"region": "R1", "zone": "Z3"},

            {"region": "R1", "zone": "Z4"},

            {"region": "R1", "zone": "Z5"}

            preferred =

            {"region": "R1", "zone": "Z4"},

            {"region": "R1", "zone": "Z2"}

            then the the SP SHOULD first attempt to make the provisioned volume

            accessible from "zone" "Z4" in the "region" "R1" and fall back to

            "zone" "Z2" in the "region" "R1" if that is not possible. If that

            is not possible, the SP may choose between either the "zone"

            "Z3" or "Z5" in the "region" "R1".


            Example 3:

            Given a volume should be accessible from TWO zones (because an

            opaque parameter in CreateVolumeRequest, for example, specifies

            the volume is accessible from two zones, aka synchronously

            replicated), and

            requisite =

            {"region": "R1", "zone": "Z2"},

            {"region": "R1", "zone": "Z3"},

            {"region": "R1", "zone": "Z4"},

            {"region": "R1", "zone": "Z5"}

            preferred =

            {"region": "R1", "zone": "Z5"},

            {"region": "R1", "zone": "Z3"}

            then the the SP SHOULD first attempt to make the provisioned volume

            accessible from the combination of the two "zones" "Z5" and "Z3" in

            the "region" "R1". If that's not possible, it should fall back to

            a combination of "Z5" and other possibilities from the list of

            requisite. If that's not possible, it should fall back  to a

            combination of "Z3" and other possibilities from the list of

            requisite. If that's not possible, it should fall back  to a

            combination of other possibilities from the list of requisite.
          items:
            $ref: '#/components/schemas/Topology'
          type: array
        Requisite:
          description: |-
            Requisite specifies a list of Topologies, at least one of which the
            volume must be accessible from.

            Taken verbatim from the CSI Spec:

            Specifies the list of topologies the provisioned volume MUST be
            accessible from.
            This field is OPTIONAL. If TopologyRequirement is specified either
            requisite or preferred or both MUST be specified.

            If requisite is specified, the provisioned volume MUST be
            accessible from at least one of the requisite topologies.

            Given
            x = number of topologies provisioned volume is accessible from
            n = number of requisite topologies
            The CO MUST ensure n >= 1. The SP MUST ensure x >= 1
            If x==n, then the SP MUST make the provisioned volume available to
            all topologies from the list of requisite topologies. If it is
            unable to do so, the SP MUST fail the CreateVolume call.
            For example, if a volume should be accessible from a single zone,
            and requisite =
            {"region": "R1", "zone": "Z2"}
            then the provisioned volume MUST be accessible from the "region"
            "R1" and the "zone" "Z2".
            Similarly, if a volume should be accessible from two zones, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"}
            then the provisioned volume MUST be accessible from the "region"
            "R1" and both "zone" "Z2" and "zone" "Z3".

            If x<n, then the SP SHALL choose x unique topologies from the list
            of requisite topologies. If it is unable to do so, the SP MUST fail
            the CreateVolume call.
            For example, if a volume should be accessible from a single zone,
            and requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"}
            then the SP may choose to make the provisioned volume available in
            either the "zone" "Z2" or the "zone" "Z3" in the "region" "R1".
            Similarly, if a volume should be accessible from two zones, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"},
            {"region": "R1", "zone": "Z4"}
            then the provisioned volume MUST be accessible from any combination
            of two unique topologies: e.g. "R1/Z2" and "R1/Z3", or "R1/Z2" and
            "R1/Z4", or "R1/Z3" and "R1/Z4".

            If x>n, then the SP MUST make the provisioned volume available from
            all topologies from the list of requisite topologies and MAY choose
            the remaining x-n unique topologies from the list of all possible
            topologies. If it is unable to do so, the SP MUST fail the
            CreateVolume call.
            For example, if a volume should be accessible from two zones, and
            requisite =
            {"region": "R1", "zone": "Z2"}
            then the provisioned volume MUST be accessible from the "region"
            "R1" and the "zone" "Z2" and the SP may select the second zone
            independently, e.g. "R1/Z4".
          items:
            $ref: '#/components/schemas/Topology'
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    TotpCode:
      description: TotpCode contains a 6 digit TOTP code
      properties:
        totpCode:
          description: The TOTP code
          maxLength: 6
          minLength: 6
          type: string
          x-go-name: TotpCode
      required:
        - totpCode
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    TotpSecret:
      description: TotpSecret contains a TOTP secret string and the PNG of its QR code
      properties:
        qrBytedata:
          description: The raw bytes comprising the QR code, encoded in base64
          type: string
          x-go-name: QrByteData
        totpSecret:
          description: The TOTP secret
          type: string
          x-go-name: Secret
      required:
        - totpSecret
        - qrBytedata
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    Trigger:
      description: Trigger model for Api
      properties:
        TriggerActions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
        method:
          type: string
          x-go-name: Method
        uuid:
          format: uuid
          type: string
          x-go-name: Uuid
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    TypeBlock:
      description: Intentionally empty.
      title: TypeBlock defines options for using a volume as a block-type volume.
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    TypeMount:
      description: |-
        TypeMount contains options for using a volume as a Mount-type
        volume.
      properties:
        FsType:
          description: FsType specifies the filesystem type for the mount volume. Optional.
          type: string
        MountFlags:
          description: MountFlags defines flags to pass when mounting the volume. Optional.
          items:
            type: string
          type: array
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    UpdateAssetRequest:
      description: UpdateAssetRequest is a request to update an asset in STIX
      properties:
        acl:
          description: The ACL of the data object
          format: uuid
          type: string
          x-go-name: ACL
        description:
          description: Description of asset
          type: string
          x-go-name: Description
        infrastructureTypes:
          description: >-
            The infrastructure_type labels on this asset, eg. server, database,
            s3-bucket
          items:
            type: string
          type: array
          x-go-name: InfrastructureTypes
        ipAddresses:
          description: list of IPv4 or IPv6 addresses used by this asset
          items:
            type: string
          type: array
          x-go-name: IpAddresses
        location:
          description: Location of asset, eg. datacentre, cloud tenancy
          type: string
          x-go-name: Location
        name:
          description: Name of asset
          type: string
          x-go-name: Name
        orgUuid:
          description: UUID of organisation from cy_org
          format: uuid
          type: string
          x-go-name: Org
        organisation:
          description: Organisation the asset belongs to
          type: string
          x-go-name: Organisation
        userUuid:
          description: UUID of user requesting update
          format: uuid
          type: string
          x-go-name: UserUuid
        uuid:
          description: The UUID of this asset
          format: uuid
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - infrastructureTypes
        - name
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    UpdateContactRequest:
      description: UpdateContactRequest is a request to create a contact in STIX
      properties:
        acl:
          description: The ACL of the data object
          format: uuid
          type: string
          x-go-name: ACL
        email:
          description: List of email addresses for contact
          items:
            type: string
          type: array
          x-go-name: Email
        name:
          description: First name of contact
          type: string
          x-go-name: Name
        orgUuid:
          description: UUID of organisation from cy_org
          format: uuid
          type: string
          x-go-name: OrgUuid
        organisation:
          description: Organisation the contact is from
          type: string
          x-go-name: Organisation
        phone:
          description: list of phone numbers for contact
          items:
            type: string
          type: array
          x-go-name: Phone
        userUuid:
          description: UUID of user requesting update
          format: uuid
          type: string
          x-go-name: UserUuid
        uuid:
          description: The UUID of this contact
          format: uuid
          type: string
          x-go-name: Uuid
      required:
        - uuid
      type: object
      x-go-package: github.com/cydarm/case-management/backend/model
    UsageData:
      description: >-
        UsageData Usage details about the volume. This information is used by
        the

        `GET /system/df` endpoint, and omitted in other endpoints.
      properties:
        RefCount:
          description: |-
            The number of containers referencing this volume. This field
            is set to `-1` if the reference-count is not available.
          format: int64
          type: integer
        Size:
          description: |-
            Amount of disk space used by the volume (in bytes). This information
            is only available for volumes created with the `"local"` volume
            driver. For volumes created with other volume drivers, this field
            is set to `-1` ("not available")
          format: int64
          type: integer
      required:
        - RefCount
        - Size
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    Version:
      properties:
        Index:
          format: uint64
          type: integer
      title: Version represents the internal object version.
      type: object
      x-go-package: github.com/docker/docker/api/types/swarm
    Volume:
      description: Volume volume
      properties:
        ClusterVolume:
          $ref: '#/components/schemas/ClusterVolume'
        CreatedAt:
          description: Date/Time the volume was created.
          type: string
        Driver:
          description: Name of the volume driver used by the volume.
          type: string
        Labels:
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
          type: object
        Mountpoint:
          description: Mount path of the volume on the host.
          type: string
        Name:
          description: Name of the volume.
          type: string
        Options:
          additionalProperties:
            type: string
          description: The driver specific options used when creating the volume.
          type: object
        Scope:
          description: >-
            The level at which the volume exists. Either `global` for
            cluster-wide,

            or `local` for machine level.
          type: string
        Status:
          additionalProperties: {}
          description: |-
            Low-level details about the volume, provided by the volume driver.
            Details are returned as a map with key/value pairs:
            `{"key":"value","key2":"value2"}`.

            The `Status` field is optional, and is omitted if the volume driver
            does not support this feature.
          type: object
        UsageData:
          $ref: '#/components/schemas/UsageData'
      required:
        - Driver
        - Labels
        - Mountpoint
        - Name
        - Options
        - Scope
      type: object
      x-go-package: github.com/docker/docker/api/types/volume
    WaitExitError:
      description: WaitExitError container waiting error, if any
      properties:
        Message:
          description: Details of an error
          type: string
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    WaitResponse:
      description: OK response to ContainerWait operation
      properties:
        Error:
          $ref: '#/components/schemas/WaitExitError'
        StatusCode:
          description: Exit code of the container
          format: int64
          type: integer
      required:
        - StatusCode
      title: WaitResponse ContainerWaitResponse
      type: object
      x-go-package: github.com/docker/docker/api/types/container
    aci:
      description: >-
        ACI is an Access Control Item, comprising a group, and a permission
        granted to the group
      properties:
        group:
          $ref: '#/components/schemas/group'
        permission:
          $ref: '#/components/schemas/permission'
        uuid:
          description: The UUID of the ACI
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - permission
        - group
      type: object
      x-go-name: Aci
      x-go-package: github.com/cydarm/case-management/backend/model
    acl:
      description: ACL is an Access Control List, comprising a list of Access Control Items
      properties:
        aci:
          description: A list of ACIs for this ACL
          items:
            $ref: '#/components/schemas/aci'
          minLength: 1
          type: array
          x-go-name: Aci
        deprecated:
          description: A boolean flag that specifies whether this ACL is deprecated
          minLength: 1
          type: boolean
          x-go-name: Deprecated
        description:
          description: A description for this ACL
          minLength: 1
          type: string
          x-go-name: Description
        forData:
          description: A boolean flag that specifies whether this ACL is intended for data
          minLength: 1
          type: boolean
          x-go-name: ForData
        uuid:
          description: The UUID of the ACL
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - description
        - forData
        - deprecated
        - aci
      type: object
      x-go-name: Acl
      x-go-package: github.com/cydarm/case-management/backend/model
    actionDataStub:
      description: ActionDataStub is the metadata of an action data
      properties:
        acl:
          description: The ACL UUID of the data object
          format: uuid
          type: string
          x-go-name: ACL
        action_instance_uuid:
          description: The UUID of the action instance
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: ActionInstance
        audit:
          description: Is this data item an audit message
          type: boolean
          x-go-name: Audit
        caseuuid:
          description: The UUID of the case
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CaseUuid
        created:
          description: The time the item was created, as an RFC3339 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        creatorusername:
          description: The name of the creator user
          type: string
          x-go-name: CreatorUsername
        creatoruuid:
          description: The UUID of the creator user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CreatorUuid
        datalocation:
          description: >-
            The idenitifier used to identify the data where the data is stored
            now
          type: string
          x-go-name: DataLocation
        datalocationtype:
          description: Where the data is stored now
          type: string
          x-go-name: DataLocationType
        datasize:
          description: The size of the data, in bytes
          format: int64
          type: integer
          x-go-name: DataSize
        datasource:
          description: Where the data came from
          type: string
          x-go-name: DataSource
        deleted:
          description: Has this data item been deleted
          type: boolean
          x-go-name: Deleted
        edited:
          description: Has this data been edited
          type: boolean
          x-go-name: Edited
        editorusername:
          description: The name of the editor user
          type: string
          x-go-name: EditorUsername
        editoruuid:
          description: The UUID of the last editor user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: EditorUuid
        filename:
          description: The file name of the data, if it is a file
          type: string
          x-go-name: FileName
        hidden:
          description: Is this data item hidden
          type: boolean
          x-go-name: Hidden
        lastmodified:
          description: The time the item was created, as an RFC3339 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: LastModified
        location:
          description: How the data is identiifed in the location where the data came from
          type: string
          x-go-name: Location
        mimetype:
          description: The MIME type of the data
          type: string
          x-go-name: MimeType
        occurred:
          description: The time the item reported occurred, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Occurred
        parentuuid:
          description: The UUID of the parent data item
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: ParentUuid
        playbook_instance_uuid:
          description: >-
            The UUID of the case playbook instance - if the action is a case
            playbook action
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: PlaybookInstance
        significance:
          description: The signficance level of the data item
          type: string
          x-go-name: Significance
        sigprecedence:
          description: The precedence of the significance of the data item
          type: string
          x-go-name: SigPrecedence
        uuid:
          description: The UUID of the data stub
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        version:
          description: The version of the data item
          format: int64
          type: integer
          x-go-name: Version
      required:
        - uuid
        - created
        - parentuuid
        - creatoruuid
        - creatorusername
        - mimetype
        - datasize
        - datasource
        - location
        - datalocation
        - datalocationtype
        - significance
        - sigprecedence
        - audit
        - deleted
        - acl
        - edited
        - editoruuid
        - editorusername
        - lastmodified
        - caseuuid
      type: object
      x-go-name: ActionDataStub
      x-go-package: github.com/cydarm/case-management/backend/model
    actuator:
      description: Actuator is an integration actuator
      properties:
        acl_uuid:
          description: The UUID of the actuator's ACL
          format: uuid
          type: string
          x-go-name: Acl
        api_poll_rate:
          $ref: '#/components/schemas/Duration'
        config:
          $ref: '#/components/schemas/integrationConfig'
        config_schema:
          $ref: '#/components/schemas/integrationConfigSchema'
        connectors:
          description: The UUIDs of the actuator's connectors
          items:
            format: uuid
            type: string
          type: array
          x-go-name: Connectors
        description:
          description: The description of the actuator
          type: string
          x-go-name: Description
        group:
          description: The UUID of the group associated with this actuator
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Group
        heartbeat:
          description: |-
            The time of the last heartbeat received
            from the actuator
          format: date-time
          type: string
          x-go-name: Heartbeat
        heartbeat_rate:
          $ref: '#/components/schemas/Duration'
        log_level:
          $ref: '#/components/schemas/LogLevel'
        name:
          description: The name of the actuator
          type: string
          x-go-name: Name
        principal_uuid:
          description: The UUID of the actuator's user account
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Principal
        status:
          $ref: '#/components/schemas/integrationStatus'
        supported_connector_types:
          description: The UUIDs of the connector types supported by this actuator
          items:
            format: uuid
            type: string
          type: array
          x-go-name: SupportedConnectorTypes
        uuid:
          description: The UUID of the actuator
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - name
        - principal_uuid
        - config_schema
        - supported_connector_types
        - api_poll_rate
        - log_level
        - uuid
        - config
        - group
        - status
        - connectors
        - acl_uuid
      type: object
      x-go-name: Actuator
      x-go-package: github.com/cydarm/case-management/backend/model
    addCaseRequest:
      description: AddCaseRequest is adding a case to the case cache
      properties:
        caseUuid:
          format: uuid
          type: string
          x-go-name: CaseUuid
      type: object
      x-go-name: AddCaseToCacheRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    analystReportRequest:
      description: >-
        AnalystReportRequest is a request for a report across specific analyst's
        performances with certain properties
      properties:
        tags:
          description: The names of tags to be included in the report.
          items:
            type: string
          type: array
          x-go-name: Tags
        endTime:
          description: The end time of the report.
          type: string
          x-go-name: EndTime
        format:
          description: The format of the report.
          type: string
          x-go-name: Format
        org:
          description: The org uuid for the report to be generated for.
          format: uuid
          type: string
          x-go-name: Org
        startTime:
          description: The start time of the report.
          type: string
          x-go-name: StartTime
        states:
          description: The case states to be included in the report.
          items:
            type: string
          type: array
          x-go-name: States
        userNames:
          description: The names of users to be included in the report.
          items:
            type: string
          type: array
          x-go-name: UserNames
      required:
        - org
        - startTime
        - endTime
        - userNames
      type: object
      x-go-name: AnalystReportRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    atcAction:
      description: AtcAction is an action used in ATC playbooks
      properties:
        tags:
          description: The tags associated with the playbook action
          items:
            type: string
          type: array
          x-go-name: Tags
        acl:
          description: The UUID of the ACL of the playbook action
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        created:
          description: The time the playbook was created, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        deleted:
          description: Whether the action has been deleted
          type: boolean
          x-go-name: Deleted
        description:
          description: A description for the action
          type: string
          x-go-name: Description
        modified:
          description: The time the playbook was last modified, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Modified
        name:
          description: The name of the action
          minLength: 1
          type: string
          x-go-name: Name
        uuid:
          description: The UUID of the action
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - name
        - created
        - modified
        - acl
        - tags
      type: object
      x-go-name: AtcAction
      x-go-package: github.com/cydarm/case-management/backend/model
    atcControlFlowRequest:
      properties:
        precedence:
          default: 0
          description: |-
            The desired precedence of the action in the playbook. A value of
            zero indicates that it should be placed with the current highest
            precedence+1.
          format: uint64
          type: integer
          x-go-name: Precedence
      title: >-
        AtcControlFlowReques is a request to add an ATC action to a playbook
        with the specified control flow.
      type: object
      x-go-name: AtcControlFlowRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    atcPlaybook:
      description: AtcPlaybook is a sequence of actions used in incident response
      properties:
        tags:
          description: The tags associated with the playbook
          items:
            type: string
          type: array
          x-go-name: Tags
        acl:
          description: The UUID of the ACL of the playbook
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        actions:
          description: The actions included in the playbook
          items:
            $ref: '#/components/schemas/atcAction'
          type: array
          x-go-name: Actions
        created:
          description: The time the playbook was created, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        deleted:
          description: The time the playbook was deleted, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: boolean
          x-go-name: Deleted
        description:
          description: A description for the playbook
          type: string
          x-go-name: Description
        modified:
          description: The time the playbook was last modified, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Modified
        name:
          description: The name of the playbook
          minLength: 1
          type: string
          x-go-name: Name
        uuid:
          description: The UUID of the playbook
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - name
        - tags
        - actions
      type: object
      x-go-name: AtcPlaybook
      x-go-package: github.com/cydarm/case-management/backend/model
    averageTime:
      description: AverageTime is a record of a single timing statistic
      properties:
        count:
          description: The number of items processed
          format: int64
          type: integer
          x-go-name: Count
        method:
          description: The method used to derive the metric
          type: string
          x-go-name: Method
        name:
          description: The name of the metric
          type: string
          x-go-name: Name
        precedence:
          description: The precedence of this item
          format: int64
          type: integer
          x-go-name: Precedence
        value:
          description: The value of the metric
          format: double
          type: number
          x-go-name: Value
      required:
        - method
        - name
        - value
        - count
      type: object
      x-go-name: AverageTime
      x-go-package: github.com/cydarm/case-management/backend/model
    cacaoAction:
      description: CacaoAction models a CACAO playbook action
      properties:
        tags:
          description: A list of tags for this playbook
          items:
            type: string
          type: array
          x-go-name: Tags
        acl:
          description: UUID of the ACL for this playbook
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        agent:
          description: The ID of the agent that will execute the action commands
          type: string
          x-go-name: Agent
        cases:
          additionalProperties:
            type: string
          description: A mapping from values of the switch variable to action IDs
          type: object
          x-go-name: SwitchCases
        commands:
          description: The commands executed in the action
          type: object
          x-go-name: Commands
        condition:
          description: The condition to be evaluated for branching and looping actions
          type: string
          x-go-name: Condition
        created:
          description: The time the playbook was created, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        delay:
          default: 0
          description: The action delay
          format: uint64
          type: integer
          x-go-name: Delay
        description:
          description: A description of the action
          type: string
          x-go-name: Description
        external_refs:
          description: The external references
          type: object
          x-go-name: ExternalRefs
        id:
          description: The ID of the this action
          type: string
          x-go-name: Id
        in_args:
          description: A list of input arguments to the action
          items:
            type: string
          type: array
          x-go-name: InArgs
        modified:
          description: The time the playbook was last modified, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Modified
        name:
          description: The name of the action
          minLength: 1
          type: string
          x-go-name: Name
        next_steps:
          description: The IDs of the next steps to be executed in parallel
          items:
            type: string
          type: array
          x-go-name: ParallelNextSteps
        on_completion:
          description: The ID of the action to be executed on completion of this action
          type: string
          x-go-name: OnCompletion
        on_failure:
          description: The ID of the action to be executed when this action fails
          type: string
          x-go-name: OnFailure
        on_false:
          description: >-
            The ID of the action to be executed if the condition evaluates to
            false
          type: string
          x-go-name: OnFalse
        on_success:
          description: >-
            The ID of the action to be executed when this action successfully
            completes
          type: string
          x-go-name: OnSuccess
        on_true:
          description: >-
            The ID of the action to be executed if the condition evaluates to
            true
          type: string
          x-go-name: OnTrue
        out_args:
          description: A list of output values from the action
          items:
            type: string
          type: array
          x-go-name: OutArgs
        owner:
          description: The UUID for this playbook
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Owner
        playbook_id:
          description: The ID of the next playbook to be executed
          type: string
          x-go-name: PlaybookId
        revoked:
          default: false
          description: Whether the playbook was deleted/revoked
          type: boolean
          x-go-name: Deleted
        step_extensions:
          description: The action extensions
          type: object
          x-go-name: StepExtensions
        step_variables:
          additionalProperties:
            $ref: '#/components/schemas/CacaoActionVariableType'
          description: The names and types of the action variables
          type: object
          x-go-name: Variables
        switch:
          description: The switch variable
          type: string
          x-go-name: Switch
        targets:
          description: A list of IDs of targets that will execute the action commands
          items:
            type: string
          type: array
          x-go-name: Targets
        timeout:
          description: The action timeout
          format: uint64
          type: integer
          x-go-name: Timeout
        type:
          description: The type of the action
          minLength: 1
          type: string
          x-go-name: Type
        uuid:
          description: The UUID for this playbook
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - id
        - type
        - name
        - acl
        - owner
      type: object
      x-go-name: CacaoAction
      x-go-package: github.com/cydarm/case-management/backend/model
    cacaoControlFlow:
      properties:
        cases:
          additionalProperties:
            type: string
          description: A mapping from values of the switch variable to action IDs
          type: object
          x-go-name: SwitchCases
        condition:
          description: The condition to be evaluated for branching and looping actions
          type: string
          x-go-name: Condition
        next_steps:
          description: The IDs of the next steps to be executed in parallel
          items:
            type: string
          type: array
          x-go-name: ParallelNextSteps
        on_completion:
          description: The ID of the action to be executed on completion of this action
          type: string
          x-go-name: OnCompletion
        on_failure:
          description: The ID of the action to be executed when this action fails
          type: string
          x-go-name: OnFailure
        on_false:
          description: >-
            The ID of the action to be executed if the condition evaluates to
            false
          type: string
          x-go-name: OnFalse
        on_success:
          description: >-
            The ID of the action to be executed when this action successfully
            completes
          type: string
          x-go-name: OnSuccess
        on_true:
          description: >-
            The ID of the action to be executed if the condition evaluates to
            true
          type: string
          x-go-name: OnTrue
        playbook_id:
          description: The ID of the next playbook to be executed
          type: string
          x-go-name: PlaybookId
        switch:
          description: The switch variable
          type: string
          x-go-name: Switch
      title: >-
        CacaoAction models the control flow elements of CACAO playbook action
        within a playbook.
      type: object
      x-go-name: CacaoActionControlFlow
      x-go-package: github.com/cydarm/case-management/backend/model
    cacaoControlFlowRequest:
      properties:
        condition:
          description: The condition to be evaluated for branching and looping actions
          type: string
          x-go-name: Condition
        next_steps:
          description: The UUIDs of the next actions to be executed in parallel
          items:
            format: uuid
            type: string
          type: array
          x-go-name: ParallelNextSteps
        on_completion:
          description: >-
            The UUID of the action to be executed on completion of the current
            action
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: OnCompletion
        on_failure:
          description: >-
            The UUID of the action to be executed on the failure of the current
            action
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: OnFailure
        on_false:
          description: >-
            The UUID of the action to be executed when a loop or branch
            condition evaluates to false
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: OnFalse
        on_success:
          description: >-
            The UUID of the action to be executed on the success of the current
            action
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: OnSuccess
        on_true:
          description: >-
            The UUID of the action to be executed when a loop or branch
            condition evaluates to true
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: OnTrue
        playbook_id:
          description: The UUID of the next playbook to be executed
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: NextPlaybook
        switch:
          description: The switch variable
          type: string
          x-go-name: Switch
        switch_cases:
          additionalProperties:
            format: uuid
            type: string
          description: >-
            A map from a variable value to the UUID representing the switch
            cases
          type: object
          x-go-name: SwitchCases
        workflow_exception:
          default: false
          description: Whether the current action is the error state of the playbook
          type: boolean
          x-go-name: ExceptionAction
        workflow_start:
          default: false
          description: Whether the current action is the start state of the playbook
          type: boolean
          x-go-name: StartAction
      title: >-
        CacaoControlFlowRequest is a request to add a CACAO action to a playbook
        with the specified control flow.
      type: object
      x-go-name: CacaoControlFlowRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    cacaoPlaybook:
      description: CacaoPlaybook represents a CACAO playbnook
      properties:
        acl:
          description: The UUID of the ACL for this playbook
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        agent_definitions:
          description: |-
            A dictionary of agents that can be referenced
            from workflow steps found in the workflow property.
          type: object
          x-go-name: AgentDefinitions
        created:
          description: The time the playbook was created, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        created_by:
          description: The STIX entity/organisation that created the playbook
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CreatorEntity
        creator:
          description: The UUID of the user who created the playbook
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CreatorUser
        data_marking_definitions:
          description: |-
            A dictionary of data marking definitions that can be referenced
            from the playbook found in the markings property.
          type: object
          x-go-name: DataMarkingDefinitions
        derived_from:
          description: >-
            The identifiers of the playbooks from which this playbook was
            derived
          items:
            type: string
          type: array
          x-go-name: DerivedFrom
        description:
          description: A description for the playbook
          type: string
          x-go-name: Description
        extension_definitions:
          description: |-
            A dictionary of extension definitions that are referenced
            from workflow steps found in the workflow property.
          type: object
          x-go-name: ExtensionDefinitions
        external_references:
          description: A list of external references associated with the playbook
          type: object
          x-go-name: ExternalRefs
        id:
          description: The ID of the playbook
          minLength: 28
          type: string
          x-go-name: Id
        impact:
          description: The impact score associated with the playbook
          format: int64
          type: integer
          x-go-name: Impact
        industry_sectors:
          description: An optional set of industry sectors that this playbook applies to.
          items:
            type: string
          type: array
          x-go-name: IndustrySectors
        labels:
          description: >-
            An optional set of terms, labels, or tags associated with this
            playbook.
          items:
            type: string
          type: array
          x-go-name: Labels
        markings:
          description: A list of the CACAO markings associated with the playbook
          items:
            type: string
          type: array
          x-go-name: Markings
        modified:
          description: The time the playbook was last modified, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Modified
        name:
          description: The name of the playbook
          minLength: 1
          type: string
          x-go-name: Name
        playbook_activities:
          description: A list of activities for this playbook
          items:
            type: string
          type: array
          x-go-name: Activities
        playbook_complexity:
          $ref: '#/components/schemas/cacaoPlaybookComplexity'
        playbook_types:
          description: A list of playbook types for this playbook
          items:
            type: string
          type: array
          x-go-name: Types
        playbook_variables:
          additionalProperties:
            $ref: '#/components/schemas/CacaoPlaybookVariableType'
          description: The names and types of the variables used in the playbook
          type: object
          x-go-name: Variables
        priority:
          description: The priority score associated with the playbook
          format: int64
          type: integer
          x-go-name: Priority
        revoked:
          default: false
          description: Whether the playbook was deleted/revoked
          type: boolean
          x-go-name: Deleted
        severity:
          description: The severity score associated with the playbook
          format: int64
          type: integer
          x-go-name: Severity
        signatures:
          description: A list of digital signatures for this playbook
          type: object
          x-go-name: Signatures
        spec_version:
          description: The specification version of the playbook, should be "cacao-2.0"
          minLength: 1
          type: string
          x-go-name: SpecVersion
        targets:
          description: |-
            A dictionary of targets that can be referenced
            from workflow steps found in the workflow property.
          type: object
          x-go-name: Targets
        type:
          description: The type of the playbook
          minLength: 1
          type: string
          x-go-name: Type
        uuid:
          description: The UUID for this playbook
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        valid_from:
          description: The time the playbook is valid from, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: ValidFrom
        valid_until:
          description: The time the playbook is valid until, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: ValidUntil
        workflow:
          additionalProperties:
            $ref: '#/components/schemas/cacaoAction'
          description: >-
            The workflow property contains the processing logic for the playbook
            as workflow steps.
          type: object
          x-go-name: Workflow
        workflow_exception:
          description: >-
            The workflow step invoked whenever a playbook exception condition
            occurs.
          type: string
          x-go-name: ExceptionAction
        workflow_start:
          description: The first workflow step included in the workflow property
          type: string
          x-go-name: StartAction
      required:
        - id
        - uuid
        - type
        - spec_version
        - name
        - acl
        - workflow_start
        - workflow
      type: object
      x-go-name: CacaoPlaybook
      x-go-package: github.com/cydarm/case-management/backend/model
    cacaoPlaybookComplexity:
      description: >-
        CacaoPlaybookComplexity represents the presence of features in this
        playbook
      properties:
        data_markings:
          type: boolean
          x-go-name: DataMarkings
        extensions:
          type: boolean
          x-go-name: Extensions
        external_playbooks:
          type: boolean
          x-go-name: ExternalPlaybooks
        if_logic:
          type: boolean
          x-go-name: IfLogic
        manual_playbook:
          type: boolean
          x-go-name: ManualPlaybook
        parallel_processing:
          type: boolean
          x-go-name: ParallelProcessing
        switch_logic:
          type: boolean
          x-go-name: SwitchLogic
        temporal_logic:
          type: boolean
          x-go-name: TemporalLogic
        while_logic:
          type: boolean
          x-go-name: WhileLogic
      type: object
      x-go-name: CacaoPlaybookComplexity
      x-go-package: github.com/cydarm/case-management/backend/model
    case:
      description: >-
        Case is a container to handle data pertaining to responding to an
        incident
      properties:
        tags:
          description: The tags attached to this case
          items:
            type: string
          type: array
          x-go-name: Tags
        acl:
          description: The ACL of the data object
          type: string
          x-go-name: ACL
        assignee:
          description: The name of the current assignee
          minLength: 1
          type: string
          x-go-name: Assignee
        closed:
          description: The time at which the case was closed
          type: string
          x-go-name: Closed
        created:
          description: The time at which the case was created
          type: string
          x-go-name: Created
        deletable:
          description: Whether the data is deletable in the current context
          type: boolean
          x-go-name: Deletable
        description:
          description: A description
          minLength: 1
          type: string
          x-go-name: Description
        editable:
          description: Whether the data is editable in the current context
          type: boolean
          x-go-name: Editable
        locator:
          description: The locator of the case
          minLength: 6
          type: string
          x-go-name: Locator
        manageable:
          description: Whether the data is manageable in the current context
          type: boolean
          x-go-name: Manageable
        members:
          description: UUIDs of member cases (if this case is a group)
          items:
            format: uuid
            type: string
          minLength: 1
          type: array
          x-go-name: Members
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/caseMeta'
          description: Metadata fields attached to the case
          minLength: 1
          type: object
          x-go-name: Metadata
        minSlaName:
          description: The minimum SLA name
          type: string
          x-go-name: MinSlaName
        minSlaSeconds:
          description: The minimum SLA remaining time, in seconds
          format: int64
          type: integer
          x-go-name: MinSlaSeconds
        modified:
          description: The time at which the case was modified
          type: string
          x-go-name: Modified
        org:
          description: The name of the organisation who the case is relevant to
          minLength: 1
          type: string
          x-go-name: Org
        readable:
          description: Whether the data is readable in the current context
          type: boolean
          x-go-name: Readable
        severity:
          description: The severity of the case
          format: int64
          minLength: 1
          type: integer
          x-go-name: Severity
        severityName:
          description: The severity name for the case
          minLength: 1
          type: string
          x-go-name: SeverityName
        status:
          description: The current status of the case
          minLength: 1
          type: string
          x-go-name: Status
        totalActionsInAllPlaybooks:
          description: The total number of actions for all playbooks in a case
          format: int64
          type: integer
          x-go-name: TotalActionsInAllPlaybooks
        totalCompletedActionsInAllPlaybooks:
          description: The number of actions that are completed for all playbooks in a case
          format: int64
          type: integer
          x-go-name: TotalCompletedActionsInAllPlaybooks
        updateAcls:
          description: Update all ACLS for the case including data items
          type: boolean
          x-go-name: UpdateAcls
        uuid:
          description: The UUID of the case
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - readable
        - editable
        - manageable
        - deletable
        - description
        - org
      type: object
      x-go-name: Case
      x-go-package: github.com/cydarm/case-management/backend/model
    caseAndActionDataStubList:
      description: >-
        CaseAndActionDataStubList represents a list of array consists of
        caseData, playbookActionsData and caseActionsData
      properties:
        case_actions_data:
          description: The list of the case action instance
          items:
            $ref: '#/components/schemas/actionDataStub'
          maxLength: 36
          minLength: 36
          type: array
          x-go-name: CaseActionsData
        case_data:
          description: The list of the case data
          items:
            $ref: '#/components/schemas/dataStub'
          type: array
          x-go-name: CaseData
        playbook_actions_data:
          description: The list of the case playbook action instance
          items:
            $ref: '#/components/schemas/actionDataStub'
          type: array
          x-go-name: PlaybookActionsData
      type: object
      x-go-name: CaseAndActionDataStubList
      x-go-package: github.com/cydarm/case-management/backend/model
    caseCacheEntry:
      description: CaseCacheEntry is a summarised case entry stored in the case cache
      properties:
        Acl:
          description: The UUID of the case's ACL
          format: uuid
          type: string
        description:
          description: The description of the case
          minLength: 1
          type: string
          x-go-name: Description
        locator:
          description: The locator of the case
          minLength: 6
          type: string
          x-go-name: Locator
        uuid:
          description: The UUID of the case
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - locator
        - description
      type: object
      x-go-name: CaseCacheEntry
      x-go-package: github.com/cydarm/case-management/backend/model
    caseDataItemRequest:
      description: >-
        DataItemRequest is a request to create or change a data item attached to
        a case
      properties:
        acl_uuid:
          description: The UUID of the ACL of the data object
          format: uuid
          type: string
          x-go-name: Acl
        audit:
          description: Is this data item an audit message
          type: boolean
          x-go-name: Audit
        data:
          description: The raw bytes comprising the data, encoded in base 64
          type: string
          x-go-name: Payload
        dataSource:
          description: Where the data came from
          type: string
          x-go-name: DataSource
        encryptionkey:
          description: The identifier of the encryption key to use on this data (if any)
          type: string
          x-go-name: EncryptionKey
        fileLastMod:
          description: The time the file was last modified, as an ISO8601 timestamp
          format: int64
          maxLength: 25
          minLength: 25
          type: integer
          x-go-name: FileLastMod
        fileName:
          description: The file name of the data, if it is a file
          type: string
          x-go-name: FileName
        hidden:
          description: Is this data item hidden
          type: boolean
          x-go-name: Hidden
        mimeType:
          description: The MIME type of the data
          type: string
          x-go-name: MimeType
        occurred:
          description: The time the item occurred, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Occurred
        parentStubUuid:
          description: The UUID of the parent data object
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: ParentStubUuid
        significance:
          description: The signficance level of the data item
          type: string
          x-go-name: Significance
        userUuid:
          description: The UUID of the creator user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: UserUuid
      required:
        - parentStubUuid
        - userUuid
        - data
        - significance
        - mimeType
      type: object
      x-go-name: DataItemRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    caseDataStates:
      properties:
        created:
          description: Wether metrics are kept
          type: string
          x-go-name: KeepMetrics
        description:
          description: The description of the states
          type: string
          x-go-name: Description
        endState:
          description: Wether this is a end state
          type: boolean
          x-go-name: EndState
        id:
          description: The id of the state
          type: string
          x-go-name: Id
        name:
          description: The name of the state
          type: string
          x-go-name: Name
        ordinality:
          description: The ordinality of the state
          type: string
          x-go-name: Ordinality
        startState:
          description: Wether this is a start state
          type: boolean
          x-go-name: StartState
      required:
        - id
        - name
        - startState
        - endState
        - created
        - ordinality
      type: object
      x-go-name: CaseDataStates
      x-go-package: github.com/cydarm/case-management/backend/model
    caseDataStixRequest:
      description: >-
        CaseDataStixRequest is a request to create or change a STIX data item
        attached to a case
      properties:
        acl_uuid:
          description: The UUID of the ACL of the data object
          format: uuid
          type: string
          x-go-name: Acl
        acls:
          additionalProperties:
            type: string
          description: A map of individual components and their respective ACLs
          type: object
          x-go-name: ACLMap
        audit:
          description: Is this data item an audit message
          type: boolean
          x-go-name: Audit
        data:
          description: The raw bytes comprising the data, encoded in base 64
          type: string
          x-go-name: Payload
        dataSource:
          description: Where the data came from
          type: string
          x-go-name: DataSource
        encryptionkey:
          description: The identifier of the encryption key to use on this data (if any)
          type: string
          x-go-name: EncryptionKey
        fileLastMod:
          description: The time the file was last modified, as an ISO8601 timestamp
          format: int64
          maxLength: 25
          minLength: 25
          type: integer
          x-go-name: FileLastMod
        fileName:
          description: The file name of the data, if it is a file
          type: string
          x-go-name: FileName
        hidden:
          description: Is this data item hidden
          type: boolean
          x-go-name: Hidden
        mimeType:
          description: The MIME type of the data
          type: string
          x-go-name: MimeType
        occurred:
          description: The time the item occurred, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Occurred
        parentStubUuid:
          description: The UUID of the parent data object
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: ParentStubUuid
        significance:
          description: The signficance level of the data item
          type: string
          x-go-name: Significance
        userUuid:
          description: The UUID of the creator user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: UserUuid
      required:
        - parentStubUuid
        - userUuid
        - data
        - significance
        - mimeType
      type: object
      x-go-name: CaseDataStixRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    caseDetailsReportRequest:
      description: >-
        CaseDetailsReportRequest is a request for a Case Details report across
        specific properties
      properties:
        endTime:
          description: The end time of the report.
          format: int64
          type: integer
          x-go-name: EndTime
        excludeTags:
          description: The names of tags to be excluded in the report.
          items:
            type: string
          type: array
          x-go-name: ExcludeTags
        format:
          description: The format of the report.
          type: string
          x-go-name: Format
        includeTags:
          description: The names of tags to be included in the report.
          items:
            type: string
          type: array
          x-go-name: IncludeTags
        org:
          description: The organisation.
          format: uuid
          type: string
          x-go-name: Org
        severities:
          description: The case severities to be included in the report.
          items:
            type: string
          type: array
          x-go-name: Severities
        startTime:
          description: The start time of the report.
          format: int64
          type: integer
          x-go-name: StartTime
        userNames:
          description: The names of users to be included in the report.
          items:
            type: string
          type: array
          x-go-name: UserNames
      required:
        - org
        - startTime
        - endTime
      type: object
      x-go-name: CaseDetailsReportRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    caseListQueryResponse:
      description: CaseListQueryResponse is a container to wrap a list of cases
      properties:
        data:
          items:
            $ref: '#/components/schemas/case'
          type: array
          x-go-name: Data
        links:
          $ref: '#/components/schemas/PageLinks'
        meta:
          $ref: '#/components/schemas/ResultMeta'
      type: object
      x-go-name: CaseListQueryResponse
      x-go-package: github.com/cydarm/case-management/backend/model
    caseMeta:
      description: CaseMeta is metadata that can be attached to a case
      properties:
        acl:
          description: The UUID or name of the ACL
          type: string
          x-go-name: ACL
        integer:
          description: The position of the metadata field
          format: int64
          type: integer
          x-go-name: Sequence
        name:
          description: The name of the metadata field
          minLength: 1
          type: string
          x-go-name: Name
        uuid:
          description: The UUID of the metadata
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        value:
          description: The value of the metadata field
          type: string
          x-go-name: Value
      required:
        - name
        - value
      type: object
      x-go-name: CaseMeta
      x-go-package: github.com/cydarm/case-management/backend/model
    caseMetricsRecord:
      description: CaseMetricsRecord is a metrics record pertaining to a case
      properties:
        locator:
          description: The locator of the case
          minLength: 6
          type: string
          x-go-name: Locator
        status:
          description: The current status of the case
          type: string
          x-go-name: Status
        uuid:
          description: The UUID of the case
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        value:
          description: The value of the metric
          type: string
          x-go-name: Value
      required:
        - uuid
        - locator
        - value
        - status
      type: object
      x-go-name: CaseMetricsRecord
      x-go-package: github.com/cydarm/case-management/backend/model
    casePlaybookActionUpdateRequest:
      description: >-
        CasePlaybookActionUpdateRequest is a request to update the state of an
        action used in an assigned playbook
      properties:
        assignee:
          description: The UUID of the assignee, if any
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Assignee
        status:
          description: The status of the action
          type: string
          x-go-name: Status
        status_message:
          description: The message associated with this status change
          type: string
          x-go-name: StatusMessage
        variable_bindings:
          additionalProperties: {}
          description: The names and values of the action variables
          type: object
          x-go-name: VariableBindings
      required:
        - status
      type: object
      x-go-name: CasePlaybookActionUpdateRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    casePlaybookUpdateRequest:
      description: |-
        CasePlaybookUpdateRequest is a request to update a CACAO
        or ATC playbook instance on a case.
      properties:
        variable_bindings:
          additionalProperties: {}
          description: The new bindings for variables declared in the playbook
          type: object
          x-go-name: VariableBindings
      type: object
      x-go-name: CasePlaybookUpdateRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    caseQuickSearchRequest:
      description: CaseQuickSearchRequest is a search query against cases
      properties:
        searchString:
          description: The search string
          minLength: 1
          type: string
          x-go-name: SearchString
      required:
        - searchString
      type: object
      x-go-name: CaseQuickSearchRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    caseReportRequest:
      description: >-
        CaseReportRequest is a request for a report on a specific case with
        filters applied
      properties:
        aclReadList:
          description: The ACL read list for the report to include.
          items:
            type: string
          type: array
          x-go-name: AclReadList
        endTime:
          description: The end time of the report.
          format: int64
          type: integer
          x-go-name: EndTime
        format:
          description: The format of the report.
          type: string
          x-go-name: Format
        significances:
          description: The significances for the report to include.
          items:
            type: string
          type: array
          x-go-name: Significances
        startTime:
          description: The start time of the report.
          format: int64
          type: integer
          x-go-name: StartTime
        timezone:
          description: The timezone of the report.
          type: string
          x-go-name: Timezone
      required:
        - startTime
        - endTime
        - timezone
      type: object
      x-go-name: CaseReportRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    caseRequest:
      description: CaseRequest is a request to create a case
      properties:
        tags:
          description: The tags attached to this case
          items:
            type: string
          type: array
          x-go-name: Tags
        MappedTags:
          items:
            type: string
          type: array
        acl:
          description: The ACL of the data object
          type: string
          x-go-name: Acl
        assignee:
          description: The name of the current assignee
          minLength: 1
          type: string
          x-go-name: Assignee
        description:
          description: A description
          minLength: 1
          type: string
          x-go-name: Description
        members:
          description: UUIDs of member cases (if this case is a group)
          items:
            format: uuid
            type: string
          minLength: 1
          type: array
          x-go-name: Members
        metadata:
          additionalProperties:
            $ref: '#/components/schemas/caseMeta'
          description: Metadata fields attached to the case
          minLength: 1
          type: object
          x-go-name: Metadata
        org:
          description: The name of the organisation who the case is relevant to
          minLength: 1
          type: string
          x-go-name: Org
        severity:
          description: The severity of the case
          format: int64
          minLength: 1
          type: integer
          x-go-name: Severity
        severityName:
          description: The severity name for the case
          minLength: 1
          type: string
          x-go-name: SeverityName
        status:
          description: The current status of the case
          minLength: 1
          type: string
          x-go-name: Status
      required:
        - description
        - org
      type: object
      x-go-name: CaseRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    caseSeverity:
      description: CaseSeverity is information about a severity level
      properties:
        color:
          description: The color of the severity level, as a hex string
          minLength: 6
          type: string
          x-go-name: Color
        name:
          description: The name of the severity level
          minLength: 1
          type: string
          x-go-name: Name
        precedence:
          description: The order of the severity level
          format: int64
          type: integer
          x-go-name: Precedence
      required:
        - precedence
        - name
        - color
      type: object
      x-go-name: CaseSeverity
      x-go-package: github.com/cydarm/case-management/backend/model
    caseSlaWarning:
      description: >-
        CaseSlaWarning is a container to define details of an SLA warning that
        is applied to a case
      properties:
        caseUuid:
          description: The UUID of the case
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CaseUuid
        level:
          description: The Level of warning (eg. info, warn, breach)
          type: string
          x-go-name: Level
        slaUuid:
          description: The UUID of the SLA
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: SlaUuid
        warningUuid:
          description: The UUID of the SLA Warning
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: WarningUuid
      required:
        - caseUuid
        - slaUuid
        - warningUuid
        - level
      type: object
      x-go-name: CaseSlaWarning
      x-go-package: github.com/cydarm/case-management/backend/model
    caseStatus:
      description: CaseStatus is a representation of a status level for a case
      properties:
        description:
          description: A description of the state
          type: string
          x-go-name: Description
        end:
          description: Whether this is an end state
          type: boolean
          x-go-name: End
        name:
          description: The name of the state
          minLength: 1
          type: string
          x-go-name: Name
        next:
          description: The allowed next statuses
          items:
            type: string
          type: array
          x-go-name: Next
        ord:
          description: The state's ordinality
          format: int64
          type: integer
          x-go-name: Ord
        start:
          description: Whether this is a start state
          type: boolean
          x-go-name: Start
        transitions:
          additionalProperties:
            format: uuid
            type: string
          description: |-
            Maps the allowed transitions to the ACL
            that defines which groups can make the transition
          type: object
          x-go-name: Transitions
      required:
        - name
        - description
        - start
        - end
        - ord
      type: object
      x-go-name: CaseStatus
      x-go-package: github.com/cydarm/case-management/backend/model
    caseSummaryReportRequest:
      description: >-
        CaseSummaryReportRequest is a request for a summary report over cases
        with certain properties
      properties:
        endTime:
          description: The end time of the report.
          format: int64
          type: integer
          x-go-name: EndTime
        orgUuidList:
          description: The org uuid list for the report to be generated for.
          items:
            format: uuid
            type: string
          type: array
          x-go-name: Orgs
        startTime:
          description: The start time of the report.
          format: int64
          type: integer
          x-go-name: StartTime
        timezone:
          description: The timezone of the report.
          type: string
          x-go-name: Timezone
      required:
        - orgUuidList
        - startTime
        - endTime
        - timezone
      type: object
      x-go-name: CaseSummaryReportRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    caseTag:
      description: CaseTag is a tag on a case
      properties:
        acl:
          description: The UUID of the ACL
          format: uuid
          type: string
          x-go-name: ACL
        deprecated:
          description: A boolean flag that specifies whether this caseTag is deprecated
          minLength: 1
          type: boolean
          x-go-name: Deprecated
        description:
          description: A description for this caseTag
          minLength: 1
          type: string
          x-go-name: Description
        uuid:
          description: The UUID of the tag
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        value:
          description: The name of the tag
          minLength: 1
          type: string
          x-go-name: Value
      required:
        - uuid
        - value
        - description
      type: object
      x-go-name: CaseTag
      x-go-package: github.com/cydarm/case-management/backend/model
    caseTagMapRequest:
      properties:
        tagValue:
          description: A description for this caseTag
          minLength: 1
          type: string
          x-go-name: TagValue
      required:
        - tagValue
      type: object
      x-go-name: CaseTagMapRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    caseTagRequest:
      properties:
        acl:
          description: The UUID or name of the ACL
          type: string
          x-go-name: ACL
        description:
          description: A description for this caseTag
          minLength: 1
          type: string
          x-go-name: Description
        value:
          description: The name of the tag
          minLength: 1
          type: string
          x-go-name: Value
      required:
        - value
        - description
      type: object
      x-go-name: CaseTagRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    connector:
      properties:
        acl_uuid:
          format: uuid
          type: string
          x-go-name: Acl
        active:
          description: Whether the connector is currently active
          type: boolean
          x-go-name: Active
        actuator_uuid:
          description: |-
            The UUID of the actuator that this connector
            is running on
          format: uuid
          type: string
          x-go-name: Actuator
        config:
          $ref: '#/components/schemas/integrationConfig'
        connector_type_uuid:
          description: The UUID of the connector type
          format: uuid
          type: string
          x-go-name: ConnectorType
        description:
          description: The description of the connector
          type: string
          x-go-name: Description
        easy_connect:
          description: Whether the connector was created using easy connect
          type: boolean
          x-go-name: EasyConnect
        name:
          description: The name of the connector
          type: string
          x-go-name: Name
        status:
          $ref: '#/components/schemas/integrationStatus'
        triggers:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EventTrigger'
            type: array
          description: The triggers for this connector
          type: object
          x-go-name: Triggers
        uuid:
          format: uuid
          type: string
          x-go-name: Uuid
      required:
        - name
        - connector_type_uuid
        - actuator_uuid
        - active
      type: object
      x-go-name: Connector
      x-go-package: github.com/cydarm/case-management/backend/model
    connectorOperationType:
      description: |-
        ConnectorOperationType represents the type of a connector
        operation (placeholder)
      properties:
        acl_uuid:
          format: uuid
          type: string
          x-go-name: Acl
        api_access:
          type: boolean
          x-go-name: ApiAccess
        arguments_schema:
          type: object
          x-go-name: ArgumentsSchema
        created:
          format: date-time
          type: string
          x-go-name: Created
        description:
          type: string
          x-go-name: Description
        display_name:
          type: string
          x-go-name: DisplayName
        modified:
          format: date-time
          type: string
          x-go-name: Modified
        name:
          type: string
          x-go-name: Name
        uuid:
          format: uuid
          type: string
          x-go-name: Uuid
      type: object
      x-go-name: ConnectorOperationType
      x-go-package: github.com/cydarm/case-management/backend/model
    connectorType:
      description: ConnectorType represents the type of a Connector
      properties:
        acl_uuid:
          format: uuid
          type: string
          x-go-name: Acl
        config_schema:
          $ref: '#/components/schemas/integrationConfigSchema'
        description:
          type: string
          x-go-name: Description
        display_name:
          type: string
          x-go-name: DisplayName
        name:
          type: string
          x-go-name: Name
        supported_operations:
          items:
            format: uuid
            type: string
          type: array
          x-go-name: SupportedOperations
        uuid:
          format: uuid
          type: string
          x-go-name: Uuid
      type: object
      x-go-name: ConnectorType
      x-go-package: github.com/cydarm/case-management/backend/model
    connectorTypeCreateRequest:
      properties:
        acl_uuid:
          format: uuid
          type: string
          x-go-name: Acl
        config_schema:
          $ref: '#/components/schemas/integrationConfigSchema'
        description:
          type: string
          x-go-name: Description
        display_name:
          type: string
          x-go-name: DisplayName
        name:
          type: string
          x-go-name: Name
        supported_operations:
          items:
            format: uuid
            type: string
          type: array
          x-go-name: SupportedOperations
      type: object
      x-go-name: ConnectorTypeCreateRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    connectorTypeUpdateRequest:
      properties:
        config_schema:
          $ref: '#/components/schemas/integrationConfigSchema'
        description:
          type: string
          x-go-name: Description
        display_name:
          type: string
          x-go-name: DisplayName
        supported_operations:
          items:
            format: uuid
            type: string
          type: array
          x-go-name: SupportedOperations
      type: object
      x-go-name: ConnectorTypeUpdateRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    createActuatorRequest:
      description: CreateActuatorRequest is a request to create an integration actuator
      properties:
        api_poll_rate:
          $ref: '#/components/schemas/Duration'
        config:
          $ref: '#/components/schemas/integrationConfigRequest'
        config_schema:
          $ref: '#/components/schemas/integrationConfigSchema'
        description:
          description: The description of the actuator
          type: string
          x-go-name: Description
        heartbeat_rate:
          $ref: '#/components/schemas/Duration'
        log_level:
          $ref: '#/components/schemas/LogLevel'
        name:
          description: The name of the actuator
          type: string
          x-go-name: Name
        principal_uuid:
          description: The UUID of the actuator's user account
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Principal
        supported_connector_types:
          description: The UUIDs of the connector types supported by this actuator
          items:
            format: uuid
            type: string
          type: array
          x-go-name: SupportedConnectorTypes
      required:
        - name
        - principal_uuid
        - config_schema
        - supported_connector_types
        - api_poll_rate
        - log_level
        - config
      type: object
      x-go-name: CreateActuatorRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    createAssetRequest:
      description: AssetRequest is a request to create an asset in STIX
      properties:
        acl:
          description: The ACL of the data object
          format: uuid
          type: string
          x-go-name: ACL
        description:
          description: Description of asset
          type: string
          x-go-name: Description
        infrastructureTypes:
          description: >-
            The infrastructure_type labels on this asset, eg. server, database,
            s3-bucket
          items:
            type: string
          type: array
          x-go-name: InfrastructureTypes
        ipAddresses:
          description: list of IPv4 or IPv6 addresses used by this asset
          items:
            type: string
          type: array
          x-go-name: IpAddresses
        location:
          description: Location of asset, eg. datacentre, cloud tenancy
          type: string
          x-go-name: Location
        name:
          description: Name of asset
          type: string
          x-go-name: Name
        orgUuid:
          description: UUID of organisation from cy_org
          format: uuid
          type: string
          x-go-name: OrgUuid
        organisation:
          description: Organisation the asset belongs to
          type: string
          x-go-name: Organisation
      required:
        - infrastructureTypes
        - name
      type: object
      x-go-name: CreateAssetRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    createConnectorRequest:
      description: CreateConnectorRequest is a request to create an integration connector
      properties:
        active:
          description: Whether the connector is currently active
          type: boolean
          x-go-name: Active
        actuator_uuid:
          description: |-
            The UUID of the actuator that this connector
            is running on
          format: uuid
          type: string
          x-go-name: Actuator
        config:
          $ref: '#/components/schemas/integrationConfigRequest'
        connector_type_uuid:
          description: The UUID of the connector type
          format: uuid
          type: string
          x-go-name: ConnectorType
        description:
          description: The description of the connector
          type: string
          x-go-name: Description
        easy_connect:
          description: Whether the connector was created using easy connect
          type: boolean
          x-go-name: EasyConnect
        name:
          description: The name of the connector
          type: string
          x-go-name: Name
      required:
        - name
        - connector_type_uuid
        - actuator_uuid
        - active
      type: object
      x-go-name: CreateConnectorRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    createContactRequest:
      description: CreateContactRequest is a request to create a contact in STIX
      properties:
        acl:
          description: The ACL of the data object
          format: uuid
          type: string
          x-go-name: ACL
        contactType:
          description: The contact type of this contact
          type: string
          x-go-name: ContactType
        email:
          description: List of email addresses for contact
          items:
            type: string
          type: array
          x-go-name: Email
        name:
          description: First name of contact
          type: string
          x-go-name: Name
        orgUuid:
          description: UUID of organisation from cy_org
          format: uuid
          type: string
          x-go-name: OrgUuid
        organisation:
          description: Organisation the contact is from
          type: string
          x-go-name: Organisation
        phone:
          description: list of phone numbers for contact
          items:
            type: string
          type: array
          x-go-name: Phone
      required:
        - contactType
        - name
      type: object
      x-go-name: CreateContactRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    createGroupRequest:
      description: CreateGroupRequest is used to create a new group
      properties:
        acl_uuid:
          description: The UUID of the ACL
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        authSource:
          default: internal)
          minLength: 1
          type: string
          x-go-name: AuthSource
        category:
          description: >-
            The category (could be one of 'internal', 'organisation', or 'org
            role')
          minLength: 1
          type: string
          x-go-name: Category
        description:
          description: A description for this group
          minLength: 1
          type: string
          x-go-name: Description
        name:
          description: The name of the group
          minLength: 1
          type: string
          x-go-name: Name
        publicKey:
          description: The public key
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: PublicKey
      required:
        - name
        - description
        - category
        - authSource
      type: object
      x-go-name: CreateGroupRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    createObjectResponse:
      description: CreateObjectResponse is a response to bulk loading of objects into STIX
      properties:
        failedRequests:
          items:
            $ref: '#/components/schemas/FailedCreateObjectResponse'
          type: array
          x-go-name: Requests
        noSuccessfullyLoaded:
          format: int64
          type: integer
          x-go-name: NoSuccessfullyLoaded
      type: object
      x-go-name: CreateObjectResponse
      x-go-package: github.com/cydarm/case-management/backend/model
    createResponse:
      description: CreateResponse is for HTTP response 201 when we create a new object
      properties:
        acl:
          description: The ACL of the new newly created object
          type: string
          x-go-name: Acl
        uuid:
          description: The UUID of the newly created object
          format: uuid
          type: string
          x-go-name: Uuid
      required:
        - uuid
      type: object
      x-go-name: CreateResponse
      x-go-package: github.com/cydarm/case-management/backend/model
    createUserRequest:
      description: CreateUserRequest is used for creating a new user
      properties:
        acl:
          description: The UUID of an ACL for this user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        authSourceId:
          description: The authentication source where the user comes from
          minLength: 1
          type: string
          x-go-name: AuthSourceId
        authSourceUserName:
          description: >-
            The user's idenifier on the authentication source where they come
            from
          minLength: 1
          type: string
          x-go-name: AuthSourceHandle
        email:
          description: The email address of the user
          minLength: 1
          type: string
          x-go-name: Email
        familyName:
          description: The family name of the user
          minLength: 1
          type: string
          x-go-name: FamilyName
        givenName:
          description: The given name of the user
          minLength: 1
          type: string
          x-go-name: GivenName
        groupUuid:
          description: The UUID of this user's personal group
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: GroupUuid
        human:
          description: Whether the user is a human
          type: boolean
          x-go-name: Human
        orgUuid:
          description: The UUID of the new user's organisation, defaults to that of creator
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: OrgUuid
        password:
          description: The password of the user
          minLength: 12
          type: string
          x-go-name: Password
        phone:
          description: The phone number of the user
          minLength: 1
          type: string
          x-go-name: Phone
        username:
          description: The username (login name) of the user
          minLength: 1
          type: string
          x-go-name: Username
      required:
        - username
        - human
        - givenName
        - familyName
        - phone
        - authSourceId
        - authSourceUserName
        - password
      type: object
      x-go-name: CreateUserRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    dataObject:
      description: DataObject is a data item in a case history
      properties:
        acl:
          description: The ACL of the data object
          type: string
          x-go-name: ACL
        bytedata:
          description: The raw bytes comprising the data, encoded in base64
          type: string
          x-go-name: ByteData
        created:
          description: The time the item was created, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        dataStubUuid:
          description: The UUID of the data stub
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: DataStubUuid
        deletable:
          description: Whether the data is deletable in the current context
          type: boolean
          x-go-name: Deletable
        editable:
          description: Whether the data is editable in the current context
          type: boolean
          x-go-name: Editable
        encryptionkey:
          description: The identifier of the encryption key used on this data (if any)
          type: string
          x-go-name: EncryptionKey
        filelastmod:
          description: The time the file was last modified, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: FileLastMod
        filename:
          description: The file name of the data, if it is a file
          type: string
          x-go-name: FileName
        hidden:
          description: Is this data item hidden
          type: boolean
          x-go-name: Hidden
        manageable:
          description: Whether the data is manageable in the current context
          type: boolean
          x-go-name: Manageable
        mimetype:
          description: The MIME type of the data
          type: string
          x-go-name: MimeType
        occurred:
          description: The time the item reported occurred, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Occurred
        readable:
          description: Whether the data is readable in the current context
          type: boolean
          x-go-name: Readable
        significance:
          description: The signficance level of the data item
          type: string
          x-go-name: Significance
        sigprecedence:
          description: The precedence of the significance of the data item
          type: string
          x-go-name: Precedence
        uuid:
          description: The UUID of the data object
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - readable
        - editable
        - manageable
        - deletable
        - uuid
        - dataStubUuid
        - created
        - bytedata
        - mimetype
        - filelastmod
        - significance
        - sigprecedence
        - encryptionkey
      type: object
      x-go-name: DataObject
      x-go-package: github.com/cydarm/case-management/backend/model
    dataSignificance:
      description: >-
        DataSignificance represents a significance level that can be assigned to
        data
      properties:
        name:
          description: The name of the significance level
          type: string
          x-go-name: Name
        precedence:
          description: The precedence of the significance
          format: int64
          type: integer
          x-go-name: Precedence
        selectable:
          description: Whether this significance level is selectable in the current context
          type: boolean
          x-go-name: UserSelectable
        uuid:
          description: The UUID of the significance level
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - name
        - selectable
        - precedence
      type: object
      x-go-name: DataSignificance
      x-go-package: github.com/cydarm/case-management/backend/model
    dataStub:
      description: DataStub is the information about a piece of data on a case
      properties:
        acl:
          description: The ACL UUID of the data object
          format: uuid
          type: string
          x-go-name: ACL
        audit:
          description: Is this data item an audit message
          type: boolean
          x-go-name: Audit
        caseuuid:
          description: The UUID of the case
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CaseUuid
        created:
          description: The time the item was created, as an RFC3339 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        creatorusername:
          description: The name of the creator user
          type: string
          x-go-name: CreatorUsername
        creatoruuid:
          description: The UUID of the creator user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CreatorUuid
        datalocation:
          description: >-
            The idenitifier used to identify the data where the data is stored
            now
          type: string
          x-go-name: DataLocation
        datalocationtype:
          description: Where the data is stored now
          type: string
          x-go-name: DataLocationType
        datasize:
          description: The size of the data, in bytes
          format: int64
          type: integer
          x-go-name: DataSize
        datasource:
          description: Where the data came from
          type: string
          x-go-name: DataSource
        deleted:
          description: Has this data item been deleted
          type: boolean
          x-go-name: Deleted
        edited:
          description: Has this data been edited
          type: boolean
          x-go-name: Edited
        editorusername:
          description: The name of the editor user
          type: string
          x-go-name: EditorUsername
        editoruuid:
          description: The UUID of the last editor user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: EditorUuid
        filename:
          description: The file name of the data, if it is a file
          type: string
          x-go-name: FileName
        hidden:
          description: Is this data item hidden
          type: boolean
          x-go-name: Hidden
        lastmodified:
          description: The time the item was created, as an RFC3339 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: LastModified
        location:
          description: How the data is identiifed in the location where the data came from
          type: string
          x-go-name: Location
        mimetype:
          description: The MIME type of the data
          type: string
          x-go-name: MimeType
        occurred:
          description: The time the item reported occurred, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Occurred
        parentuuid:
          description: The UUID of the parent data item
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: ParentUuid
        significance:
          description: The signficance level of the data item
          type: string
          x-go-name: Significance
        sigprecedence:
          description: The precedence of the significance of the data item
          type: string
          x-go-name: SigPrecedence
        uuid:
          description: The UUID of the data stub
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        version:
          description: The version of the data item
          format: int64
          type: integer
          x-go-name: Version
      required:
        - uuid
        - created
        - parentuuid
        - creatoruuid
        - creatorusername
        - mimetype
        - datasize
        - datasource
        - location
        - datalocation
        - datalocationtype
        - significance
        - sigprecedence
        - audit
        - deleted
        - acl
        - edited
        - editoruuid
        - editorusername
        - lastmodified
        - caseuuid
      type: object
      x-go-name: CaseDataStub
      x-go-package: github.com/cydarm/case-management/backend/model
    errorResponse:
      description: ErrorResponse is for HTTP responses such as 401, 403, 404, 500
      properties:
        details:
          description: The error details
          x-go-name: Details
        message:
          description: The message
          type: string
          x-go-name: Message
        status:
          description: The status code
          type: string
          x-go-name: Status
      required:
        - status
      type: object
      x-go-name: ErrorResponse
      x-go-package: github.com/cydarm/case-management/backend/model
    form:
      description: Form represents a form template
      properties:
        acl:
          description: The ACL of the data object
          format: uuid
          type: string
          x-go-name: ACL
        deleted:
          description: Whether the form has been deleted
          type: boolean
          x-go-name: Deleted
        fields:
          description: The fields that comprise this form, as a base64 encoded JSON array
          type: string
          x-go-name: Fields
        name:
          description: The display name of the form
          minLength: 1
          type: string
          x-go-name: Name
        precedence:
          description: The order in which this form should be displayed
          format: int64
          type: integer
          x-go-name: Precedence
        uuid:
          description: The UUID of the form
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - name
        - precedence
        - fields
      type: object
      x-go-name: Form
      x-go-package: github.com/cydarm/case-management/backend/model
    group:
      description: Group represents a security attribute
      properties:
        acl:
          description: The group's ACL
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        category_mode:
          description: The mode of the group's category, either inclusive or exclusive
          type: string
          x-go-name: CategoryMode
        category_name:
          description: The name of the group's category
          type: string
          x-go-name: CategoryName
        category_uuid:
          description: The UUID of the group's category
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CategoryUuid
        created:
          description: The time the group was created, as an ISO8601 timestamp
          format: date-time
          type: string
          x-go-name: Created
        description:
          description: The name of the group
          minLength: 1
          type: string
          x-go-name: Description
        members:
          description: The groups member users
          items:
            format: uuid
            type: string
          type: array
          x-go-name: Members
        name:
          description: The name of the group
          minLength: 1
          type: string
          x-go-name: Name
        parents:
          description: The group's parent groups which it inherits from
          items:
            format: uuid
            type: string
          type: array
          x-go-name: Parents
        public_key:
          description: The group's public key
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: PublicKey
        uuid:
          description: The UUID of the group
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - name
        - acl
        - created
      type: object
      x-go-name: Group
      x-go-package: github.com/cydarm/case-management/backend/model
    groupCategory:
      description: GroupCategory represents a category of Groups
      properties:
        description:
          description: A description of the category mode (inclusive or exclusive)
          type: string
          x-go-name: Description
        mode:
          description: The category mode (inclusive or exclusive)
          minLength: 1
          type: string
          x-go-name: Mode
        name:
          description: The name of the group
          minLength: 1
          type: string
          x-go-name: Name
        uuid:
          description: The UUID of the category
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - name
        - mode
      type: object
      x-go-name: GroupCategory
      x-go-package: github.com/cydarm/case-management/backend/model
    groupGraph:
      description: GroupGraph represents a complete group graph
      properties:
        group_graph:
          additionalProperties:
            items:
              format: uuid
              type: string
            type: array
          description: >-
            Maps a group UUID to an array containing the UUIDs of its immediate
            ancestors,

            ie member_grp -> [ parent_grp_1, parent_grp_2, ... ]
          type: object
          x-go-name: Adjacency
      required:
        - group_graph
      type: object
      x-go-name: GroupGraph
      x-go-package: github.com/cydarm/case-management/backend/model
    heatMap:
      description: >-
        heatMap is a container to handle data pertaining to a heatmap report
        request
      properties:
        caseAclUuid:
          description: The ACL uuid of the data object
          type: string
          x-go-name: CaseAclUuid
        locator:
          description: The locator of the case
          minLength: 6
          type: string
          x-go-name: Locator
        tagXName:
          description: The tag name on the case
          type: string
          x-go-name: TagXName
        tagYName:
          description: The tag name on the case
          type: string
          x-go-name: TagYName
      required:
        - locator
        - caseAclUuid
        - tagXName
        - tagYName
      type: object
      x-go-name: HeatMap
      x-go-package: github.com/cydarm/case-management/backend/model
    heatmapReportRequest:
      properties:
        endTime:
          description: The end time of the report.
          type: string
          x-go-name: EndTime
        format:
          description: The format of the report.
          type: string
          x-go-name: Format
        org:
          description: The org uuid for the report to be generated for.
          format: uuid
          type: string
          x-go-name: OrgUuid
        startTime:
          description: The start time of the report.
          type: string
          x-go-name: StartTime
        timezone:
          description: The timezone of the report.
          type: string
          x-go-name: Timezone
        xTagPrefixes:
          description: The names of x axis tags to be included in the report.
          items:
            type: string
          type: array
          x-go-name: XTagPrefixes
        yTagPrefixes:
          description: The names of y axis tags to be included in the report.
          items:
            type: string
          type: array
          x-go-name: YTagPrefixes
      required:
        - org
        - startTime
        - endTime
        - xTagPrefixes
        - yTagPrefixes
        - timezone
      title: >-
        heatmapReportRequest is a request for a heatmap report across tag
        frequencies together on the same case, for a certain time period.
      type: object
      x-go-name: HeatmapReportRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    integrationConfig:
      description: IntegrationConfig is the config of an actuator or connector
      properties:
        CommonContext:
          $ref: '#/components/schemas/ActuatorCommonContext'
        data:
          description: The config data
          type: object
          x-go-name: Data
        encryption_keys:
          additionalProperties:
            $ref: '#/components/schemas/SecretKey'
          description: The names of the encryption keys used to encrypt the config
          type: object
          x-go-name: EncryptionKeys
      required:
        - data
      type: object
      x-go-name: IntegrationConfig
      x-go-package: github.com/cydarm/case-management/backend/model
    integrationConfigRequest:
      description: |-
        IntegrationConfigRequest is a request to create the
        config for an actuator or connector
      properties:
        data:
          description: The config data
          type: object
          x-go-name: Data
      required:
        - data
      type: object
      x-go-name: IntegrationConfigRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    integrationConfigSchema:
      description: >-
        IntegrationConfigSchema is the schema for the config of an actuator or
        connector
      properties:
        data:
          description: The config schema
          type: object
          x-go-name: Schema
        encrypted_fields:
          description: |-
            A list of regexes that define fields that must be
            encrypted, eg [ "users[*].password", ... ]
          items:
            type: string
          type: array
          x-go-name: EncryptedFields
      required:
        - data
      type: object
      x-go-name: IntegrationConfigSchema
      x-go-package: github.com/cydarm/case-management/backend/model
    integrationStatus:
      description: IntegrationStatus is the status of an actuator or connector
      properties:
        message:
          description: The message
          type: string
          x-go-name: Message
        status:
          description: The current status
          type: string
          x-go-name: Status
      required:
        - status
      type: object
      x-go-name: IntegrationStatus
      x-go-package: github.com/cydarm/case-management/backend/model
    metaName:
      description: MetaName defines a metadata field
      properties:
        acl:
          description: The UUID or name of the ACL
          type: string
          x-go-name: ACL
        match:
          description: A regex to validate values of this field
          type: string
          x-go-name: Match
        name:
          description: The name of field
          minLength: 1
          type: string
          x-go-name: Name
        precedence:
          description: The precedence of this field (defines the order of appearance)
          type: string
          x-go-name: Precedence
        uuid:
          description: The UUID of the metadata field
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - name
        - precedence
      type: object
      x-go-name: MetaName
      x-go-package: github.com/cydarm/case-management/backend/model
    metaNameManipulation:
      properties:
        create:
          description: List of metadata items to create
          items:
            $ref: '#/components/schemas/caseMeta'
          type: array
          x-go-name: Create
        delete:
          description: List of metadata items to delete
          items:
            format: uuid
            type: string
          type: array
          x-go-name: Delete
        update:
          description: List of metadata items to update
          items:
            $ref: '#/components/schemas/caseMeta'
          type: array
          x-go-name: Update
      type: object
      x-go-name: UpdateCaseMetaRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    metrics:
      description: Metrics is a collection of timing information
      properties:
        endPeriod:
          description: The start of the time period, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: EndPeriod
        precedence:
          additionalProperties:
            format: int64
            type: integer
          description: The precedence of the current state metric
          type: object
          x-go-name: Precedence
        startPeriod:
          description: The start of the time period, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: StartPeriod
        times:
          additionalProperties:
            $ref: '#/components/schemas/Iqr'
          description: The collection of metrics
          type: object
          x-go-name: Times
        totalClosedCases:
          description: The number of cases closed
          format: int64
          type: integer
          x-go-name: TotalClosedCases
        totalNewCases:
          description: The number of cases created
          format: int64
          type: integer
          x-go-name: TotalNewCases
      required:
        - startPeriod
        - endPeriod
        - times
        - precedence
        - totalNewCases
        - totalClosedCases
      type: object
      x-go-name: Metrics
      x-go-package: github.com/cydarm/case-management/backend/model
    metricsRequest:
      description: metricsRequest is a request for Cydarm case/user metrics
      properties:
        end:
          format: date-time
          type: string
          x-go-name: EndPeriod
        start:
          format: date-time
          type: string
          x-go-name: StartPeriod
      type: object
      x-go-name: MetricsRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    openCloseMetrics:
      description: >-
        openCloseMetrics is a list of total cases when cases were opened or
        closed
      properties:
        totalClosedCases:
          description: The number of cases closed
          format: int64
          type: integer
          x-go-name: TotalClosedCases
        totalNewCases:
          description: The number of cases created
          format: int64
          type: integer
          x-go-name: TotalNewCases
      required:
        - totalNewCases
        - totalClosedCases
      type: object
      x-go-name: OpenCloseMetrics
      x-go-package: github.com/cydarm/case-management/backend/model
    openCloseMetricsRequest:
      description: >-
        openCloseMetricsRequest is a list of times when cases were opened or
        closed
      properties:
        endPeriod:
          description: The end of the time period, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: EndPeriod
        orgs:
          description: Filter to which have these organisation
          items:
            format: uuid
            type: string
          type: array
          x-go-name: Orgs
        startPeriod:
          description: The start of the time period, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: StartPeriod
      required:
        - startPeriod
        - endPeriod
      type: object
      x-go-name: OpenCloseMetricsRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    org:
      description: Org is a retrieved organisation
      properties:
        acl:
          description: The UUID of the ACL of the org
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        groupUuid:
          description: The UUID of the group linked to the org
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Group
        name:
          description: The name of the org
          minLength: 1
          type: string
          x-go-name: Name
        uuid:
          description: The UUID of the org
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - name
        - groupUuid
        - acl
      type: object
      x-go-name: Org
      x-go-package: github.com/cydarm/case-management/backend/model
    orgProp:
      description: OrgProp is an organisation property
      properties:
        acl:
          description: The UUID of an ACL for this property
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        encryptionKey:
          $ref: '#/components/schemas/SecretKey'
        name:
          description: The name of the property
          type: string
          x-go-name: PropertyName
        orgUuid:
          description: The UUID of the org
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: OrgUuid
        uuid:
          description: The UUID of the property
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        value:
          description: The value of the property
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: PropertyValue
      required:
        - uuid
        - name
        - value
        - acl
        - orgUuid
      type: object
      x-go-name: OrgProp
      x-go-package: github.com/cydarm/case-management/backend/model
    permission:
      description: Permission represents an allowed action
      properties:
        label:
          description: The name of the permission
          minLength: 1
          type: string
          x-go-name: Label
        uuid:
          description: The UUID of the permission
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - label
      type: object
      x-go-name: Permission
      x-go-package: github.com/cydarm/case-management/backend/model
    playbookActionInstance:
      description: >-
        PlaybookActionInstance is the state of an action used in an assigned
        playbook
      properties:
        tags:
          description: The tags associated with the playbook action
          items:
            type: string
          type: array
          x-go-name: Tags
        Case:
          description: The UUID of the case
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        Playbook:
          description: The UUID of the playbook
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        PlaybookPrecedence:
          description: The precedence of the playbook in the case
          format: uint64
          type: integer
        actionDescription:
          description: The description of the action
          minLength: 1
          type: string
          x-go-name: Description
        actionInstanceUuid:
          description: The UUID of the action status
          format: uuid
          type: string
          x-go-name: ActionInstanceUuid
        actionName:
          description: The name of the action
          minLength: 1
          type: string
          x-go-name: Name
        actionUuid:
          description: The UUID of the playbook action
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: ActionUuid
        assignedAt:
          description: The time at which the playbook was assigned
          type: string
          x-go-name: AssignedAt
        assigneeUuid:
          description: The UUID of the assignee, if any
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: AssigneeUuid
        case_playbook_uuid:
          description: The case playbook associated with the playbook action
          format: uuid
          type: string
          x-go-name: CasePlaybookUuid
        created:
          description: The time action was added to the case, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        position:
          description: The position of the action
          format: uint64
          type: integer
          x-go-name: Position
        status:
          description: The completion status of the action
          type: string
          x-go-name: Status
        statusAt:
          description: The time that status last changed, as an ISO8601 timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: StatusChangedAt
        statusMsg:
          description: The message associated with the status change
          type: string
          x-go-name: StatusMessage
        variable_bindings:
          additionalProperties: {}
          description: The names and bindings of the action variables
          type: object
          x-go-name: VariableBindings
      required:
        - actionInstanceUuid
        - Case
        - position
        - actionName
        - actionDescription
        - status
        - created
        - tags
      type: object
      x-go-name: PlaybookActionInstance
      x-go-package: github.com/cydarm/case-management/backend/model
    playbookActionRequest:
      description: >-
        PlaybookActionRequest is a request to create or update a CACAO or ATC
        action
      properties:
        atc:
          $ref: '#/components/schemas/atcAction'
      type: object
      x-go-name: PlaybookActionRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    playbookActionResponse:
      description: PlaybookActionResponse contains either a CACAO or ATC action
      properties:
        atc:
          $ref: '#/components/schemas/atcAction'
        cacao:
          $ref: '#/components/schemas/cacaoAction'
      type: object
      x-go-name: PlaybookActionResponse
      x-go-package: github.com/cydarm/case-management/backend/model
    playbookControlFlowRequest:
      properties:
        atc:
          $ref: '#/components/schemas/atcControlFlowRequest'
        cacao:
          $ref: '#/components/schemas/cacaoControlFlowRequest'
      title: >-
        PlaybookControlFlowRequest is a request to add an action to playbook
        with the specified control flow.
      type: object
      x-go-name: PlaybookControlFlowRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    playbookRequest:
      description: PlaybookRequest is a request to create or update a CACAO or ATC playbook
      properties:
        atc:
          $ref: '#/components/schemas/atcPlaybook'
      type: object
      x-go-name: PlaybookRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    playbookResponse:
      description: PlaybookResponse contains either a Cacao or ATC playbook
      properties:
        atc:
          $ref: '#/components/schemas/atcPlaybook'
        cacao:
          $ref: '#/components/schemas/cacaoPlaybook'
      type: object
      x-go-name: PlaybookResponse
      x-go-package: github.com/cydarm/case-management/backend/model
    propRequest:
      description: PropertyRequest is a request to create a system, org or user property
      properties:
        acl:
          description: The name/UUID of this property's ACL
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        encrypt:
          description: Whether or not to encrypt the value
          type: boolean
          x-go-name: Encrypt
        name:
          description: The name of the property
          type: string
          x-go-name: PropertyName
        value:
          description: The value of the property
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: PropertyValue
      required:
        - name
        - value
      type: object
      x-go-name: PropertyRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    propUpdateRequest:
      description: >-
        PropertyUpdateRequest is a request to update a system, org or user
        property
      properties:
        acl:
          description: The new name/UUID of this property's ACL
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        name:
          description: The new name of the property
          type: string
          x-go-name: PropertyName
        value:
          description: The new value of the property
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: PropertyValue
      type: object
      x-go-name: PropertyUpdateRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    pubsubErrorMessage:
      description: PqErrorMessage represents a pubsub message
      properties:
        channel:
          description: The message's channel
          type: string
          x-go-name: Channel
        error_code:
          description: The error code
          type: string
          x-go-name: ErrorCode
        error_message:
          description: The error message
          type: string
          x-go-name: ErrorMessage
        source:
          $ref: '#/components/schemas/pubsubMessage'
        timestamp:
          description: The time the message was created
          format: int64
          type: integer
          x-go-name: Timestamp
        uuid:
          description: The UUID of the message
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - source
        - error_code
        - error_message
        - uuid
        - channel
        - timestamp
      type: object
      x-go-name: PqErrorMessage
      x-go-package: github.com/cydarm/case-management/common/comms/pqnotify
    pubsubErrorMessageRequest:
      description: |-
        PqErrorMessageRequest is a request to post
        an error message
      properties:
        error_code:
          description: The error code
          type: string
          x-go-name: ErrorCode
        error_message:
          description: The error message
          type: string
          x-go-name: ErrorMessage
        source:
          $ref: '#/components/schemas/pubsubMessage'
      required:
        - source
        - error_code
        - error_message
      type: object
      x-go-name: PqErrorMessageRequest
      x-go-package: github.com/cydarm/case-management/common/comms/pqnotify
    pubsubMessage:
      description: PqMessage represents a pubsub message
      properties:
        channel:
          description: The message's channel
          type: string
          x-go-name: Channel
        message:
          description: The message content
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: Message
        timestamp:
          description: The time the message was created
          format: int64
          type: integer
          x-go-name: Timestamp
        uuid:
          description: The UUID of the message
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - channel
        - message
        - timestamp
      type: object
      x-go-name: PqMessage
      x-go-package: github.com/cydarm/case-management/common/comms/pqnotify
    quickSearchResult:
      description: quickSearchResult is a ranked list of search results
      properties:
        acl:
          description: The ACL of the case
          format: uuid
          type: string
          x-go-name: CaseAclUuid
        case:
          $ref: '#/components/schemas/case'
        rank:
          description: The rank score of the result
          format: float
          type: number
          x-go-name: Rank
        uuid:
          description: |-
            TODO: below are legacy fields, remove when UI is updated (RM-4043)
            The UUID of the case
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CaseUuid
      required:
        - rank
        - uuid
      type: object
      x-go-name: QuickSearchResult
      x-go-package: github.com/cydarm/case-management/backend/model
    reportOpenCaseRecord:
      description: ReportOpenCaseRecord stores details about an open case
      properties:
        tags:
          description: The tags on the case
          type: string
          x-go-name: Tags
        acl:
          description: The ACL on the case
          type: string
          x-go-name: ACL
        closed:
          description: When the case was closed
          type: string
          x-go-name: Closed
        description:
          description: The description of the case
          minLength: 1
          type: string
          x-go-name: Description
        locator:
          description: The locator of the case
          maxLength: 6
          minLength: 6
          type: string
          x-go-name: Locator
        opened:
          description: When the case was opened
          type: string
          x-go-name: Opened
        organisation:
          description: The organisation of the case
          type: string
          x-go-name: Organisation
        severity:
          description: The severity of the case
          minLength: 1
          type: string
          x-go-name: Severity
        status:
          description: The status of the case
          minLength: 1
          type: string
          x-go-name: Status
        uuid:
          description: The UUID of the case
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - locator
        - organisation
        - description
        - severity
        - status
        - tags
        - opened
        - closed
      type: object
      x-go-name: ReportOpenCaseRecord
      x-go-package: github.com/cydarm/case-management/backend/model
    resource:
      description: >-
        ResourceTriggers is the resource with the related triggered actions and
        actions that are defined for them
      properties:
        Acl:
          format: uuid
          type: string
        Triggers:
          items:
            $ref: '#/components/schemas/Trigger'
          type: array
        description:
          type: string
          x-go-name: Description
        resource:
          type: string
          x-go-name: Resource
        uuid:
          format: uuid
          type: string
          x-go-name: Uuid
      type: object
      x-go-name: ResourceTriggers
      x-go-package: github.com/cydarm/case-management/backend/model
    sessionDetails:
      description: SessionDetails is returned from GetSessionDetails
      properties:
        created:
          type: string
          x-go-name: Created
        group_uuids:
          items:
            format: uuid
            type: string
          type: array
          x-go-name: Groups
        origin_ip:
          type: string
          x-go-name: OriginIP
        user_uuid:
          format: uuid
          type: string
          x-go-name: UserUuid
        username:
          type: string
          x-go-name: Username
        uuid:
          format: uuid
          type: string
          x-go-name: SessionUuid
      type: object
      x-go-name: SessionDetails
      x-go-package: github.com/cydarm/case-management/backend/model
    simpleObjectContainer:
      properties:
        acl:
          description: The ACL of the data object
          type: string
          x-go-name: ACL
        data:
          additionalProperties: {}
          description: The details about the object
          type: object
          x-go-name: Data
        deletable:
          description: Whether the data is deletable in the current context
          type: boolean
          x-go-name: Deletable
        editable:
          description: Whether the data is editable in the current context
          type: boolean
          x-go-name: Editable
        manageable:
          description: Whether the data is manageable in the current context
          type: boolean
          x-go-name: Manageable
        readable:
          description: Whether the data is readable in the current context
          type: boolean
          x-go-name: Readable
        uuid:
          description: The UUID of the object
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - readable
        - editable
        - manageable
        - deletable
        - uuid
        - data
      title: >-
        SimpleObjectContainer is a request to return contact details from  STIX
        node.
      type: object
      x-go-name: SimpleObjectContainer
      x-go-package: github.com/cydarm/case-management/backend/model
    sla:
      description: Sla is a container to handle the definition of a Service Level Agreement
      properties:
        aclUuid:
          description: The UUID of the ACL for the SLA
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: AclUuid
        applicability:
          description: The applicability, eg. 24x7x365 or business hours only)
          type: string
          x-go-name: Applicability
        completedTime:
          description: What time this SLA was completed for a case
          type: string
          x-go-name: CompletedTime
        deprecated:
          description: Whether this SLA is deprecated
          type: boolean
          x-go-name: Deprecated
        endState:
          description: The state at which the SLA is ended
          type: string
          x-go-name: EndState
        hoursApplicableEnd:
          description: The time at which the SLA is no longer enabled
          type: string
          x-go-name: HoursApplicableEnd
        hoursApplicableStart:
          description: The time from which the SLA is enabled
          type: string
          x-go-name: HoursApplicableStart
        hoursApplicableTz:
          description: The timezone from which the SLA is enabled
          type: string
          x-go-name: HoursApplicableTz
        name:
          description: The Name of this SLA (determined automatically if not provided)
          type: string
          x-go-name: Name
        orgUuid:
          description: The organisation for whom this SLA is in force
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: OrgUuid
        pauseStateName:
          description: A state for which the SLA is paused
          type: string
          x-go-name: PauseStateName
        pausedSince:
          description: When this SLA was paused for a case
          type: string
          x-go-name: PausedSince
        severityPrecedence:
          description: The precedence of the severity for the SLA
          format: int64
          type: integer
          x-go-name: SeverityPrecedence
        startState:
          description: The state from which the SLA is enabled
          type: string
          x-go-name: StartState
        startTime:
          description: What time this SLA was added to a case
          type: string
          x-go-name: StartTime
        timeLimit:
          description: The time limit associated with this SLA
          type: string
          x-go-name: TimeLimit
        timeRemaining:
          description: How much time is left in this SLA for a case
          type: string
          x-go-name: TimeRemaining
        uuid:
          description: The UUID of the SLA
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        version:
          description: The version of this SLA
          type: string
          x-go-name: Version
        warningState:
          description: The most severe warning state on this case, if any
          type: string
          x-go-name: WarningState
        warningTime:
          description: Distance from SLA breach (negative being after breach)
          type: string
          x-go-name: WarningTime
      required:
        - orgUuid
        - severityPrecedence
        - applicability
        - hoursApplicableStart
        - hoursApplicableEnd
        - hoursApplicableTz
        - timeLimit
        - startState
        - endState
        - aclUuid
      type: object
      x-go-name: Sla
      x-go-package: github.com/cydarm/case-management/backend/model
    slaWarning:
      description: >-
        SlaWarning is a container to define details of a warning related to a
        Service Level Agreement
      properties:
        aclUuid:
          description: The UUID of the ACL for the SLA Warning
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: AclUuid
        action:
          description: An action to perform (eg. send email)
          type: string
          x-go-name: Action
        actionDest:
          description: The destination for the action (eg. email address)
          type: string
          x-go-name: ActionDest
        deprecated:
          description: Whether this SLA Warning is deprecated
          type: boolean
          x-go-name: Deprecated
        level:
          description: The Level of warning (eg. info, warn, breach)
          type: string
          x-go-name: Level
        slaUuid:
          description: The UUID of the SLA
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: SlaUuid
        slaVersion:
          description: The UUID of the SLA
          format: int64
          type: integer
          x-go-name: SlaVersion
        timeRemainingSeconds:
          description: How much time is remaining (in seconds) when this warning triggers
          format: int64
          type: integer
          x-go-name: TimeRemainingSeconds
        uuid:
          description: The UUID of the SLA Warning
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - slaUuid
        - timeRemainingSeconds
        - level
        - aclUuid
      type: object
      x-go-name: SlaWarning
      x-go-package: github.com/cydarm/case-management/backend/model
    stixUpdateRequest:
      properties:
        Acl:
          description: The UUID of the new ACL
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        UserUuid:
          description: The UUID of the User
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        Uuid:
          description: The UUID of the STIX node to be updated
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        Value:
          description: The new value of the STIX item
          type: string
      required:
        - Uuid
      title: StixNodeUpdateRequest is a request to update a STIX node.
      type: object
      x-go-name: StixNodeUpdateRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    sysProp:
      description: sysProp is a system property
      properties:
        acl:
          description: The UUID of an ACL for this property
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        encryptionKey:
          $ref: '#/components/schemas/SecretKey'
        name:
          description: The name of the property
          type: string
          x-go-name: PropertyName
        uuid:
          description: The UUID of the property
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        value:
          description: The value of the property
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: PropertyValue
      required:
        - uuid
        - name
        - value
        - acl
      type: object
      x-go-name: SysProp
      x-go-package: github.com/cydarm/case-management/backend/model
    thirdpartyCache:
      properties:
        last_sync:
          $ref: '#/components/schemas/JSONTime'
        service:
          description: The third party service's name
          maxLength: 30
          minLength: 3
          type: string
          x-go-name: Service
        uuid:
          description: The third party service's internal UUID
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - service
      type: object
      x-go-name: ThirdPartyCache
      x-go-package: github.com/cydarm/case-management/backend/model
    thirdpartyCacheItem:
      properties:
        checksum:
          description: The item's latest SHA256 checksum
          type: string
          x-go-name: CheckSum
        external:
          description: Whether the item is from an external source
          type: boolean
          x-go-name: IsExternal
        foreign_id:
          description: The cached item's foreign id
          type: string
          x-go-name: ForeignId
        foreign_table:
          description: The cached item's foreign table/endpoint
          type: string
          x-go-name: ForeignTable
        local_case_uuid:
          description: The cached item's local case uuid mapping
          format: uuid
          type: string
          x-go-name: LocalCaseUuid
        local_table:
          description: The cached item's local table mapping
          type: string
          x-go-name: LocalTable
        local_uuid:
          description: The cached item's local uuid mapping
          format: uuid
          type: string
          x-go-name: LocalUuid
        org_name:
          description: Cache item case's organisation name
          type: string
          x-go-name: OrgName
        updated:
          $ref: '#/components/schemas/JSONTime'
        uuid:
          description: The cached item's UUID
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - local_table
        - local_case_uuid
        - foreign_table
        - foreign_id
        - checksum
      type: object
      x-go-name: ThirdPartyCacheItem
      x-go-package: github.com/cydarm/case-management/backend/model
    thirdpartyFullCache:
      properties:
        service_cache:
          items:
            $ref: '#/components/schemas/thirdpartyCacheItem'
          type: array
          x-go-name: Cache
        service_details:
          $ref: '#/components/schemas/thirdpartyCache'
      type: object
      x-go-name: ThirdpartyFullCache
      x-go-package: github.com/cydarm/case-management/backend/model
    timeToStateMetrics:
      description: Response from comparative MTTx endpoint
      properties:
        max_seconds:
          $ref: '#/components/schemas/JSONTimeDuration'
        mean_seconds:
          $ref: '#/components/schemas/JSONTimeDuration'
        median_seconds:
          $ref: '#/components/schemas/JSONTimeDuration'
        min_seconds:
          $ref: '#/components/schemas/JSONTimeDuration'
        number_cases:
          description: The number of cases the statistical figures are based on
          format: int64
          type: integer
          x-go-name: 'N'
        period:
          description: The timestamp of period start (as shown in UI)
          type: string
          x-go-name: Period
        q1_seconds:
          $ref: '#/components/schemas/JSONTimeDuration'
        q3_seconds:
          $ref: '#/components/schemas/JSONTimeDuration'
        std_dev_seconds:
          $ref: '#/components/schemas/JSONTimeDuration'
      type: object
      x-go-name: TimeToStateMetrics
      x-go-package: github.com/cydarm/case-management/backend/model
    timeToStateMetricsRequest:
      description: Request for comparative MTTx metrics
      properties:
        end_state:
          description: State to measure to
          type: string
          x-go-name: ToState
        filter_tags:
          description: Filter to cases which have these tags
          items:
            type: string
          type: array
          x-go-name: FilterTags
        include_end_state:
          description: Include time spend in target state
          type: boolean
          x-go-name: IncludeToStateTime
        include_start_state:
          description: Include time spent in starting state
          type: boolean
          x-go-name: IncludeFromStateTime
        orgs:
          description: Filter to which have these organisation
          items:
            format: uuid
            type: string
          type: array
          x-go-name: Orgs
        period_end:
          $ref: '#/components/schemas/JSONTime'
        period_start:
          $ref: '#/components/schemas/JSONTime'
        start_state:
          description: State to measure from
          type: string
          x-go-name: FromState
        time_increment:
          description: Reporting increment
          enum:
            - daily
            - weekly
            - monthly
            - quarterly
            - semi-annually
            - annually
          type: string
          x-go-name: Increment
        timezone:
          description: The timezone of the request datetime information
          type: string
          x-go-name: Timezone
      required:
        - period_start
        - period_end
        - time_increment
        - timezone
        - end_state
        - include_end_state
      type: object
      x-go-name: TimeToStateMetricsRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    trackedAction:
      description: TrackedAction is a record of a single action
      properties:
        Action:
          description: The type of action
          type: string
        CaseUuid:
          description: The UUID of the case
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        Current:
          description: The current state
          type: string
        Previous:
          description: The previous state
          type: string
        Time:
          description: The time that the action occurred
          type: string
        UserUuid:
          description: The UUID of the user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
        Uuid:
          description: The UUID of the tracked action
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
      required:
        - Uuid
        - CaseUuid
        - UserUuid
        - Action
        - Previous
        - Current
      type: object
      x-go-name: TrackedAction
      x-go-package: github.com/cydarm/case-management/backend/model
    updateActuatorRequest:
      properties:
        api_poll_rate:
          $ref: '#/components/schemas/Duration'
        config:
          $ref: '#/components/schemas/integrationConfigRequest'
        config_schema:
          $ref: '#/components/schemas/integrationConfigSchema'
        description:
          description: The updated description of the actuator
          type: string
          x-go-name: Description
        heartbeat_rate:
          $ref: '#/components/schemas/Duration'
        log_level:
          $ref: '#/components/schemas/LogLevel'
        status:
          $ref: '#/components/schemas/integrationStatus'
      type: object
      x-go-name: UpdateActuatorRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    updateConnectorRequest:
      properties:
        active:
          description: Whether the connector is active
          type: boolean
          x-go-name: Active
        config:
          $ref: '#/components/schemas/integrationConfigRequest'
        description:
          description: The updated description
          type: string
          x-go-name: Description
        status:
          $ref: '#/components/schemas/integrationStatus'
      type: object
      x-go-name: UpdateConnectorRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    user:
      description: User represents a user of the system
      properties:
        Id:
          format: int64
          type: integer
        aclUuid:
          description: The UUID of an ACL for this user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: AclUuid
        authSourceHandle:
          description: >-
            The user's idenifier on the authentication source where they come
            from
          minLength: 1
          type: string
          x-go-name: AuthSourceHandle
        authSourceId:
          description: The authentication source where the user comes from
          minLength: 1
          type: string
          x-go-name: AuthSourceId
        created:
          description: The time the user was created, as an ISO8601 timestamp
          format: date-time
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
        deleted:
          description: Whether the user has been deleted
          type: boolean
          x-go-name: Deleted
        email:
          description: The email address of the user
          minLength: 1
          type: string
          x-go-name: Email
        familyName:
          description: The family name of the user
          minLength: 1
          type: string
          x-go-name: FamilyName
        givenName:
          description: The given name of the user
          minLength: 1
          type: string
          x-go-name: GivenName
        groupUuid:
          description: The UUID of this user's personal group
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Group
        groupUuids:
          description: The UUIDs of the all of the user's groups
          items:
            format: uuid
            type: string
          type: array
          x-go-name: Groups
        human:
          description: Whether the user is a human
          type: boolean
          x-go-name: Human
        org:
          description: The UUID of the user's org
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Org
        phone:
          description: The phone number of the user
          minLength: 1
          type: string
          x-go-name: Phone
        username:
          description: The username (login name) of the user
          minLength: 1
          type: string
          x-go-name: Username
        uuid:
          description: The UUID of the user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
      required:
        - uuid
        - username
        - human
        - email
        - phone
        - givenName
        - familyName
        - created
        - authSourceId
        - authSourceHandle
        - aclUuid
        - deleted
      type: object
      x-go-name: User
      x-go-package: github.com/cydarm/case-management/backend/model
    userMetricsRecord:
      description: UserMetricsRecord is a metrics record pertaining to a user
      properties:
        locator:
          description: The locator of the case
          minLength: 6
          type: string
          x-go-name: Locator
        username:
          description: The username of the user
          type: string
          x-go-name: Username
        uuid:
          description: The UUID of the case
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        value:
          description: The value of the metric
          type: string
          x-go-name: Value
      required:
        - uuid
        - locator
        - value
        - username
      type: object
      x-go-name: UserMetricsRecord
      x-go-package: github.com/cydarm/case-management/backend/model
    userProp:
      description: UserProp is a record of a user property
      properties:
        acl:
          description: The UUID of an ACL for this property
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Acl
        encryptionKey:
          $ref: '#/components/schemas/SecretKey'
        name:
          description: The name of the property
          type: string
          x-go-name: PropertyName
        username:
          type: string
          x-go-name: UserName
        uuid:
          description: The UUID of the property
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        value:
          description: The value of the property
          items:
            format: uint8
            type: integer
          type: array
          x-go-name: PropertyValue
      required:
        - uuid
        - name
        - value
        - acl
      type: object
      x-go-name: UserProp
      x-go-package: github.com/cydarm/case-management/backend/model
    userTotpConfig:
      description: UserTotpConfig contains TOTP enrolled, required status
      properties:
        enrolled:
          description: Whether this is TOTP is enrolled
          type: boolean
          x-go-name: Enrolled
        required:
          description: Whether this is TOTP is required
          type: boolean
          x-go-name: Required
        userUuid:
          description: The UUID of the user
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: UserUuid
      required:
        - userUuid
      type: object
      x-go-name: UserTotpConfig
      x-go-package: github.com/cydarm/case-management/backend/model
    userUpdateRequest:
      description: UserUpdateRequest is used for updating an existing user
      properties:
        authSourceUserName:
          description: >-
            The user's identifier on the authentication source where they come
            from
          minLength: 1
          type: string
          x-go-name: AuthSourceHandle
        email:
          description: The email address of the user
          minLength: 1
          type: string
          x-go-name: Email
        familyName:
          description: The family name of the user
          minLength: 1
          type: string
          x-go-name: FamilyName
        givenName:
          description: The given name of the user
          minLength: 1
          type: string
          x-go-name: GivenName
        newPassword:
          description: The new password of the user
          minLength: 12
          type: string
          x-go-name: NewPassword
        phone:
          description: The phone number of the user
          minLength: 1
          type: string
          x-go-name: Phone
        userAccount:
          description: The account type of the user
          type: boolean
          x-go-name: UserAccount
        username:
          description: The username (login name) of the user
          minLength: 1
          type: string
          x-go-name: Username
      required:
        - username
        - givenName
        - familyName
        - phone
        - newPassword
      type: object
      x-go-name: UserUpdateRequest
      x-go-package: github.com/cydarm/case-management/backend/model
    watcher:
      description: Watchers are watching cases
      properties:
        acl_uuid:
          description: The watcher object's ACL
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: AclUuid
        case_uuid:
          description: The watched case's UUID
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: CaseUuid
        user_uuid:
          description: The watching user's UUID
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: UserUuid
        uuid:
          description: |-
            The UUID of the watcher
            required: falsee
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: Uuid
        watching_since:
          description: >-
            The time the watcher started watching the case, as an ISO8601
            timestamp
          maxLength: 25
          minLength: 25
          type: string
          x-go-name: Created
      required:
        - case_uuid
        - user_uuid
        - acl_uuid
      type: object
      x-go-name: Watcher
      x-go-package: github.com/cydarm/case-management/backend/model
    watcherSettings:
      properties:
        acl_uuid:
          description: The ACL to be applied to to the watcher
          format: uuid
          maxLength: 36
          minLength: 36
          type: string
          x-go-name: AclUuid
      type: object
      x-go-name: WatcherSettings
      x-go-package: github.com/cydarm/case-management/backend/model
    JsonApiType:
      type: string
    JsonApiToOneRelationship:
      example:
        data:
          lid: lid
          id: id
          type: type
        meta: '{}'
        links:
          next: next
          last: last
          prev: prev
          self: self
          first: first
      nullable: true
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        data:
          $ref: '#/components/schemas/JsonApiResourceId'
        meta:
          description: Non-standard meta-information about the relationship
          type: object
      type: object
    JsonApiToManyRelationship:
      nullable: true
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        data:
          items:
            $ref: '#/components/schemas/JsonApiResourceId'
          type: array
        meta:
          description: Non-standard meta-information about the relationship
          type: object
      type: object
    JsonApiResourceId:
      example:
        lid: lid
        id: id
        type: type
      nullable: true
      properties:
        type:
          type: string
        id:
          description: The UUID of the related object
          format: UuidPtr
          type: string
        lid:
          description: The local UUID of the related object, for creating new objects
          format: UuidPtr
          type: string
      type: object
    JsonApiLinks:
      example:
        next: next
        last: last
        prev: prev
        self: self
        first: first
      nullable: true
      properties:
        self:
          description: Link to this resource
          format: URL
          type: string
        first:
          description: Link to first page of resources, if this is a list
          format: URL
          type: string
        last:
          description: Link to last page of resources, if this is a list
          format: URL
          type: string
        prev:
          description: Link to previous page of resources, if this is a list
          format: URL
          type: string
        next:
          description: Link to next page of resources, if this is a list
          format: URL
          type: string
      type: object
    JsonApiError:
      example:
        code: code
        meta: '{}'
        id: id
        detail: detail
        source:
          pointer: pointer
          parameter: parameter
          header: header
        title: title
        status: status
      nullable: true
      properties:
        id:
          description: The UUID of the error
          format: UuidPtr
          type: string
        status:
          description: >-
            The HTTP status code applicable to this problem, expressed as a
            string value
          type: string
        code:
          description: An application-specific error code, expressed as a string value
          type: string
        title:
          description: A short, human-readable summary of the problem
          type: string
        detail:
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem
          type: string
        source:
          $ref: '#/components/schemas/JsonApiError_source'
        meta:
          description: Additional metadata fields
          type: object
      type: object
    JsonApiServerImpl:
      example:
        version: version
      nullable: true
      properties:
        version:
          description: The json:api spec version, eg. 1.1
          type: string
      type: object
    ObjectMetadataSet:
      description: Additional metadata fields
      example:
        editable: true
        creator_uuid: creator_uuid
        last_modifier_uuid: last_modifier_uuid
        deletable: true
        updatable: true
        last_modified_date: last_modified_date
        created_date: created_date
        manageable: true
      nullable: true
      properties:
        deletable:
          description: Whether the object can be deleted by the session
          type: boolean
        updatable:
          description: Whether the object can be updated by the session
          type: boolean
        editable:
          description: Whether the object can be edited by the session
          type: boolean
        manageable:
          description: Whether the object can be managed by the session
          type: boolean
        creator_uuid:
          description: The UUID of the creator of the object
          format: UuidPtr
          type: string
        created_date:
          description: The datetime when the object was created
          format: DateTime
          type: string
        last_modifier_uuid:
          description: The UUID of the last modifier of the object
          format: UuidPtr
          type: string
        last_modified_date:
          description: The datetime when the object was last modified
          format: DateTime
          type: string
      required:
        - deletable
        - editable
        - manageable
        - updatable
      type: object
    StatusMessage:
      properties:
        id:
          format: UuidPtr
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        details:
          type: string
        source:
          type: string
      type: object
    AtomicOperation:
      properties:
        op:
          description: The operation to perform
          type: string
        ref:
          $ref: '#/components/schemas/AtomicOperation_ref'
        href:
          description: A URI-reference that identifies the target of the operation
          type: string
        data:
          $ref: '#/components/schemas/AtomicOperation_data'
        meta:
          description: Additional metadata fields
          type: object
      required:
        - op
      type: object
    AtomicResult:
      properties:
        data:
          description: The result's primary data
          type: object
        meta:
          description: Additional metadata fields
          type: object
      type: object
    AtomicRequest:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        atomic:operations:
          description: A list of atomic operations
          items:
            $ref: '#/components/schemas/AtomicOperation'
          type: array
      type: object
    AtomicResponse:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        atomic:results:
          description: A list of atomic operation results
          items:
            $ref: '#/components/schemas/AtomicResult'
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
      type: object
    WikiPageStubResource:
      properties:
        type:
          type: string
        id:
          description: The UUID of the page
          format: UuidPtr
          type: string
        attributes:
          $ref: '#/components/schemas/WikiPageStubResource_attributes'
        relationships:
          $ref: '#/components/schemas/WikiPageStubResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    WikiPageObjectResource:
      nullable: true
      properties:
        type:
          type: string
        id:
          description: The UUID of the page
          format: UuidPtr
          type: string
        attributes:
          $ref: '#/components/schemas/WikiPageObjectResource_attributes'
        relationships:
          $ref: '#/components/schemas/WikiPageObjectResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    WikiPageListTopLevel:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: A list of objects related to this resource
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          description: List of objects in this resource
          items:
            $ref: '#/components/schemas/WikiPageStubResource'
          type: array
      type: object
    WikiPageTopLevel:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: A list of objects related to this resource
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          $ref: '#/components/schemas/WikiPageObjectResource'
      type: object
    ConnectorOperationTypeResource:
      nullable: true
      properties:
        type:
          type: string
        id:
          description: The UUID of the operation type
          format: UuidPtr
          type: string
        attributes:
          $ref: '#/components/schemas/ConnectorOperationTypeResource_attributes'
        relationships:
          $ref: '#/components/schemas/ConnectorOperationTypeResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    ConnectorOperationTypeRequestResource:
      nullable: true
      properties:
        type:
          type: string
        attributes:
          $ref: >-
            #/components/schemas/ConnectorOperationTypeRequestResource_attributes
        relationships:
          $ref: '#/components/schemas/ConnectorOperationTypeResource_relationships'
      type: object
    ConnectorOperationTypeUpdateRequestResource:
      nullable: true
      properties:
        type:
          type: string
        attributes:
          $ref: >-
            #/components/schemas/ConnectorOperationTypeUpdateRequestResource_attributes
        relationships:
          $ref: '#/components/schemas/ConnectorOperationTypeResource_relationships'
      type: object
    ConnectorOperationTypeListTopLevel:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: A list of objects related to this resource
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          description: List of objects in this resource
          items:
            $ref: '#/components/schemas/ConnectorOperationTypeResource'
          type: array
      type: object
    ConnectorOperationTypeTopLevel:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: A list of objects related to this resource
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          $ref: '#/components/schemas/ConnectorOperationTypeResource'
      type: object
    ConnectorOperationTypeRequestTopLevel:
      properties:
        data:
          $ref: '#/components/schemas/ConnectorOperationTypeRequestResource'
      type: object
    ConnectorOperationTypeUpdateRequestTopLevel:
      properties:
        data:
          $ref: '#/components/schemas/ConnectorOperationTypeUpdateRequestResource'
      type: object
    EventTriggerTopLevel:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: A list of objects related to this resource
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          $ref: '#/components/schemas/EventTriggerResource'
      type: object
    EventTriggerListTopLevel:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: A list of objects related to this resource
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          description: A list of event triggers
          items:
            $ref: '#/components/schemas/EventTriggerResource'
          type: array
      type: object
    EventTriggerResource:
      nullable: true
      properties:
        type:
          type: string
        id:
          description: The UUID of the trigger
          format: UuidPtr
          type: string
        attributes:
          $ref: '#/components/schemas/EventTriggerResource_attributes'
        relationships:
          $ref: '#/components/schemas/EventTriggerResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    EventTriggerRequestTopLevel:
      properties:
        data:
          $ref: '#/components/schemas/EventTriggerRequestResource'
      type: object
    EventTriggerRequestResource:
      nullable: true
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/EventTriggerResource_attributes'
        relationships:
          $ref: '#/components/schemas/EventTriggerResource_relationships'
      type: object
    EventTriggerPatchTopLevel:
      properties:
        data:
          $ref: '#/components/schemas/EventTriggerPatchResource'
      type: object
    EventTriggerPatchResource:
      nullable: true
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/EventTriggerPatchResource_attributes'
        relationships:
          $ref: '#/components/schemas/EventTriggerResource_relationships'
      type: object
    CaseResource:
      properties:
        type:
          type: string
        id:
          description: The UUID of the case
          format: UuidPtr
          type: string
        attributes:
          $ref: '#/components/schemas/CaseResource_attributes'
        relationships:
          $ref: '#/components/schemas/CaseResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    CaseUpdateResource:
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/CaseUpdateResource_attributes'
        relationships:
          $ref: '#/components/schemas/CaseUpdateResource_relationships'
      type: object
    CaseDataRequestResource:
      nullable: true
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/CaseDataRequestResource_attributes'
        relationships:
          $ref: '#/components/schemas/CaseDataRequestResource_relationships'
      type: object
    CaseDataRequestTopLevel:
      properties:
        data:
          $ref: '#/components/schemas/CaseDataRequestResource'
      type: object
    CaseDataTopLevel:
      example:
        jsonapi:
          version: version
        data:
          relationships:
            editor:
              data:
                lid: lid
                id: id
                type: type
              meta: '{}'
              links:
                next: next
                last: last
                prev: prev
                self: self
                first: first
            creator:
              data:
                lid: lid
                id: id
                type: type
              meta: '{}'
              links:
                next: next
                last: last
                prev: prev
                self: self
                first: first
            parent_data:
              data:
                lid: lid
                id: id
                type: type
              meta: '{}'
              links:
                next: next
                last: last
                prev: prev
                self: self
                first: first
            acl:
              data:
                lid: lid
                id: id
                type: type
              meta: '{}'
              links:
                next: next
                last: last
                prev: prev
                self: self
                first: first
            parent_case:
              data:
                lid: lid
                id: id
                type: type
              meta: '{}'
              links:
                next: next
                last: last
                prev: prev
                self: self
                first: first
          meta:
            editable: true
            creator_uuid: creator_uuid
            last_modifier_uuid: last_modifier_uuid
            deletable: true
            updatable: true
            last_modified_date: last_modified_date
            created_date: created_date
            manageable: true
          attributes:
            data_size: 6
            data_location_type: data_location_type
            sig_precedence: sig_precedence
            hidden: true
            edited: true
            created: created
            creator_username: creator_username
            file_name: file_name
            version: 0
            data_location: data_location
            data_source: data_source
            significance: significance
            deleted: true
            editor_username: editor_username
            mime_type: mime_type
            audit: true
            location: location
            last_modified: last_modified
          id: id
          type: type
        links:
          next: next
          last: last
          prev: prev
          self: self
          first: first
        included:
          - '{}'
          - '{}'
        errors:
          - code: code
            meta: '{}'
            id: id
            detail: detail
            source:
              pointer: pointer
              parameter: parameter
              header: header
            title: title
            status: status
          - code: code
            meta: '{}'
            id: id
            detail: detail
            source:
              pointer: pointer
              parameter: parameter
              header: header
            title: title
            status: status
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: A list of objects related to this resource
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          $ref: '#/components/schemas/CaseDataResource'
      type: object
    CaseDataResource:
      example:
        relationships:
          editor:
            data:
              lid: lid
              id: id
              type: type
            meta: '{}'
            links:
              next: next
              last: last
              prev: prev
              self: self
              first: first
          creator:
            data:
              lid: lid
              id: id
              type: type
            meta: '{}'
            links:
              next: next
              last: last
              prev: prev
              self: self
              first: first
          parent_data:
            data:
              lid: lid
              id: id
              type: type
            meta: '{}'
            links:
              next: next
              last: last
              prev: prev
              self: self
              first: first
          acl:
            data:
              lid: lid
              id: id
              type: type
            meta: '{}'
            links:
              next: next
              last: last
              prev: prev
              self: self
              first: first
          parent_case:
            data:
              lid: lid
              id: id
              type: type
            meta: '{}'
            links:
              next: next
              last: last
              prev: prev
              self: self
              first: first
        meta:
          editable: true
          creator_uuid: creator_uuid
          last_modifier_uuid: last_modifier_uuid
          deletable: true
          updatable: true
          last_modified_date: last_modified_date
          created_date: created_date
          manageable: true
        attributes:
          data_size: 6
          data_location_type: data_location_type
          sig_precedence: sig_precedence
          hidden: true
          edited: true
          created: created
          creator_username: creator_username
          file_name: file_name
          version: 0
          data_location: data_location
          data_source: data_source
          significance: significance
          deleted: true
          editor_username: editor_username
          mime_type: mime_type
          audit: true
          location: location
          last_modified: last_modified
        id: id
        type: type
      properties:
        type:
          type: string
        id:
          description: The UUID of the data stub
          format: UuidPtr
          type: string
        attributes:
          $ref: '#/components/schemas/CaseDataResource_attributes'
        relationships:
          $ref: '#/components/schemas/CaseDataResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    RiskResource:
      nullable: true
      properties:
        type:
          type: string
        id:
          description: The UUID of the risk
          format: UuidPtr
          type: string
        attributes:
          $ref: '#/components/schemas/RiskResource_attributes'
        relationships:
          $ref: '#/components/schemas/RiskResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    RiskRequestResource:
      description: Used to create a new risk, or update an existing risk
      nullable: true
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/RiskRequestResource_attributes'
        relationships:
          $ref: '#/components/schemas/RiskRequestResource_relationships'
      type: object
    RiskAssessmentResource:
      nullable: true
      properties:
        type:
          type: string
        id:
          description: The UUID of the risk
          format: UuidPtr
          type: string
        attributes:
          $ref: '#/components/schemas/RiskAssessmentResource_attributes'
        relationships:
          $ref: '#/components/schemas/RiskAssessmentResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    RiskAssessmentRequestResource:
      description: Used to create or update a risk assessment
      nullable: true
      properties:
        type:
          type: string
        attributes:
          $ref: '#/components/schemas/RiskAssessmentRequestResource_attributes'
        relationships:
          $ref: '#/components/schemas/RiskAssessmentResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    RiskGetTopLevel:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: >-
            A list of objects related to the risk, for example its org, acl, or
            risk assessments
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          $ref: '#/components/schemas/RiskResource'
      type: object
    RiskListTopLevel:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: >-
            A list of objects related to this resource, for example the orgs,
            acls, or risk assessments associated with the risks
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          description: List of risk objects
          items:
            $ref: '#/components/schemas/RiskResource'
          type: array
      type: object
    RiskRequestTopLevel:
      description: Used to create a new risk, or update an existing risk
      properties:
        data:
          $ref: '#/components/schemas/RiskRequestResource'
      type: object
    RiskAssessmentRequestTopLevel:
      description: Used to create or update a risk assessment
      properties:
        data:
          $ref: '#/components/schemas/RiskAssessmentRequestResource'
      type: object
    RiskAssessmentGetTopLevel:
      properties:
        links:
          $ref: '#/components/schemas/JsonApiLinks'
        jsonapi:
          $ref: '#/components/schemas/JsonApiServerImpl'
        included:
          description: >-
            A list of objects related to the risk assessment, for example its
            acl, or risk
          items:
            type: object
          type: array
        errors:
          description: A list of error objects
          items:
            $ref: '#/components/schemas/JsonApiError'
          type: array
        data:
          $ref: '#/components/schemas/RiskAssessmentResource'
      type: object
    UserResource:
      nullable: true
      properties:
        type:
          type: string
        id:
          description: The UUID of the user
          format: UuidPtr
          type: string
        attributes:
          $ref: '#/components/schemas/UserResource_attributes'
        relationships:
          $ref: '#/components/schemas/UserResource_relationships'
        meta:
          $ref: '#/components/schemas/ObjectMetadataSet'
      type: object
    JsonApiError_source:
      example:
        pointer: pointer
        parameter: parameter
        header: header
      nullable: true
      properties:
        pointer:
          description: >-
            A JSON Pointer [RFC6901] to the value in the request document that
            caused the error
          type: string
        parameter:
          description: A string indicating which URI query parameter caused the error
          type: string
        header:
          description: >-
            A string indicating the name of a single request header which caused
            the erro
          type: string
      type: object
    AtomicOperation_ref:
      properties:
        type:
          description: The JSONAPI type of the resource to add, remove or update
          type: string
        id:
          description: The UUID of the resource to add, remove or update
          format: UuidPtr
          type: string
        lid:
          description: The UUID of the locally-defined resource to add, remove or update
          format: UuidPtr
          type: string
        relationship:
          description: The relationship to add, remove or update
          type: string
      type: object
    AtomicOperation_data:
      description: The operation's primary data
      properties:
        id:
          description: The UUID of the resource to add, remove or update
          format: UuidPtr
          type: string
        type:
          description: The type of the resource to add, remove or update
          type: string
        attributes:
          description: The attributes of the resource add or update
          type: object
        relationships:
          description: The relationships of the resource to add, remove or update
          type: object
      type: object
    WikiPageStubResource_attributes:
      properties:
        title:
          description: The title of the page
          type: string
        mime_type:
          description: The MIME type of the content
          type: string
        file_name:
          description: The file name of this content, if it is an attachment
          type: string
        precedence:
          description: The order of this page relative to other pages with the same parent
          type: integer
      type: object
    WikiPageStubResource_relationships:
      nullable: true
      properties:
        parent:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
      type: object
    WikiPageObjectResource_attributes:
      properties:
        title:
          description: The title of the page
          type: string
        content:
          description: The full content of the page
          format: Byte
          type: string
        mime_type:
          description: The MIME type of the content
          type: string
        file_name:
          description: The file name of this content, if it is an attachment
          type: string
        precedence:
          description: The order of this page relative to other pages with the same parent
          type: integer
      type: object
    WikiPageObjectResource_relationships:
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        parent:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        children:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
        attachments:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
        creator:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
      type: object
    ConnectorOperationTypeResource_attributes:
      properties:
        name:
          description: The name of the operation type
          type: string
        display_name:
          description: The display name of the operation type
          type: string
        description:
          description: A description of the operation type
          type: string
        arguments_schema:
          description: The argument schema
          type: object
        api_access:
          description: Whether the operation type needs API access
          type: boolean
      type: object
    ConnectorOperationTypeResource_relationships:
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
      type: object
    ConnectorOperationTypeRequestResource_attributes:
      properties:
        name:
          description: The name of the operation type
          minLength: 1
          type: string
        display_name:
          description: The display name of the operation type
          minLength: 1
          type: string
        description:
          description: A description of the operation type
          type: string
        arguments_schema:
          description: The argument schema
          type: object
        api_access:
          description: Whether the operation type needs API access
          type: boolean
      type: object
    ConnectorOperationTypeUpdateRequestResource_attributes:
      properties:
        display_name:
          description: The display name of the operation type
          minLength: 1
          type: string
        description:
          description: A description of the operation type
          type: string
        arguments_schema:
          description: The argument schema
          type: object
        api_access:
          description: Whether the operation type needs API access
          type: boolean
      type: object
    EventTriggerResource_attributes:
      properties:
        name:
          description: The name of the trigger
          type: string
        description:
          description: The description of the trigger
          type: string
        active:
          description: Whether the trigger is active
          type: boolean
        event_type:
          description: The type of event to use to launch the trigger
          type: string
        condition:
          description: The condition defining when the event should be triggered
          format: Byte
          type: string
        operation_arguments:
          description: The arguments to the operation
          type: object
        easy_connect:
          description: >-
            Whether the trigger was created by, and editable in, the easy
            connect UI
          type: boolean
      type: object
    EventTriggerResource_relationships:
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        operation_type:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        connector:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
      type: object
    EventTriggerPatchResource_attributes:
      properties:
        name:
          description: The name of the trigger
          nullable: true
          type: string
        description:
          description: The description of the trigger
          nullable: true
          type: string
        active:
          description: Whether the trigger is active
          nullable: true
          type: boolean
        event_type:
          description: The type of event to use to launch the trigger
          nullable: true
          type: string
        condition:
          description: The condition defining when the event should be triggered
          format: Byte
          type: string
        operation_arguments:
          description: The arguments to the operation
          type: object
        easy_connect:
          description: >-
            Whether the trigger was created by, and editable in, the easy
            connect UI
          nullable: true
          type: boolean
      type: object
    CaseResource_attributes:
      properties:
        locator:
          description: The case locator
          type: string
        description:
          description: The case description, as UTF-8 text
          type: string
        severity:
          description: The severity label of the case, e.g. Low
          type: string
        state:
          description: The workflow state of the case as text, e.g. Triage
          type: string
      type: object
    CaseResource_relationships:
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        member_cases:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
        assignee:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        tags:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
        metadata:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
        organization:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
      type: object
    CaseUpdateResource_attributes:
      properties:
        severity:
          description: The updated severity of the case, e.g. Low
          nullable: true
          type: string
        state:
          description: The updated workflow state of the case, e.g., Triage
          nullable: true
          type: string
      type: object
    CaseUpdateResource_relationships:
      nullable: true
      properties:
        assignee:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        tags:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        member_cases:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
      type: object
    CaseDataRequestResource_attributes:
      properties:
        mime_type:
          description: The MIME type of the data
          type: string
        payload:
          description: The base-64 encoded data payload
          format: Byte
          type: string
        significance:
          description: The significance of the data
          type: string
        file_name:
          description: The name of the file being uploaded
          type: string
        data_source:
          description: Where the data came from
          type: string
        encryption_key:
          description: The identifier of an encryption key to use on this data
          type: string
        hidden:
          description: Is this data item hidden
          type: boolean
      type: object
    CaseDataRequestResource_relationships:
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        parent_data:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        parent_case:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
      type: object
    CaseDataResource_attributes:
      example:
        data_size: 6
        data_location_type: data_location_type
        sig_precedence: sig_precedence
        hidden: true
        edited: true
        created: created
        creator_username: creator_username
        file_name: file_name
        version: 0
        data_location: data_location
        data_source: data_source
        significance: significance
        deleted: true
        editor_username: editor_username
        mime_type: mime_type
        audit: true
        location: location
        last_modified: last_modified
      properties:
        version:
          description: The version of the data item
          type: integer
        created:
          description: The time the item was created, as an ISO8601 timestamp
          type: string
        creator_username:
          description: The name of the creator user
          type: string
        mime_type:
          description: The Mime type of the data
          type: string
        file_name:
          description: The file name of the data, if it is a file
          type: string
        data_size:
          description: The size of the data, in bytes
          type: integer
        data_source:
          description: Where the data came from
          type: string
        location:
          description: How the data is identiifed in the location where the data came from
          type: string
        data_location:
          description: >-
            The idenitifier used to identify the data where the data is stored
            now
          type: string
        data_location_type:
          description: Where the data is stored now
          type: string
        significance:
          description: The signficance level of the data item
          type: string
        sig_precedence:
          description: The precedence of the significance of the data item
          type: string
        audit:
          description: Is this data item an audit message
          type: boolean
        deleted:
          description: Has this data item been deleted
          type: boolean
        edited:
          description: Has this data been edited
          type: boolean
        editor_username:
          description: The name of the editor user
          type: string
        last_modified:
          description: The time the item was last modified, as an ISO8601 timestamp
          type: string
        hidden:
          description: Is this data item hidden
          type: boolean
      type: object
    CaseDataResource_relationships:
      example:
        editor:
          data:
            lid: lid
            id: id
            type: type
          meta: '{}'
          links:
            next: next
            last: last
            prev: prev
            self: self
            first: first
        creator:
          data:
            lid: lid
            id: id
            type: type
          meta: '{}'
          links:
            next: next
            last: last
            prev: prev
            self: self
            first: first
        parent_data:
          data:
            lid: lid
            id: id
            type: type
          meta: '{}'
          links:
            next: next
            last: last
            prev: prev
            self: self
            first: first
        acl:
          data:
            lid: lid
            id: id
            type: type
          meta: '{}'
          links:
            next: next
            last: last
            prev: prev
            self: self
            first: first
        parent_case:
          data:
            lid: lid
            id: id
            type: type
          meta: '{}'
          links:
            next: next
            last: last
            prev: prev
            self: self
            first: first
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        parent_data:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        parent_case:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        creator:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        editor:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
      type: object
    RiskResource_attributes:
      properties:
        locator:
          description: The unique locator for this risk
          type: string
        title:
          description: The title of this risk
          type: string
        deleted:
          description: Whether this risk has been deleted
          type: boolean
      type: object
    RiskResource_relationships:
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        org:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        assessment:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        history:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
      type: object
    RiskRequestResource_attributes:
      properties:
        title:
          description: The title of the new  risk
          type: string
      type: object
    RiskRequestResource_relationships:
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        org:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
      type: object
    RiskAssessmentResource_attributes:
      properties:
        title:
          type: string
        description:
          type: string
        status:
          description: either "Open" or "Closed"
          enum:
            - Open
            - Closed
          type: string
        latest:
          description: Whether this is the latest risk assessment on this risk
          type: boolean
        consequence_label:
          description: The predicted consequence of this risk
          type: string
        consequence_category:
          description: The consequence category
          type: string
        likelihood:
          description: The likelihood of this risk
          type: string
        risk_matrix:
          description: The risk matrix used to compute the risk
          type: object
        risk_label:
          description: The assessed risk level
          type: string
        review_date:
          description: The review date for this assessment
          format: DateTime
          type: string
        controls:
          description: The controls
          type: string
        deleted:
          description: Whether this assessment has been deleted
          type: boolean
      type: object
    RiskAssessmentResource_relationships:
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        risk:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        assignee:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        risk_owner:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        cases:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
        tags:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
      type: object
    RiskAssessmentRequestResource_attributes:
      properties:
        title:
          description: The title of this assessment
          type: string
        description:
          type: string
        consequence_label:
          description: The predicted consequence of this risk
          type: string
        consequence_category:
          description: The consequence category
          type: string
        likelihood:
          description: The likelihood of this risk
          type: string
        review_date:
          description: The review date for this assessment
          format: DateTime
          type: string
        status:
          description: either "Open" or "Closed"
          enum:
            - Open
            - Closed
          type: string
        controls:
          description: The controls
          type: string
      type: object
    UserResource_attributes:
      properties:
        username:
          description: The user's username
          type: string
        human:
          description: Whether the user is a human
          type: boolean
        email_address:
          description: The user's email address
          type: string
        phone_number:
          description: The user's phone number
          type: string
        given_name:
          description: The user's given name
          type: string
        family_name:
          description: The user's family name
          type: string
        deleted:
          description: Whether the user has been deleted
          type: boolean
      type: object
    UserResource_relationships:
      nullable: true
      properties:
        acl:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        personal_group:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
        groups:
          $ref: '#/components/schemas/JsonApiToManyRelationship'
        org:
          $ref: '#/components/schemas/JsonApiToOneRelationship'
      type: object
  securitySchemes:
    api_key:
      in: header
      name: X-Cydarm-Authz
      type: apiKey
  parameters:
    Uuid:
      $ref: '#/components/parameters/uuid'
    Query:
      $ref: '#/components/parameters/query'
    PageNumber:
      $ref: '#/components/parameters/page-number'
    PageSize:
      $ref: '#/components/parameters/page-size'
    Include:
      $ref: '#/components/parameters/include'
    Accept:
      $ref: '#/components/parameters/accept'
    query:
      description: The search query
      in: query
      name: q
      required: true
      schema:
        type: string
    page-number:
      description: The results page to return
      in: query
      name: page[number]
      required: true
      schema:
        type: integer
    page-size:
      description: The size of each page to return
      in: query
      name: page[size]
      required: true
      schema:
        type: integer
    include:
      description: Which additional objects to include
      in: query
      name: include
      required: false
      schema:
        items:
          type: string
        type: array
    uuid:
      description: The resource UUID
      in: path
      name: uuid
      required: true
      schema:
        format: UuidPtr
        type: string
    accept:
      description: The Accept header
      in: header
      name: Accept
      required: false
      schema:
        type: string
x-tagGroups:
  - name: Cydarm API
    tags:
      - acl
      - case
      - actuator
      - auth
      - case-cache
      - case-severity
      - case-status
      - case-tag
      - sla
      - data
      - connector
      - connector-type
      - form
      - group
      - meta
      - metrics
      - report
      - notify
      - org
      - org-prop
      - playbook
      - playbook-action
      - resource
      - stix
      - sys-prop
      - third-party
      - user
      - user-prop
      - wiki
      - risk
      - connector-operation-type
      - event-trigger
      - case-data
      - operations
